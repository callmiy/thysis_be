{"version":3,"sources":["graphql/utils.ts","utils/colors.ts","components/Header/header.utils.ts","components/Header/component.tsx","components/Header/index.ts","components/AppSidebar/app-sidebar.ts","graphql/tag.mutation.ts","components/NewTagModalForm/utils.ts","components/NewTagModalForm/index.ts","components/NewTagModalForm/component.tsx","components/TagsModal/component.tsx","components/TagsModal/index.ts","components/SourcesModal/component.tsx","components/SourcesModal/index.ts","components/NewSourceTypeModal/new-source-type-modal.ts","components/NewSourceTypeModal/component.tsx","graphql/create-source-type.mutation.ts","components/NewSourceTypeModal/index.ts","components/AppSidebar/component.tsx","components/AppSidebar/index.ts","graphql/ops.types.ts","components/NewAuthorModal/new-author-modal.ts","components/NewAuthorModal/component.tsx","graphql/create-author.mutation.ts","graphql/update-author.mutation.ts","components/NewAuthorModal/index.ts","components/SourceModal/styles.ts","components/SourceModal/source-modal.ts","components/SourceModal/component.tsx","graphql/source.mutation.ts","components/SourceModal/index.ts","components/SourceTypeControl/component.tsx","components/SourceTypeControl/index.ts","components/AuthorsControl/component.tsx","components/AuthorsControl/index.ts"],"names":["__webpack_require__","d","__webpack_exports__","authorFullName","sourceDisplay","author","lastName","firstName","middleName","filter","v","join","authorDisplay","display","charAt","split","forEach","mName","source","authors","map","year","concat","topic","publication","url","sourceType","name","ERROR_COLOR","ERROR_BG_COLOR","SUCCESS_COLOR","SUCCESS_BG_COLOR","INITIAL_STATE","showingSidebar","Header","state","renderWithContext","context","_this$props","_this","props","_this$props$className","className","style","currentProject","title","path","match","showSideBarTrigger","onShowClicked","minWidth600","showSidebar","show","react","onClick","Icon","ROOT_URL","NavLink","to","makeNewQuoteURL","app_utils","this","React","currentProjectGql","graphql","CURRENT_PROJECT_LOCAL_QUERY","data","compose","withRouter","initialState","modalState","newTag","newSource","tagList","tagMut","gql","_templateObject","tagFrag","text","formError","undefined","submitting","submitSuccess","NewTagModalForm","_React$Component","_getPrototypeOf2","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","renderErrorOrSuccess","_this$state","react_default","a","createElement","Message","icon","error","Content","message","success","content","reset","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","dismissModal","stop","handleFocus","setState","handleChange","e","target","s","update","defineProperty","$set","value","handleSubmit","createTag","_callee2","_context2","t0","writeTagsToCache","_ref4","_callee3","cache","_ref3","tag","query","tagsQuery","_context3","abrupt","onTagCreated","TAGS_QUERY","readQuery","writeQuery","objectSpread","tags","$push","startsWith","_x","_x2","inherits","createClass","key","_this2","open","_this$state2","question","Modal","background","basic","size","dimmer","onClose","Form","Field","control","Input","placeholder","label","fluid","onChange","onFocus","justifyContent","marginTop","Button","id","color","disabled","react_apollo_browser_umd","mutation","TAG_MUTATION","variables","inverted","loading","Component","TagsModal","renderTags","_ref","Loader","active","List","divided","relaxed","renderTag","Item","navigateTo","paddingLeft","fontStyle","resetModal","history","push","makeTagURL","ops_types","dataProps","SourcesModal","renderSources","_this$props2","sources","renderSource","makeSourceURL","reshapeSource","sourcesGraphQl","SOURCES_QUERY","reshapeSources","options","_ref2","projectId","projectLocalGql","PROJECT_LOCAL_QUERY","initialFormValues","graphQlError","NewSourceTypeModal","validate","values","errors","_arr","keys","_i","toUpperCase","slice","trim","validateName","onResetClicked","submit","formikBag","setSubmitting","createSourceType","resetForm","renderForm","handleReset","dirty","isSubmitting","disableSubmit","isEmpty","onSubmit","_data","slicedToArray","formik_esm","render","renderInput","type","formProps","field","form","booleanError","touched","assign","autoComplete","onBlur","handleFormControlBlur","padding","marginBottom","header","setFieldTouched","initialValues","enableReinitialize","create_source_type_mutation_templateObject","sourceTypeFrag","userLocalGql","USER_LOCAL_QUERY","createSourceTypeGql","CREATE_SOURCE_TYPE_MUTATION","mutate","ownProps","user","client","newSourceTypeData","newSourceType","SOURCE_TYPES_QUERY","newData","sourceTypes","AUTH_URLS","LOGIN_URL","USER_REG_URL","AppSideBar","renderSideBar","pushableClassName","Sidebar","Pushable","as","Segment","Menu","animation","onHide","hideSidebar","vertical","visible","PROJECTS_URL","SEARCH_QUOTES_URL","toggleModalState","MenuItemNames","NEW_SOURCE","NEW_AUTHOR","NEW_TAG","NEW_SOURCE_TYPE","TAG_LIST","SOURCE_LIST","includes","logout","Pusher","height","children","components_NewTagModalForm","SourceModal","components_NewSourceTypeModal","components_SourcesModal","components_TagsModal","NewAuthorModal","modal","replace","_this$context","currentProjectLocalGql","userLocalMutationGql","TagsMinimalQueryComponent","_Query","F_projects_thysis_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","F_projects_thysis_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","F_projects_thysis_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","F_projects_thysis_client_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__","Query","GetAllAuthorsQueryComponent","_Query2","SourceTypeQueryComponent","_Query4","TagQuoteQueryComponent","_Query5","FORM_OUTPUT_KEY","initialFormOutput","_initialFormOutput","LAST_NAME","FIRST_NAME","MIDDLE_NAMES","createdAuthors","contentRef","createRef","renderContent","renderError","validateLastName","validateFirstName","validateMiddleName","onAuthorCreated","createAuthor","authorUpdate","authorCreated","createdAuthor","authorUpdated","eliminateEmptyFields","sent","handleAuthorCreated","prepFormForUpdate","updateAuthor","dirtyOrSubmitting","_arr2","entries","_i2","_ref5","k","val","_arr3","_i3","_ref8","_ref7","initStateWithAuthor","start","renderAuthorCreated","len","compact","showCreateSourceModal","renderAuthor","showSourceModal","current","scrollTop","ref","authorFrag","update_author_mutation_templateObject","createAuthorGql","CREATE_AUTHOR_MUTATION","_props$ownProps","userId","_update2","store","newAuthorData","newAuthor","msg","AUTHORS_QUERY","currentProLocalGql","CURRENT_PROJECT_QUERY","authorUpdateGql","AUTHOR_UPDATE_MUTATION","NewAuthorForm","jss","setup","preset","styles","overflowX","overflowY","paddingRight","fieldWrapper","formButtonsContainer","submitButton","margin","successCard","backgroundColor","boxShadow","errorMessage","position","top","modalStyle","classes","createStyleSheet","attach","formikConfig","_handleSubmit","mapPropsToValues","formAuthors","fullName","createSource","result","renderSourceTypeControl","renderAuthorsControl","renderTextControl","Card","Description","extra","goToSource","_formProps$field","SourceTypeControlComponent","selectError","handleBlur","handleControlChange","renderFieldError","_formProps$field2","AuthorsControlComponent","renderTextControlFormik","setFieldValue","_this$props3","toggleModal","sourceMut","sourceFullFrag","currentProjGql","createSourceGraphql","CREATE_SOURCE_MUTATION","sourceTypeId","authorIds","sourceData","withFormik","SOURCE_TYPE_QUERY","react_select_es","labelKey","valueKey","AuthorsControl","Loading","reduce","acc","multi","autoBlur"],"mappings":"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","file":"static/js/2.8cfc0eb1.chunk.js","sourcesContent":["import { SourceFullFrag, AuthorFrag } from \"./gen.types\";\n\nexport type AuthorWithFullName = AuthorFrag & {\n  fullName: string;\n};\n\nexport const authorFullName = (author: AuthorFrag) =>\n  [author.lastName, author.firstName, author.middleName]\n    .filter(v => !!v)\n    .join(\" \");\n\nexport const authorDisplay = (author: AuthorFrag | null) => {\n  if (!author) {\n    return \"\";\n  }\n\n  let display = \"\";\n\n  if (author.firstName) {\n    display += author.firstName.charAt(0);\n  }\n\n  if (author.middleName) {\n    author.middleName.split(\" \").forEach(mName => (display += mName.charAt(0)));\n  }\n\n  return display ? author.lastName + \" \" + display : author.lastName;\n};\n\nexport const sourceDisplay = (source: SourceFullFrag) => {\n  let display = source.authors.map(authorDisplay).join(\", \");\n\n  if (source.year) {\n    display += ` (${source.year})`;\n  }\n\n  display += \", \" + source.topic;\n\n  if (source.publication) {\n    display += \", \" + source.publication;\n  }\n\n  if (source.url) {\n    display += \" , \" + source.url;\n  }\n\n  display += \" | \" + source.sourceType.name;\n\n  return display;\n};\n","export const ERROR_COLOR = \"#9f3a38\";\nexport const ERROR_BG_COLOR = \"#fff6f6\";\nexport const SUCCESS_COLOR = \"#2c662d\";\nexport const SUCCESS_BG_COLOR = \"#f8f8f9\";\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\nimport { CurrentProjectLocalData } from \"../../state/project.local.query\";\n\nexport type Props = RouteComponentProps<{}> &\n  CurrentProjectLocalData & {\n    title: string;\n    style?: React.CSSProperties;\n    className?: string;\n    showSideBarTrigger?: boolean;\n  };\n\nexport interface State {\n  showingSidebar: boolean;\n}\n\nexport const INITIAL_STATE: State = {\n  showingSidebar: false\n};\n","import * as React from \"react\";\nimport { Icon } from \"semantic-ui-react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport \"./header.scss\";\nimport { Props, State, INITIAL_STATE } from \"./header.utils\";\nimport {\n  AppSidebarConsumer,\n  SideBarContextProps\n} from \"../../containers/App/app.utils\";\nimport { ROOT_URL, makeNewQuoteURL } from \"../../routes/util\";\n\nexport default class Header extends React.Component<Props, State> {\n  state = INITIAL_STATE;\n\n  render() {\n    return <AppSidebarConsumer>{this.renderWithContext}</AppSidebarConsumer>;\n  }\n\n  private renderWithContext = (context: SideBarContextProps) => {\n    const {\n      className = \"\",\n      style,\n      currentProject,\n      title,\n      match: { path },\n      showSideBarTrigger\n    } = this.props;\n\n    const { onShowClicked, minWidth600, showSidebar } = context;\n    const show = minWidth600 ? !showSidebar : true;\n\n    return (\n      <div className={`${className} src-components-header`} style={style}>\n        <div className=\"top\">\n          {showSideBarTrigger && show && (\n            <a className=\"sidebar-trigger item\" onClick={onShowClicked}>\n              <Icon name=\"content\" />\n            </a>\n          )}\n\n          <div className=\"title\">{title}</div>\n        </div>\n\n        {currentProject && (\n          <div className=\"bottom\">\n            {path === ROOT_URL ? (\n              <span className=\"project-title\">{currentProject.title}</span>\n            ) : (\n              <NavLink to={makeNewQuoteURL()} className=\"project-title\">\n                {currentProject.title}\n              </NavLink>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  };\n}\n","import { graphql, compose } from \"react-apollo\";\nimport { withRouter } from \"react-router-dom\";\n\nimport Header from \"./component\";\nimport CURRENT_PROJECT_LOCAL_QUERY, {\n  CurrentProjectLocalData\n} from \"../../state/project.local.query\";\nimport { Props } from \"./header.utils\";\n\nconst currentProjectGql = graphql<\n  Props,\n  CurrentProjectLocalData,\n  {},\n  CurrentProjectLocalData | void\n>(CURRENT_PROJECT_LOCAL_QUERY, {\n  props: props => props.data\n});\n\nexport default compose(\n  withRouter,\n  currentProjectGql\n)(Header);\n","import { RouteComponentProps } from \"react-router\";\n\nimport { CurrProjLocalGqlProps } from \"../../state/project.local.query\";\nimport { TagModalCreatedCb } from \"../../components/NewTagModalForm/utils\";\nimport { UserLocalGqlProps } from \"../../state/auth-user.local.query\";\n\nexport interface OwnProps {\n  children: JSX.Element;\n  onTagCreated?: TagModalCreatedCb;\n}\n\nexport type Props = RouteComponentProps<{}> &\n  OwnProps &\n  CurrProjLocalGqlProps &\n  UserLocalGqlProps;\n\nexport interface State {\n  modalState: {\n    newTag: boolean;\n    newSource: boolean;\n    tagList: boolean;\n  };\n}\n\nexport const initialState: State = {\n  modalState: {\n    newTag: false,\n    newSource: false,\n    tagList: false\n  }\n};\n","import gql from \"graphql-tag\";\n\nimport tagFrag from \"./tag-mini.fragment\";\n\nexport const tagMut = gql`\n  mutation CreateTag($tag: CreateTagInput!) {\n    createTag(tag: $tag) {\n      ...TagFrag\n    }\n  }\n\n  ${tagFrag}\n`;\n\nexport default tagMut;\n","import React from \"react\";\nimport { ApolloError } from \"apollo-client\";\n\nimport { TagFrag, CreateTagInput } from \"../../graphql/gen.types\";\n\nexport type TagModalCreatedCb = (tag: TagFrag) => void;\n\nexport interface Props {\n  open: boolean;\n  dismissModal: () => void;\n  style: React.CSSProperties;\n  onTagCreated?: TagModalCreatedCb;\n}\n\nexport interface State extends CreateTagInput {\n  formError?: ApolloError;\n  submitting: boolean;\n  submitSuccess: boolean;\n}\n\nexport const initialState: State = {\n  text: \"\",\n  formError: undefined,\n  submitting: false,\n  submitSuccess: false\n};\n","import NewTagModalForm from \"./component\";\n\nexport default NewTagModalForm;\n","import React from \"react\";\nimport { Form } from \"semantic-ui-react\";\nimport { Icon } from \"semantic-ui-react\";\nimport { Button } from \"semantic-ui-react\";\nimport { Modal } from \"semantic-ui-react\";\nimport { Input } from \"semantic-ui-react\";\nimport { Header } from \"semantic-ui-react\";\nimport { Message } from \"semantic-ui-react\";\n\nimport { Mutation } from \"react-apollo\";\nimport update from \"immutability-helper\";\n\nimport TAG_MUTATION from \"../../graphql/tag.mutation\";\nimport { CreateTagFn, CreateTagUpdateFn } from \"../../graphql/ops.types\";\nimport {\n  TagsMinimal as TagsMinimalQuery,\n  CreateTag,\n  CreateTagVariables\n} from \"../../graphql/gen.types\";\nimport { TagFrag } from \"../../graphql/gen.types\";\nimport TAGS_QUERY from \"../../graphql/tags-mini.query\";\nimport { initialState } from \"./utils\";\nimport { Props } from \"./utils\";\nimport { State } from \"./utils\";\n\nexport class NewTagModalForm extends React.Component<Props, State> {\n  state = initialState;\n\n  render() {\n    const { open, style } = this.props;\n    const { text, question, formError, submitting, submitSuccess } = this.state;\n\n    return (\n      <Modal\n        style={{ ...(style || {}), ...{ background: \"#fff\" } }}\n        basic={true}\n        size=\"small\"\n        dimmer=\"inverted\"\n        open={open}\n        onClose={this.reset}\n      >\n        <Header icon=\"quote left\" content=\"Subject matter of quote\" />\n\n        <Modal.Content>\n          {this.renderErrorOrSuccess()}\n\n          <Form>\n            <Form.Field\n              control={Input}\n              name=\"tag\"\n              placeholder=\"Tag text\"\n              label=\"Tag text\"\n              fluid={true}\n              onChange={this.handleChange(\"text\")}\n              onFocus={this.handleFocus}\n              error={!!formError}\n            />\n\n            <Form.Field\n              control={Input}\n              name=\"question\"\n              placeholder=\"Question\"\n              label=\"Question\"\n              fluid={true}\n              onChange={this.handleChange(\"question\")}\n              onFocus={this.handleFocus}\n              error={!!formError}\n            />\n          </Form>\n\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              marginTop: \"20px\"\n            }}\n          >\n            <Button\n              id=\"tag-modal-close\"\n              basic={true}\n              color=\"red\"\n              onClick={this.reset}\n              disabled={submitting}\n            >\n              <Icon name=\"remove\" /> Dismiss\n            </Button>\n\n            <Mutation<CreateTag, CreateTagVariables>\n              mutation={TAG_MUTATION}\n              variables={{ tag: { text, question } }}\n              update={this.writeTagsToCache}\n            >\n              {createTag => {\n                return (\n                  <Button\n                    id=\"tag-modal-submit\"\n                    color=\"green\"\n                    inverted={true}\n                    disabled={\n                      !!formError ||\n                      text.length < 2 ||\n                      submitting ||\n                      submitSuccess\n                    }\n                    onClick={this.handleSubmit(createTag)}\n                    loading={submitting}\n                  >\n                    <Icon name=\"checkmark\" /> Ok\n                  </Button>\n                );\n              }}\n            </Mutation>\n          </div>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n\n  renderErrorOrSuccess = () => {\n    const { formError, submitSuccess } = this.state;\n\n    if (formError) {\n      return (\n        <Message icon={true} error={true}>\n          <Icon name=\"ban\" />\n\n          <Message.Content>\n            <Message.Header>An error has occurred</Message.Header>\n\n            {formError.message}\n          </Message.Content>\n        </Message>\n      );\n    }\n\n    if (submitSuccess) {\n      return (\n        <Message\n          error={true}\n          success={true}\n          content=\"Tag created successfully!\"\n        />\n      );\n    }\n\n    return undefined;\n  };\n\n  reset = async () => {\n    this.props.dismissModal();\n  };\n\n  handleFocus = () =>\n    this.setState({\n      formError: undefined,\n      submitSuccess: false\n    });\n\n  handleChange = (name: string) => (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = e;\n    this.setState(s =>\n      update(s, {\n        [name]: {\n          $set: target.value\n        }\n      })\n    );\n  };\n\n  handleSubmit = (createTag: CreateTagFn) => async () => {\n    try {\n      this.setState({ submitting: true });\n      await createTag();\n      this.setState({ submitSuccess: true, submitting: false });\n    } catch (error) {\n      this.setState({ formError: error, submitting: false });\n    }\n  };\n\n  writeTagsToCache: CreateTagUpdateFn = async (cache, { data: createTag }) => {\n    if (!createTag) {\n      return;\n    }\n\n    const tag = createTag.createTag as TagFrag;\n\n    if (this.props.onTagCreated) {\n      this.props.onTagCreated(tag);\n    } else {\n      return;\n    }\n\n    const query = {\n      query: TAGS_QUERY\n    };\n\n    try {\n      const tagsQuery = cache.readQuery<TagsMinimalQuery>(query);\n\n      cache.writeQuery({\n        ...query,\n        data: update(tagsQuery, {\n          tags: {\n            $push: [tag]\n          }\n        })\n      });\n    } catch (error) {\n      if (error.message.startsWith(\"Can't find field tags on object\")) {\n        return;\n      }\n\n      throw error;\n    }\n  };\n}\n\nexport default NewTagModalForm;\n","import React from \"react\";\nimport { Modal, List, Message, Loader } from \"semantic-ui-react\";\n\nimport \"./tags-modal.scss\";\nimport { TagsMinimalQueryComponent } from \"../../graphql/ops.types\";\nimport { TagsMinimalQueryResult } from \"../../graphql/ops.types\";\nimport { TagFrag } from \"../../graphql/gen.types\";\nimport TAGS_QUERY from \"../../graphql/tags-mini.query\";\nimport { makeTagURL } from \"../../routes/util\";\nimport { Props } from \"./utils\";\n\nexport class TagsModal extends React.Component<Props> {\n  render() {\n    const { open } = this.props;\n\n    return (\n      <TagsMinimalQueryComponent query={TAGS_QUERY}>\n        {dataProps => {\n          return (\n            <Modal\n              className=\"src-components-tags-modal\"\n              basic={true}\n              dimmer=\"inverted\"\n              open={open}\n              onClose={this.resetModal}\n            >\n              <Modal.Content>\n                <div\n                  id=\"tag-list-modal-close\"\n                  className=\"modal-close\"\n                  onClick={this.props.dismissModal}\n                >\n                  &times;\n                </div>\n\n                {this.renderTags(dataProps)}\n              </Modal.Content>\n            </Modal>\n          );\n        }}\n      </TagsMinimalQueryComponent>\n    );\n  }\n\n  renderTags = ({ loading, data, error }: TagsMinimalQueryResult) => {\n    if (error) {\n      return (\n        <div className=\"error-container\" onClick={this.props.dismissModal}>\n          {error.message}\n        </div>\n      );\n    }\n\n    if (loading) {\n      return <Loader active={true} />;\n    }\n\n    const tags = data ? data.tags : null;\n\n    if (tags && tags.length) {\n      return (\n        <List divided={true} relaxed={true}>\n          {tags.map(this.renderTag)}\n        </List>\n      );\n    }\n\n    return (\n      <Message className=\"no-resources-message\">\n        <Message.Content>No tags for \"current project\"</Message.Content>\n      </Message>\n    );\n  };\n\n  renderTag = (tag: TagFrag | null) => {\n    if (!tag) {\n      return undefined;\n    }\n\n    const { id, text, question } = tag;\n    return (\n      <List.Item key={id} id={id} onClick={this.navigateTo(id)}>\n        <List.Content>\n          <div>{text}</div>\n          {question && (\n            <div\n              style={{\n                paddingLeft: \"10%\",\n                fontStyle: \"italic\"\n              }}\n            >\n              {question}\n            </div>\n          )}\n        </List.Content>\n      </List.Item>\n    );\n  };\n\n  resetModal = () => {\n    this.props.dismissModal();\n  };\n\n  private navigateTo = (id: string) => () => {\n    this.resetModal();\n    this.props.history.push(makeTagURL(id));\n  };\n}\n\nexport default TagsModal;\n","import { withRouter } from \"react-router-dom\";\n\nimport { Props } from \"./utils\";\nimport { TagsModal } from \"./component\";\n\nexport default withRouter<Props>(TagsModal);\n","import React from \"react\";\nimport { Modal, Message, List, Loader } from \"semantic-ui-react\";\n\nimport \"./sources-modal.scss\";\nimport { SourceFullFrag } from \"../../graphql/gen.types\";\nimport { sourceDisplay } from \"../../graphql/utils\";\nimport { makeSourceURL } from \"../../routes/util\";\nimport { Props } from \"./sources-modal\";\n\nexport class SourcesModal extends React.Component<Props> {\n  render() {\n    return (\n      <Modal\n        id=\"sources-modal\"\n        basic={true}\n        open={this.props.open}\n        onClose={this.resetModal}\n        dimmer=\"inverted\"\n        className=\"src-components-sources-modal\"\n      >\n        <Modal.Content>\n          <div\n            id=\"sources-modal-close\"\n            className=\"modal-close\"\n            onClick={this.props.dismissModal}\n          >\n            &times;\n          </div>\n\n          {this.renderSources()}\n        </Modal.Content>\n      </Modal>\n    );\n  }\n\n  renderSources = () => {\n    const { error, dismissModal } = this.props;\n\n    if (error) {\n      return (\n        <div className=\"error-container\" onClick={dismissModal}>\n          {error.message}\n        </div>\n      );\n    }\n\n    if (this.props.loading) {\n      return <Loader active={true} />;\n    }\n\n    const { sources, currentProject } = this.props;\n\n    if (sources && sources.length) {\n      return (\n        <List divided={true} relaxed={true}>\n          {sources.map(this.renderSource)}\n        </List>\n      );\n    }\n\n    return (\n      <Message className=\"no-resources-message\">\n        <Message.Content>\n          No sources for {` \"${currentProject && currentProject.title}\"`}\n        </Message.Content>\n      </Message>\n    );\n  };\n\n  renderSource = (source: SourceFullFrag | null) => {\n    if (!source) {\n      return undefined;\n    }\n\n    return (\n      <List.Item\n        key={source.id}\n        className=\"list-item\"\n        onClick={this.navigateTo(source.id)}\n      >\n        <List.Content>{sourceDisplay(source)}</List.Content>\n      </List.Item>\n    );\n  };\n\n  resetModal = () => {\n    this.props.dismissModal();\n  };\n\n  navigateTo = (id: string) => () => {\n    this.resetModal();\n    this.props.history.push(makeSourceURL(id));\n  };\n}\n\nexport default SourcesModal;\n","import { withRouter } from \"react-router-dom\";\nimport { graphql, compose } from \"react-apollo\";\n\nimport SourcesModal from \"./component\";\nimport SOURCES_QUERY from \"../../graphql/sources-1.query\";\nimport { SourceFullFrag } from \"../../graphql/gen.types\";\nimport { Sources1Query, Sources1QueryVariables } from \"../../graphql/gen.types\";\nimport { sourceDisplay } from \"../../graphql/utils\";\nimport { OwnProps } from \"./sources-modal\";\nimport { SourcesGqlProps } from \"./sources-modal\";\nimport { ProjectLocalGqlProps } from \"./sources-modal\";\nimport PROJECT_LOCAL_QUERY, {\n  CurrentProjectLocalData\n} from \"../../state/project.local.query\";\n\nconst reshapeSource = (s: SourceFullFrag | null) => {\n  if (!s) {\n    return {} as SourceFullFrag;\n  }\n\n  return {\n    ...s,\n    display: `${sourceDisplay(s)} | ${s.sourceType.name}`\n  } as SourceFullFrag;\n};\n\nexport const reshapeSources = (\n  sources: SourceFullFrag[] | null\n): SourceFullFrag[] => {\n  if (!sources) {\n    return [] as SourceFullFrag[];\n  }\n\n  return sources.map(reshapeSource);\n};\n\nconst sourcesGraphQl = graphql<\n  OwnProps,\n  Sources1Query,\n  Sources1QueryVariables,\n  SourcesGqlProps | undefined\n>(SOURCES_QUERY, {\n  props: ({ data }) => {\n    if (!data || !data.sources) {\n      return data;\n    }\n\n    const sources = data.sources as SourceFullFrag[];\n    return {\n      ...data,\n      sources: reshapeSources(sources)\n    };\n  },\n\n  options: ({ currentProject }) => ({\n    variables: {\n      source: {\n        projectId: (currentProject && currentProject.id) || \"0\"\n      }\n    }\n  })\n});\n\nconst projectLocalGql = graphql<\n  OwnProps,\n  CurrentProjectLocalData,\n  {},\n  ProjectLocalGqlProps | undefined\n>(PROJECT_LOCAL_QUERY, {\n  props: props => props.data\n});\n\nexport default compose(\n  withRouter,\n  projectLocalGql,\n  sourcesGraphQl\n)(SourcesModal);\n// );\n","import React from \"react\";\nimport { ApolloError } from \"apollo-client\";\nimport { FetchResult } from \"react-apollo\";\n\nimport { CreateSourceType } from \"../../graphql/gen.types\";\nimport { UserLocalGqlData } from \"../../state/auth-user.local.query\";\n\nexport interface CreateSourceTypeProps {\n  createSourceType: (\n    name: string\n  ) => Promise<void | FetchResult<CreateSourceType>>;\n}\n\nexport type OwnProps = UserLocalGqlData & {\n  open: boolean;\n  dismissModal: () => void;\n  style: React.CSSProperties;\n};\n\nexport type Props = CreateSourceTypeProps & OwnProps;\n\nexport interface FormValues {\n  name: string;\n}\n\nexport const initialFormValues: FormValues = {\n  name: \"\"\n};\n\nexport interface State {\n  initialFormValues: FormValues;\n  graphQlError?: ApolloError;\n  submitting: boolean;\n  submitSuccess: boolean;\n}\n\nexport const initialState: State = {\n  initialFormValues,\n  graphQlError: undefined,\n  submitting: false,\n  submitSuccess: false\n};\n","import React from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { Modal } from \"semantic-ui-react\";\nimport { Input } from \"semantic-ui-react\";\nimport { Header } from \"semantic-ui-react\";\nimport { Message } from \"semantic-ui-react\";\nimport { Icon } from \"semantic-ui-react\";\nimport { Form } from \"semantic-ui-react\";\nimport { Formik } from \"formik\";\nimport { FormikProps, FormikActions } from \"formik\";\nimport { Field } from \"formik\";\nimport { FieldProps } from \"formik\";\nimport { FormikErrors } from \"formik\";\nimport isEmpty from \"lodash/isEmpty\";\n\nimport { initialState } from \"./new-source-type-modal\";\nimport { Props } from \"./new-source-type-modal\";\nimport { State } from \"./new-source-type-modal\";\nimport { FormValues } from \"./new-source-type-modal\";\n\nexport class NewSourceTypeModal extends React.Component<Props, State> {\n  state = initialState;\n\n  render() {\n    const { open, style } = this.props;\n\n    return (\n      <Modal\n        style={{ ...(style || {}), ...{ background: \"#fff\" } }}\n        basic={true}\n        size=\"small\"\n        dimmer=\"inverted\"\n        open={open}\n        onClose={this.onResetClicked(() => null)}\n      >\n        <Header icon=\"user\" content=\"Source Type Details\" />\n\n        <Modal.Content>\n          {this.renderErrorOrSuccess()}\n\n          <Formik\n            initialValues={this.state.initialFormValues}\n            enableReinitialize={true}\n            onSubmit={this.submit}\n            render={this.renderForm}\n            validate={this.validate}\n          />\n        </Modal.Content>\n      </Modal>\n    );\n  }\n\n  validate = (values: FormValues) => {\n    const errors: FormikErrors<FormValues> = {};\n\n    for (const key of Object.keys(values)) {\n      const error = this[\n        `validate${key.charAt(0).toUpperCase()}${key.slice(1)}`\n      ](values[key].trim());\n\n      if (error) {\n        errors[key] = error;\n        return errors;\n      }\n    }\n\n    return errors;\n  };\n\n  validateName = (name: string | null) => {\n    if (!name) {\n      return \"Enter source name\";\n    }\n\n    if (name.length < 2) {\n      return \"Too short\";\n    }\n\n    return \"\";\n  };\n\n  renderErrorOrSuccess = () => {\n    const { graphQlError, submitSuccess } = this.state;\n\n    if (graphQlError) {\n      return (\n        <Message icon={true} error={true}>\n          <Icon name=\"ban\" />\n\n          <Message.Content>\n            <Message.Header>An error has occurred</Message.Header>\n\n            {graphQlError.message}\n          </Message.Content>\n        </Message>\n      );\n    }\n\n    if (submitSuccess) {\n      return (\n        <Message\n          error={true}\n          success={true}\n          content=\"Source created successfully!\"\n        />\n      );\n    }\n\n    return undefined;\n  };\n\n  onResetClicked = (reset: () => void) => () => {\n    reset();\n    this.props.dismissModal();\n  };\n\n  submit = async (values: FormValues, formikBag: FormikActions<FormValues>) => {\n    formikBag.setSubmitting(true);\n\n    try {\n      await (this.props.createSourceType &&\n        this.props.createSourceType(values.name.trim()));\n      this.setState({ submitSuccess: true });\n\n      formikBag.resetForm();\n    } catch (error) {\n      formikBag.setSubmitting(false);\n      this.setState({ graphQlError: error });\n    }\n  };\n\n  private renderForm = ({\n    handleReset,\n    dirty,\n    isSubmitting,\n    errors,\n    handleSubmit\n  }: FormikProps<FormValues>) => {\n    const dirtyOrSubmitting = !dirty || isSubmitting;\n    const disableSubmit = dirtyOrSubmitting || !isEmpty(errors);\n\n    return (\n      <Form onSubmit={handleSubmit}>\n        {[[\"Source Name\", \"name\"]].map(data => {\n          const [label, name] = data;\n          return (\n            <Field key={name} name={name} render={this.renderInput(label)} />\n          );\n        })}\n\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginTop: \"20px\"\n          }}\n        >\n          <Button\n            id=\"source-type-modal-close\"\n            basic={true}\n            color=\"red\"\n            onClick={this.onResetClicked(handleReset)}\n            disabled={isSubmitting}\n            type=\"button\"\n          >\n            <Icon name=\"remove\" /> Dismiss\n          </Button>\n\n          <Button\n            id=\"source-type-modal-submit\"\n            color=\"green\"\n            inverted={true}\n            disabled={disableSubmit}\n            loading={isSubmitting}\n            type=\"submit\"\n          >\n            <Icon name=\"checkmark\" /> Ok\n          </Button>\n        </div>\n      </Form>\n    );\n  };\n\n  private renderInput = (label: string) => (\n    formProps: FieldProps<FormValues>\n  ) => {\n    const { field, form } = formProps;\n    const name = field.name;\n    const error = form.errors[name];\n    const booleanError = !!error;\n    const touched = form.touched[name];\n\n    return (\n      <div>\n        <Form.Field\n          control={Input}\n          placeholder={label}\n          autoComplete=\"off\"\n          label={label}\n          id={name}\n          error={booleanError}\n          onBlur={this.handleFormControlBlur(name, form)}\n          onFocus={this.handleFocus}\n          {...field}\n        />\n\n        {booleanError && touched && (\n          <Message\n            style={{\n              display: \"block\",\n              padding: \"0.5em\",\n              marginBottom: \"1em\",\n              marginTop: \"-10px\"\n            }}\n            error={true}\n            header={error}\n          />\n        )}\n      </div>\n    );\n  };\n\n  private handleFormControlBlur = (\n    name: string,\n    form: FormikProps<FormValues>\n  ) => () => {\n    form.setFieldTouched(name, true);\n  };\n\n  private handleFocus = () => {\n    this.setState({\n      graphQlError: undefined,\n      submitSuccess: false\n    });\n  };\n}\n\nexport default NewSourceTypeModal;\n","import gql from \"graphql-tag\";\n\nimport { sourceTypeFrag } from \"./source-type.fragment\";\nimport { MutationFn } from \"react-apollo\";\nimport { CreateSourceType, CreateSourceTypeVariables } from \"./gen.types\";\n\nexport const createSourceType = gql`\n  mutation CreateSourceType($sourceType: CreateSourceTypeInput!) {\n    sourceType(sourceType: $sourceType) {\n      ...SourceTypeFrag\n    }\n  }\n\n  ${sourceTypeFrag}\n`;\n\nexport default createSourceType;\n\nexport type CreateSourceTypeFn = MutationFn<\n  CreateSourceType,\n  CreateSourceTypeVariables\n>;\n","import { graphql, compose } from \"react-apollo\";\nimport update from \"immutability-helper\";\n\nimport NewSourceTypeModal from \"./component\";\nimport { CreateSourceTypeProps, OwnProps } from \"./new-source-type-modal\";\nimport CREATE_SOURCE_TYPE_MUTATION from \"../../graphql/create-source-type.mutation\";\nimport SOURCE_TYPES_QUERY from \"../../graphql/source-types.query\";\nimport {\n  CreateSourceType,\n  CreateSourceTypeVariables,\n  SourceTypes\n} from \"../../graphql/gen.types\";\nimport { CreateSourceTypeFn } from \"../../graphql/create-source-type.mutation\";\nimport USER_LOCAL_QUERY, {\n  UserLocalGqlData,\n  UserLocalGqlProps\n} from \"../../state/auth-user.local.query\";\n\nconst userLocalGql = graphql<\n  OwnProps,\n  UserLocalGqlData,\n  {},\n  UserLocalGqlProps | void\n>(USER_LOCAL_QUERY, {\n  props: props => props.data\n});\n\nconst createSourceTypeGql = graphql<\n  OwnProps,\n  CreateSourceType,\n  CreateSourceTypeVariables,\n  CreateSourceTypeProps | undefined\n>(CREATE_SOURCE_TYPE_MUTATION, {\n  props: props => {\n    const mutate = props.mutate as CreateSourceTypeFn;\n    const {\n      ownProps: { user }\n    } = props;\n\n    if (user) {\n      return {\n        createSourceType: (name: string) =>\n          mutate({\n            variables: {\n              sourceType: {\n                name\n              }\n            },\n\n            update: (client, { data: newSourceTypeData }) => {\n              if (!newSourceTypeData) {\n                return;\n              }\n\n              const newSourceType = newSourceTypeData.sourceType;\n\n              if (newSourceType) {\n                return;\n              }\n\n              const data = client.readQuery({\n                query: SOURCE_TYPES_QUERY\n              }) as SourceTypes;\n\n              const newData = update(data, {\n                sourceTypes: {\n                  $push: [newSourceType]\n                }\n              });\n\n              client.writeQuery({\n                query: SOURCE_TYPES_QUERY,\n                data: newData\n              });\n            }\n          })\n      };\n    }\n\n    return undefined;\n  }\n});\n\nexport default compose(\n  userLocalGql,\n  createSourceTypeGql\n)(NewSourceTypeModal);\n","import * as React from \"react\";\nimport { Sidebar, Segment, Menu, Icon } from \"semantic-ui-react\";\nimport { NavLink } from \"react-router-dom\";\nimport update from \"immutability-helper\";\n\nimport \"./app-sidebar.scss\";\nimport { Props, State, initialState } from \"./app-sidebar\";\nimport {\n  AppSidebarConsumer,\n  SideBarContextProps\n} from \"../../containers/App/app.utils\";\nimport {\n  ROOT_URL,\n  PROJECTS_URL,\n  SEARCH_QUOTES_URL,\n  makeNewQuoteURL,\n  LOGIN_URL,\n  USER_REG_URL\n} from \"../../routes/util\";\nimport { MenuItemNames } from \"../../constants\";\nimport NewTagModalForm from \"../../components/NewTagModalForm\";\nimport SourceModal from \"../../components/SourceModal\";\nimport TagsModal from \"../../components/TagsModal\";\nimport SourcesModal from \"../../components/SourcesModal\";\nimport NewAuthorModal from \"../NewAuthorModal\";\nimport NewSourceTypeModal from \"../NewSourceTypeModal\";\n\nconst AUTH_URLS = [LOGIN_URL, USER_REG_URL];\n\nexport class AppSideBar extends React.Component<Props, State> {\n  state: State = initialState;\n  context: SideBarContextProps | undefined = undefined;\n\n  render() {\n    return <AppSidebarConsumer>{this.renderSideBar}</AppSidebarConsumer>;\n  }\n\n  private renderSideBar = (context: SideBarContextProps) => {\n    this.context = context;\n    const { onShowClicked, minWidth600, showSidebar } = context;\n\n    let pushableClassName = \"src-components-app-sidebar\";\n\n    if (minWidth600) {\n      pushableClassName += \" \" + \"pushable-min-width-600\";\n    }\n\n    if (showSidebar) {\n      pushableClassName += \" \" + \"pushable-showing-sidebar\";\n    }\n\n    const {\n      match: { path },\n      currentProject\n    } = this.props;\n\n    return (\n      <Sidebar.Pushable as={Segment} className={pushableClassName}>\n        <Sidebar\n          as={Menu}\n          animation=\"overlay\"\n          icon=\"labeled\"\n          onHide={this.hideSidebar}\n          vertical={true}\n          visible={context.showSidebar}\n        >\n          {minWidth600 && (\n            <a className=\"sidebar-trigger-sidebar item\" onClick={onShowClicked}>\n              <Icon name=\"content\" />\n            </a>\n          )}\n\n          {currentProject && path !== ROOT_URL ? (\n            <Menu.Item\n              as={NavLink}\n              to={makeNewQuoteURL()}\n              onClick={this.hideSidebar}\n              className=\"home-menu\"\n            >\n              <Icon name=\"quote right\" />\n              <span>Home</span>\n            </Menu.Item>\n          ) : (\n            undefined\n          )}\n\n          {path !== PROJECTS_URL ? (\n            <Menu.Item\n              as={NavLink}\n              to={PROJECTS_URL}\n              onClick={this.hideSidebar}\n            >\n              <Icon name=\"gem\" />\n              <span>Projects</span>\n            </Menu.Item>\n          ) : (\n            undefined\n          )}\n\n          {currentProject && path !== SEARCH_QUOTES_URL ? (\n            <Menu.Item\n              as={NavLink}\n              to={SEARCH_QUOTES_URL}\n              onClick={this.hideSidebar}\n            >\n              <Icon name=\"search\" />\n              <span>Search</span>\n            </Menu.Item>\n          ) : (\n            undefined\n          )}\n\n          {currentProject && (\n            <Menu.Item\n              onClick={this.toggleModalState(MenuItemNames.NEW_SOURCE, true)}\n            >\n              <Icon name=\"user\" />\n              <span>New Source</span>\n            </Menu.Item>\n          )}\n\n          {currentProject && (\n            <Menu.Item\n              onClick={this.toggleModalState(MenuItemNames.NEW_AUTHOR, true)}\n            >\n              <Icon name=\"user\" />\n              <span>New Author</span>\n            </Menu.Item>\n          )}\n\n          {currentProject && (\n            <Menu.Item\n              onClick={this.toggleModalState(MenuItemNames.NEW_TAG, true)}\n            >\n              <Icon name=\"tag\" />\n              <span>New Tag</span>\n            </Menu.Item>\n          )}\n\n          {currentProject && (\n            <Menu.Item\n              onClick={this.toggleModalState(\n                MenuItemNames.NEW_SOURCE_TYPE,\n                true\n              )}\n            >\n              <Icon name=\"tree\" />\n              <span>New Source Type</span>\n            </Menu.Item>\n          )}\n\n          {currentProject && (\n            <Menu.Item\n              onClick={this.toggleModalState(MenuItemNames.TAG_LIST, true)}\n            >\n              <Icon name=\"numbered list\" />\n              <span>List Tags</span>\n            </Menu.Item>\n          )}\n\n          {currentProject && (\n            <Menu.Item\n              onClick={this.toggleModalState(MenuItemNames.SOURCE_LIST, true)}\n            >\n              <Icon name=\"numbered list\" />\n              <span>List Sources</span>\n            </Menu.Item>\n          )}\n\n          {!AUTH_URLS.includes(path) ? (\n            <Menu.Item onClick={this.logout(this.hideSidebar)}>\n              <Icon name=\"sign-out\" />\n              <span>Logout</span>\n            </Menu.Item>\n          ) : (\n            undefined\n          )}\n        </Sidebar>\n\n        <Sidebar.Pusher style={{ height: \"100%\" }}>\n          {this.props.children}\n        </Sidebar.Pusher>\n\n        {this.state.modalState[MenuItemNames.NEW_TAG] && (\n          <NewTagModalForm\n            open={this.state.modalState[MenuItemNames.NEW_TAG]}\n            dismissModal={this.toggleModalState(MenuItemNames.NEW_TAG, false)}\n            style={{ marginTop: 0 }}\n            onTagCreated={this.props.onTagCreated}\n          />\n        )}\n\n        {this.state.modalState[MenuItemNames.NEW_SOURCE] && (\n          <SourceModal\n            open={this.state.modalState[MenuItemNames.NEW_SOURCE]}\n            dismissModal={this.toggleModalState(\n              MenuItemNames.NEW_SOURCE,\n              false\n            )}\n            style={{ marginTop: 0 }}\n          />\n        )}\n\n        {this.state.modalState[MenuItemNames.NEW_SOURCE_TYPE] && (\n          <NewSourceTypeModal\n            open={this.state.modalState[MenuItemNames.NEW_SOURCE_TYPE]}\n            dismissModal={this.toggleModalState(\n              MenuItemNames.NEW_SOURCE_TYPE,\n              false\n            )}\n            style={{ marginTop: 0 }}\n          />\n        )}\n\n        {this.state.modalState[MenuItemNames.SOURCE_LIST] && (\n          <SourcesModal\n            open={this.state.modalState[MenuItemNames.SOURCE_LIST]}\n            dismissModal={this.toggleModalState(\n              MenuItemNames.SOURCE_LIST,\n              false\n            )}\n          />\n        )}\n\n        {this.state.modalState[MenuItemNames.TAG_LIST] && (\n          <TagsModal\n            open={this.state.modalState[MenuItemNames.TAG_LIST]}\n            dismissModal={this.toggleModalState(MenuItemNames.TAG_LIST, false)}\n          />\n        )}\n\n        {this.state.modalState[MenuItemNames.NEW_AUTHOR] && (\n          <NewAuthorModal\n            open={this.state.modalState[MenuItemNames.NEW_AUTHOR]}\n            modal={true}\n            dismissModal={this.toggleModalState(\n              MenuItemNames.NEW_AUTHOR,\n              false\n            )}\n          />\n        )}\n      </Sidebar.Pushable>\n    );\n  };\n\n  private logout = (onHide: () => void) => () => {\n    onHide();\n\n    const { history } = this.props;\n\n    history.replace(LOGIN_URL);\n  };\n\n  private toggleModalState = (name: string, open: boolean) => () => {\n    if (open && this.context) {\n      this.hideSidebar();\n    }\n\n    this.setState(s =>\n      update(s, {\n        modalState: {\n          $set: initialState.modalState\n        }\n      })\n    );\n\n    this.setState(s =>\n      update(s, {\n        modalState: {\n          [name]: {\n            $set: open\n          }\n        }\n      })\n    );\n  };\n\n  private hideSidebar = () => {\n    if (this.context) {\n      const { minWidth600, onHide } = this.context;\n      if (minWidth600) {\n        return;\n      }\n\n      onHide();\n    }\n  };\n}\n\nexport default AppSideBar;\n","import { withRouter } from \"react-router\";\nimport { compose, graphql } from \"react-apollo\";\n\nimport AppSideBar from \"./component\";\nimport { userLocalMutationGql } from \"../../state/user.local.mutation\";\nimport CURRENT_PROJECT_LOCAL_QUERY, {\n  CurrProjLocalGqlProps,\n  CurrentProjectLocalData\n} from \"../../state/project.local.query\";\nimport { OwnProps } from \"./app-sidebar\";\n\nconst currentProjectLocalGql = graphql<\n  OwnProps,\n  CurrentProjectLocalData,\n  {},\n  CurrProjLocalGqlProps | undefined\n>(CURRENT_PROJECT_LOCAL_QUERY, {\n  props: props => props.data\n});\n\nexport default compose(\n  withRouter,\n  userLocalMutationGql,\n  currentProjectLocalGql\n)(AppSideBar);\n","import { Query } from \"react-apollo\";\nimport { MutationFn } from \"react-apollo\";\nimport { MutationUpdaterFn } from \"react-apollo\";\nimport { QueryResult } from \"react-apollo\";\nimport { ApolloQueryResult } from \"apollo-client\";\n\nimport { TagsMinimal as TagsMinimalQuery } from \"./gen.types\";\nimport { Sources1Query } from \"./gen.types\";\nimport { CreateQuote as CreateQuoteMutation } from \"./gen.types\";\nimport { CreateQuoteVariables } from \"./gen.types\";\nimport { CreateTag as CreateTagMutation } from \"./gen.types\";\nimport { CreateTagVariables } from \"./gen.types\";\nimport { CreateSource } from \"./gen.types\";\nimport { SourceTypes as SourceTypesQuery } from \"./gen.types\";\nimport { TagQuote as TagQuoteQuery } from \"./gen.types\";\nimport { TagQuoteVariables } from \"./gen.types\";\nimport { Quotes1 as Quotes1Query } from \"./gen.types\";\nimport { Quotes1Variables } from \"./gen.types\";\nimport { GetAllAuthors as GetAllAuthorsQuery } from \"./gen.types\";\nimport { CreateAuthor as CreateAuthorMutation } from \"./gen.types\";\nimport { CreateAuthorVariables } from \"./gen.types\";\nimport { UpdateSource as UpdateSourceMutation } from \"./gen.types\";\nimport { UpdateSourceVariables } from \"./gen.types\";\nimport { UserRegMutation } from \"./gen.types\";\nimport { UserRegMutationVariables } from \"./gen.types\";\nimport { LoginMutation } from \"./gen.types\";\nimport { LoginMutationVariables, GetAllAuthorsVariables } from \"./gen.types\";\n\nexport class TagsMinimalQueryComponent extends Query<TagsMinimalQuery, {}> {}\nexport type TagsMinimalQueryResult = QueryResult<TagsMinimalQuery>;\nexport type TagsMinimalQueryClientResult = ApolloQueryResult<TagsMinimalQuery>;\n\n// tslint:disable-next-line:max-classes-per-file\nexport class GetAllAuthorsQueryComponent extends Query<\n  GetAllAuthorsQuery,\n  GetAllAuthorsVariables\n> {}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class Sources1QueryComponent extends Query<Sources1Query, {}> {}\n\nexport type CreateQuoteFn = MutationFn<\n  CreateQuoteMutation,\n  CreateQuoteVariables\n>;\n\nexport type CreateQuoteUpdateFn = MutationUpdaterFn<CreateQuoteMutation>;\n\nexport type CreateTagFn = MutationFn<CreateTagMutation, CreateTagVariables>;\n\nexport type CreateTagUpdateFn = MutationUpdaterFn<CreateTagMutation>;\n\nexport type CreateSourceMutationCallResult = ApolloQueryResult<CreateSource>;\n\nexport type CreateSourceUpdateFn = MutationUpdaterFn<CreateSource>;\n\nexport type UpdateSourceMutationFn = MutationFn<\n  UpdateSourceMutation,\n  UpdateSourceVariables\n>;\n\n// tslint:disable-next-line:max-classes-per-file\nexport class SourceTypeQueryComponent extends Query<SourceTypesQuery, {}> {}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class TagQuoteQueryComponent extends Query<\n  TagQuoteQuery,\n  TagQuoteVariables\n> {}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class Quotes1QueryComponent extends Query<\n  Quotes1Query,\n  Quotes1Variables\n> {}\n\nexport type CreateAuthorFn = MutationFn<\n  CreateAuthorMutation,\n  CreateAuthorVariables\n>;\n\nexport type CreateAuthorUpdateFn = MutationUpdaterFn<CreateAuthorMutation>;\n\nexport type UserRegFn = MutationFn<UserRegMutation, UserRegMutationVariables>;\n\nexport interface UserRegMutationProps {\n  regUser: UserRegFn;\n}\n\nexport type LoginFn = MutationFn<LoginMutation, LoginMutationVariables>;\n\nexport interface LoginMutationProps {\n  login?: LoginFn;\n}\n","import React from \"react\";\nimport { ApolloError } from \"apollo-client\";\nimport { FetchResult } from \"react-apollo\";\n\nimport {\n  AuthorFrag,\n  CreateAuthor,\n  AuthorUpdate\n} from \"../../graphql/gen.types\";\nimport { CurrProjLocalGqlProps } from \"../../state/project.local.query\";\nimport { UserLocalGqlProps } from \"../../state/auth-user.local.query\";\n\nexport interface CreateAuthorMutationProps {\n  createAuthor: (\n    variables: FormValues\n  ) => Promise<void | FetchResult<CreateAuthor>>;\n}\n\ntype AuthorModalCreatedCb = (tag: AuthorFrag) => void;\n\nexport interface AuthorUpdateGqlProps {\n  authorUpdate: (\n    id: string,\n    form: FormValues\n  ) => Promise<void | FetchResult<AuthorUpdate>>;\n}\n\nexport interface OwnProps {\n  open: boolean;\n  dismissModal: () => void;\n  style: React.CSSProperties;\n  onAuthorCreated?: AuthorModalCreatedCb;\n  author?: AuthorFrag;\n  modal?: boolean;\n}\n\nexport type Props = CurrProjLocalGqlProps &\n  UserLocalGqlProps &\n  CreateAuthorMutationProps &\n  AuthorUpdateGqlProps &\n  OwnProps;\n\nexport interface FormValues {\n  lastName: string;\n  firstName?: string | null;\n  middleName?: string | null;\n}\n\nexport enum FORM_OUTPUT_KEY {\n  LAST_NAME = \"lastName\",\n  FIRST_NAME = \"firstName\",\n  MIDDLE_NAMES = \"middleName\"\n}\n\nexport interface State {\n  initialFormOutput: FormValues;\n  graphQlError?: ApolloError;\n  submitting: boolean;\n  author?: AuthorFrag;\n  open?: boolean;\n  createdAuthors: AuthorFrag[];\n  showSourceModal?: boolean;\n}\n\nexport const initialState: State = {\n  initialFormOutput: {\n    [FORM_OUTPUT_KEY.LAST_NAME]: \"\",\n    [FORM_OUTPUT_KEY.FIRST_NAME]: \"\",\n    [FORM_OUTPUT_KEY.MIDDLE_NAMES]: \"\"\n  },\n  graphQlError: undefined,\n  submitting: false,\n  createdAuthors: []\n};\n","import React from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { Modal } from \"semantic-ui-react\";\nimport { Input } from \"semantic-ui-react\";\nimport { Header } from \"semantic-ui-react\";\nimport { Message } from \"semantic-ui-react\";\nimport { Icon } from \"semantic-ui-react\";\nimport { Form } from \"semantic-ui-react\";\nimport { Formik } from \"formik\";\nimport { FormikProps, FormikActions } from \"formik\";\nimport { Field } from \"formik\";\nimport { FieldProps } from \"formik\";\nimport { FormikErrors } from \"formik\";\nimport isEmpty from \"lodash/isEmpty\";\nimport update from \"immutability-helper\";\n\nimport \"./new-author-modal.scss\";\nimport {\n  FORM_OUTPUT_KEY,\n  Props,\n  State,\n  FormValues,\n  initialState\n} from \"./new-author-modal\";\nimport { AuthorFrag } from \"../../graphql/gen.types\";\nimport { authorFullName } from \"../../graphql/utils\";\nimport SourceModal from \"../../components/SourceModal\";\n\nexport class NewAuthorModal extends React.Component<Props, State> {\n  contentRef = React.createRef<HTMLDivElement>();\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = update(initialState, {\n      open: {\n        $set: props.open\n      }\n    });\n\n    const { author } = props;\n\n    if (author) {\n      this.initStateWithAuthor(author);\n    }\n  }\n\n  render() {\n    const { style, modal } = this.props;\n    const { open, showSourceModal, createdAuthors } = this.state;\n\n    if (showSourceModal && createdAuthors.length) {\n      return <SourceModal open={true} authors={createdAuthors} />;\n    }\n\n    return modal ? (\n      <Modal\n        style={{ ...(style || {}), ...{ background: \"#fff\" } }}\n        className=\"src-components-new-author-modal\"\n        basic={true}\n        size=\"small\"\n        dimmer=\"inverted\"\n        open={open}\n        onClose={this.onResetClicked(() => null)}\n      >\n        <div className=\"new-author-content\" ref={this.contentRef}>\n          <Modal.Content>\n            {this.renderAuthorCreated()}\n\n            <Header icon=\"user\" content=\"Author Details\" />\n\n            {this.renderContent()}\n          </Modal.Content>\n        </div>\n      </Modal>\n    ) : (\n      this.renderContent()\n    );\n  }\n\n  renderContent = () => {\n    return (\n      <div>\n        {this.renderError()}\n\n        <Formik\n          initialValues={this.state.initialFormOutput}\n          enableReinitialize={true}\n          onSubmit={this.submit}\n          render={this.renderForm}\n          validate={this.validate}\n        />\n      </div>\n    );\n  };\n\n  validate = (values: FormValues) => {\n    const errors: FormikErrors<FormValues> = {};\n\n    for (const key of Object.keys(values)) {\n      const error = this[\n        `validate${key.charAt(0).toUpperCase()}${key.slice(1)}`\n      ](values[key]);\n\n      if (error) {\n        errors[key] = error;\n        return errors;\n      }\n    }\n\n    return errors;\n  };\n\n  validateLastName = (lastName: string | null) => {\n    if (!lastName) {\n      return \"Enter last name\";\n    }\n\n    if (lastName.length < 2) {\n      return \"Too short\";\n    }\n\n    return \"\";\n  };\n\n  validateFirstName = (firstName: string | null) => {\n    if (!firstName) {\n      return \"\";\n    }\n\n    return \"\";\n  };\n\n  validateMiddleName = (middleName: string | null) => {\n    if (!middleName) {\n      return \"\";\n    }\n\n    return \"\";\n  };\n\n  renderError = () => {\n    const { graphQlError } = this.state;\n\n    if (graphQlError) {\n      return (\n        <Message icon={true} error={true}>\n          <Icon name=\"ban\" />\n\n          <Message.Content>\n            <Message.Header>An error has occurred</Message.Header>\n\n            {graphQlError.message}\n          </Message.Content>\n        </Message>\n      );\n    }\n\n    return undefined;\n  };\n\n  onResetClicked = (reset: () => void) => () => {\n    reset();\n    this.props.dismissModal();\n  };\n\n  submit = async (values: FormValues, formikBag: FormikActions<FormValues>) => {\n    formikBag.setSubmitting(true);\n    const { author } = this.state;\n    const { onAuthorCreated, createAuthor, authorUpdate } = this.props;\n\n    try {\n      if (!author) {\n        const authorCreated = await (createAuthor &&\n          createAuthor(this.eliminateEmptyFields(values)));\n\n        if (\n          authorCreated &&\n          authorCreated.data &&\n          authorCreated.data.createAuthor\n        ) {\n          const { createAuthor: createdAuthor } = authorCreated.data;\n\n          if (onAuthorCreated) {\n            onAuthorCreated(createdAuthor);\n          } else {\n            this.handleAuthorCreated(createdAuthor);\n          }\n        }\n\n        formikBag.resetForm();\n      } else {\n        const authorUpdated = await (authorUpdate &&\n          authorUpdate(author.id, this.prepFormForUpdate(values)));\n\n        if (\n          authorUpdated &&\n          authorUpdated.data &&\n          authorUpdated.data.updateAuthor\n        ) {\n          if (onAuthorCreated) {\n            onAuthorCreated(authorUpdated.data.updateAuthor);\n          }\n\n          this.props.dismissModal();\n          return;\n        }\n      }\n    } catch (error) {\n      formikBag.setSubmitting(false);\n      this.setState({ graphQlError: error });\n    }\n  };\n\n  private renderForm = ({\n    handleReset,\n    dirty,\n    isSubmitting,\n    errors,\n    handleSubmit\n  }: FormikProps<FormValues>) => {\n    const dirtyOrSubmitting = !dirty || isSubmitting;\n    const disableSubmit = dirtyOrSubmitting || !isEmpty(errors);\n\n    return (\n      <div>\n        <Form onSubmit={handleSubmit}>\n          {[\n            [\"Last Name\", FORM_OUTPUT_KEY.LAST_NAME],\n            [\"First Name\", FORM_OUTPUT_KEY.FIRST_NAME],\n            [\"Middle Names\", FORM_OUTPUT_KEY.MIDDLE_NAMES]\n          ].map(data => {\n            const [label, name] = data;\n            return (\n              <Field key={name} name={name} render={this.renderInput(label)} />\n            );\n          })}\n\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              marginTop: \"20px\"\n            }}\n          >\n            <Button\n              id=\"author-modal-close\"\n              basic={true}\n              color=\"red\"\n              onClick={this.onResetClicked(handleReset)}\n              disabled={isSubmitting}\n              type=\"button\"\n            >\n              <Icon name=\"remove\" /> Dismiss\n            </Button>\n\n            <Button\n              id=\"author-modal-reset\"\n              color=\"olive\"\n              basic={true}\n              disabled={dirtyOrSubmitting}\n              onClick={handleReset}\n              type=\"button\"\n            >\n              <Icon name=\"repeat\" /> Reset\n            </Button>\n\n            <Button\n              id=\"author-modal-submit\"\n              color=\"green\"\n              inverted={true}\n              disabled={disableSubmit}\n              loading={isSubmitting}\n              type=\"submit\"\n            >\n              <Icon name=\"checkmark\" /> Ok\n            </Button>\n          </div>\n        </Form>\n      </div>\n    );\n  };\n\n  private renderInput = (label: string) => (\n    formProps: FieldProps<FormValues>\n  ) => {\n    const { field, form } = formProps;\n    const name = field.name as FORM_OUTPUT_KEY;\n    const error = form.errors[name];\n    const booleanError = !!error;\n    const touched = form.touched[name];\n\n    return (\n      <div>\n        <Form.Field\n          control={Input}\n          placeholder={label}\n          autoComplete=\"off\"\n          label={label}\n          id={name}\n          error={booleanError}\n          onBlur={this.handleFormControlBlur(name, form)}\n          onFocus={this.handleFocus}\n          {...field}\n        />\n\n        {booleanError && touched && (\n          <Message\n            style={{\n              display: \"block\",\n              padding: \"0.5em\",\n              marginBottom: \"1em\",\n              marginTop: \"-10px\"\n            }}\n            error={true}\n            header={error}\n          />\n        )}\n      </div>\n    );\n  };\n\n  private handleFormControlBlur = (\n    name: FORM_OUTPUT_KEY,\n    form: FormikProps<FormValues>\n  ) => () => {\n    form.setFieldTouched(name, true);\n  };\n\n  private handleFocus = () => {\n    this.setState({ graphQlError: undefined });\n  };\n\n  private eliminateEmptyFields = (values: FormValues) => {\n    const data = {} as FormValues;\n\n    for (let [k, val] of Object.entries(values)) {\n      if (val) {\n        val = val.trim();\n\n        if (val) {\n          data[k] = val;\n        }\n      }\n    }\n\n    return data;\n  };\n\n  private prepFormForUpdate = (values: FormValues) => {\n    const data = {} as FormValues;\n\n    for (const [k, val] of Object.entries(values)) {\n      data[k] = val.trim() || null;\n    }\n\n    return data;\n  };\n\n  private initStateWithAuthor = (author: AuthorFrag) => {\n    const start = {} as FormValues;\n    Object.values(FORM_OUTPUT_KEY).forEach(k => {\n      const val = author[k];\n      start[k] = val || \"\";\n    });\n\n    this.state = update(this.state, {\n      initialFormOutput: {\n        $set: start\n      },\n\n      author: {\n        $set: author\n      }\n    });\n  };\n\n  private renderAuthorCreated = () => {\n    const { createdAuthors } = this.state;\n    const len = createdAuthors.length;\n\n    if (!len) {\n      return;\n    }\n\n    return (\n      <Message success={true}>\n        <Message.Header className=\"authors-display-header\">\n          <span className=\"label\">\n            New author\n            {len === 1 ? \"\" : \"s\"} ({len}\n            ):\n          </span>\n\n          <Button\n            compact={true}\n            className=\"go-create-source\"\n            onClick={this.showCreateSourceModal}\n          >\n            Create source?\n          </Button>\n        </Message.Header>\n\n        <ol className=\"authors-list\">\n          {createdAuthors.map(this.renderAuthor)}\n        </ol>\n      </Message>\n    );\n  };\n\n  private renderAuthor = (author: AuthorFrag) => {\n    return <li key={author.id}>{authorFullName(author)}</li>;\n  };\n\n  private showCreateSourceModal = () =>\n    this.setState({ showSourceModal: true });\n\n  private handleAuthorCreated = (author: AuthorFrag) => {\n    this.setState(s =>\n      update(s, {\n        createdAuthors: {\n          $push: [author]\n        }\n      })\n    );\n\n    if (this.contentRef.current) {\n      this.contentRef.current.scrollTop = 0;\n    }\n  };\n}\n\nexport default NewAuthorModal;\n","import gql from \"graphql-tag\";\n\nimport authorFrag from \"./author.fragment\";\n\nexport const createAuthor = gql`\n  mutation CreateAuthor($author: CreateAuthorInput!) {\n    createAuthor(author: $author) {\n      ...AuthorFrag\n    }\n  }\n\n  ${authorFrag}\n`;\n\nexport default createAuthor;\n","import gql from \"graphql-tag\";\nimport { MutationFn } from \"react-apollo\";\n\nimport { authorFrag } from \"./author.fragment\";\nimport { AuthorUpdate, AuthorUpdateVariables } from \"./gen.types\";\n\nexport const authorUpdate = gql`\n  mutation AuthorUpdate($author: UpdateAuthorInput!) {\n    updateAuthor(author: $author) {\n      ...AuthorFrag\n    }\n  }\n\n  ${authorFrag}\n`;\n\nexport default authorUpdate;\n\nexport type AuthorUpdateFn = MutationFn<AuthorUpdate, AuthorUpdateVariables>;\n","import { graphql, compose } from \"react-apollo\";\nimport update from \"immutability-helper\";\n\nimport NewAuthorForm from \"./component\";\nimport {\n  CreateAuthorMutationProps,\n  OwnProps,\n  FormValues,\n  AuthorUpdateGqlProps\n} from \"./new-author-modal\";\nimport CREATE_AUTHOR_MUTATION from \"../../graphql/create-author.mutation\";\nimport AUTHORS_QUERY from \"../../graphql/authors.query\";\nimport {\n  CreateAuthor,\n  CreateAuthorVariables,\n  GetAllAuthors,\n  GetAllAuthorsVariables,\n  AuthorUpdate,\n  AuthorUpdateVariables\n} from \"../../graphql/gen.types\";\nimport { CreateAuthorFn } from \"../../graphql/ops.types\";\nimport USER_LOCAL_QUERY, {\n  UserLocalGqlData,\n  UserLocalGqlProps\n} from \"../../state/auth-user.local.query\";\nimport CURRENT_PROJECT_QUERY, {\n  CurrentProjectLocalData,\n  CurrProjLocalGqlProps\n} from \"../../state/project.local.query\";\nimport AUTHOR_UPDATE_MUTATION, {\n  AuthorUpdateFn\n} from \"../../graphql/update-author.mutation\";\n\nconst createAuthorGql = graphql<\n  OwnProps & UserLocalGqlData & CurrentProjectLocalData,\n  CreateAuthor,\n  CreateAuthorVariables,\n  CreateAuthorMutationProps | undefined\n>(CREATE_AUTHOR_MUTATION, {\n  props: props => {\n    const mutate = props.mutate as CreateAuthorFn;\n    const {\n      ownProps: { currentProject, user }\n    } = props;\n\n    if (currentProject && user) {\n      const projectId = currentProject.id;\n\n      return {\n        createAuthor: (variables: FormValues) =>\n          mutate({\n            variables: {\n              author: {\n                ...variables,\n                projectId,\n                userId: user.id\n              }\n            },\n\n            update: async (store, { data: newAuthorData }) => {\n              if (!newAuthorData) {\n                return;\n              }\n\n              const newAuthor = newAuthorData.createAuthor;\n\n              if (!newAuthor) {\n                return;\n              }\n\n              const query = {\n                query: AUTHORS_QUERY,\n                variables: {\n                  author: {\n                    projectId\n                  }\n                }\n              };\n\n              try {\n                const data = store.readQuery<\n                  GetAllAuthors,\n                  GetAllAuthorsVariables\n                >(query);\n\n                const newData = update(data, {\n                  authors: {\n                    $push: [newAuthor]\n                  }\n                });\n\n                store.writeQuery({ ...query, data: newData });\n              } catch (error) {\n                const msg = `Can't find field authors({\"author\":{\"projectId\":\"${projectId}\"}})`;\n\n                if (error.message.startsWith(msg)) {\n                  return;\n                }\n\n                throw error;\n              }\n            }\n          })\n      };\n    }\n\n    return undefined;\n  }\n});\n\nconst userLocalGql = graphql<\n  OwnProps,\n  UserLocalGqlData,\n  {},\n  UserLocalGqlProps | undefined\n>(USER_LOCAL_QUERY, {\n  props: props => props.data\n});\n\nconst currentProLocalGql = graphql<\n  OwnProps,\n  CurrentProjectLocalData,\n  {},\n  CurrProjLocalGqlProps | undefined\n>(CURRENT_PROJECT_QUERY, {\n  props: props => props.data\n});\n\nconst authorUpdateGql = graphql<\n  OwnProps,\n  AuthorUpdate,\n  AuthorUpdateVariables,\n  AuthorUpdateGqlProps | void\n>(AUTHOR_UPDATE_MUTATION, {\n  props: props => {\n    const mutate = props.mutate as AuthorUpdateFn;\n\n    return {\n      authorUpdate: (id: string, form: FormValues) =>\n        mutate({\n          variables: {\n            author: {\n              id,\n              ...form\n            }\n          }\n        })\n    };\n  }\n});\n\nexport default compose(\n  currentProLocalGql,\n  userLocalGql,\n  createAuthorGql,\n  authorUpdateGql\n)(NewAuthorForm);\n","import jss from \"jss\";\nimport preset from \"jss-preset-default\";\nimport { CSSProperties } from \"react\";\n\nimport { SimpleCss } from \"../../constants\";\nimport { ERROR_COLOR } from \"../../utils/colors\";\n\njss.setup(preset());\n\nexport const styles: SimpleCss = {\n  modal: {\n    marginTop: 0,\n    background: \"#fff\"\n  },\n\n  form: {\n    height: \"100%\",\n    overflowX: \"hidden\",\n    overflowY: \"auto\",\n    paddingRight: 10\n  },\n\n  fieldWrapper: {\n    marginBottom: \"1em\"\n  },\n\n  formButtonsContainer: {\n    display: \"flex\",\n    marginBottom: \"15px\"\n  },\n\n  submitButton: {\n    margin: \"0 15px\"\n  },\n\n  successCard: {\n    backgroundColor: \"#fcfff5\",\n    boxShadow: \"0 0 0 1px #a3c293 inset, 0 0 0 0 transparent\",\n    margin: \"auto\"\n  },\n\n  errorMessage: {\n    position: `relative`,\n    top: -10,\n    color: ERROR_COLOR\n  }\n};\n\nexport const modalStyle = styles.modal as CSSProperties;\n\nexport const { classes } = jss.createStyleSheet(styles).attach();\n","import { RouteComponentProps } from \"react-router-dom\";\nimport { ApolloError } from \"apollo-client\";\nimport { FetchResult } from \"react-apollo\";\nimport { WithFormikConfig, InjectedFormikProps } from \"formik\";\nimport { FormikErrors } from \"formik\";\n\nimport { SourceFullFrag } from \"../../graphql/gen.types\";\nimport { SourceTypeFrag } from \"../../graphql/gen.types\";\nimport { AuthorFrag } from \"../../graphql/gen.types\";\nimport { CreateSource } from \"../../graphql/gen.types\";\nimport { CreateSourceFn } from \"../../graphql/source.mutation\";\nimport { CurrentProjectLocalData } from \"../../state/project.local.query\";\nimport { authorFullName } from \"../../graphql/utils\";\n\nexport interface FormValues {\n  sourceType: SourceTypeFrag | null;\n  authors: AuthorFrag[];\n  topic: string;\n  publication: string;\n  url: string;\n  year: string;\n}\n\ntype FormErrors = { [k in keyof FormValues]: string };\n\nexport const initialFormValues: FormValues = {\n  sourceType: null,\n  authors: [],\n  topic: \"\",\n  publication: \"\",\n  url: \"\",\n  year: \"\"\n};\n\nexport interface State {\n  source?: SourceFullFrag;\n  formError?: ApolloError | { message: string };\n  open: boolean;\n}\n\nexport const initialState: State = { open: true };\n\nexport interface OwnProps extends CurrentProjectLocalData {\n  open: boolean;\n  dismissModal?: () => void;\n  style?: React.CSSProperties;\n  existingSource?: ExistingSourceProps;\n  createSource?: CreateSourceFn;\n  authors?: AuthorFrag[];\n}\n\nexport interface CreateSourceProps {\n  createSource: (\n    values: FormValues\n  ) => Promise<void | FetchResult<CreateSource>>;\n}\n\ntype PropsWithFormikProps = InjectedFormikProps<OwnProps, FormValues>;\n\nexport type Props = PropsWithFormikProps &\n  RouteComponentProps<{}> &\n  OwnProps &\n  CreateSourceProps;\n\nexport const formikConfig: WithFormikConfig<Props, FormValues> = {\n  handleSubmit: async values => null,\n\n  mapPropsToValues: ({ authors }) => {\n    const formAuthors = (authors || []).map((a: AuthorFrag) => ({\n      ...a,\n      fullName: authorFullName(a)\n    }));\n\n    return { ...initialFormValues, authors: formAuthors };\n  },\n\n  enableReinitialize: true,\n\n  validate: values => {\n    const errors: FormikErrors<FormErrors> = {};\n\n    if (!values.sourceType) {\n      errors.sourceType = \"Select a source type\";\n    } else if (!values.authors || !values.authors.length) {\n      errors.authors = \"Select at least one author\";\n    } else if (!values.topic || !values.topic.trim()) {\n      errors.topic = \"Enter source topic according to author(s)\";\n    }\n\n    return errors;\n  }\n};\n\nexport interface ExistingSourceProps {\n  onSourceChanged?: OnSourceChangedCb;\n  source: SourceFullFrag;\n}\n\nexport type OnSourceChangedCb = (source: SourceFullFrag) => void;\n","import React from \"react\";\nimport { FormikProps } from \"formik\";\nimport { Field } from \"formik\";\nimport { FieldProps } from \"formik\";\nimport { Form } from \"semantic-ui-react\";\nimport { Button } from \"semantic-ui-react\";\nimport { Icon } from \"semantic-ui-react\";\nimport { Header } from \"semantic-ui-react\";\nimport { Message } from \"semantic-ui-react\";\nimport { Input } from \"semantic-ui-react\";\nimport { Modal } from \"semantic-ui-react\";\nimport { Card } from \"semantic-ui-react\";\nimport isEmpty from \"lodash/isEmpty\";\n\nimport { CreateSource_createSource } from \"../../graphql/gen.types\";\nimport { AuthorFrag } from \"../../graphql/gen.types\";\nimport { sourceDisplay } from \"../../graphql/utils\";\nimport SourceTypeControlComponent from \"../SourceTypeControl\";\nimport AuthorsControlComponent from \"../AuthorsControl\";\nimport { makeSourceURL } from \"../../routes/util\";\nimport { styles } from \"./styles\";\nimport { classes } from \"./styles\";\nimport { modalStyle } from \"./styles\";\nimport { Props } from \"./source-modal\";\nimport { State } from \"./source-modal\";\nimport { initialState } from \"./source-modal\";\nimport { FormValues } from \"./source-modal\";\n\nexport class SourceModal extends React.Component<Props, State> {\n  state = initialState;\n\n  render() {\n    const { open, style, dismissModal } = this.props;\n\n    const toggleModal = dismissModal ? open : this.state.open;\n\n    return (\n      <Modal\n        style={{ ...(style || {}), ...modalStyle }}\n        basic={true}\n        size=\"small\"\n        dimmer=\"inverted\"\n        open={toggleModal}\n        onClose={this.resetModal}\n      >\n        {this.renderErrorOrSuccess()}\n\n        <Header icon=\"user\" content=\"Create quote source\" />\n\n        <Modal.Content>{this.renderForm()}</Modal.Content>\n      </Modal>\n    );\n  }\n\n  submit = async () => {\n    const { createSource, values, setSubmitting, resetForm } = this.props;\n\n    if (!createSource) {\n      this.setState({\n        formError: { message: \"You have not selected a project\" }\n      });\n\n      return;\n    }\n\n    setSubmitting(true);\n\n    try {\n      const result = await createSource(values);\n\n      setSubmitting(false);\n      resetForm();\n\n      if (!result) {\n        return;\n      }\n\n      const data = result.data;\n\n      if (!data) {\n        return;\n      }\n\n      const source = data.createSource as CreateSource_createSource;\n      this.setState({ source });\n    } catch (error) {\n      this.setState({ formError: error });\n      setSubmitting(false);\n    }\n  };\n\n  renderForm = () => {\n    const { handleReset, dirty, isSubmitting, errors } = this.props;\n    const dirtyOrSubmitting = !dirty || isSubmitting;\n    const disableSubmit = dirtyOrSubmitting || !isEmpty(errors);\n\n    return (\n      <Form className={classes.form} onSubmit={this.submit}>\n        <Field name=\"sourceType\" render={this.renderSourceTypeControl} />\n        <Field name=\"authors\" render={this.renderAuthorsControl} />\n\n        {[\n          { name: \"topic\" },\n          { name: \"year\" },\n          { name: \"publication\" },\n          { name: \"url\" }\n        ].map(this.renderTextControl)}\n\n        <div className={classes.formButtonsContainer}>\n          <Button\n            id=\"source-modal-close\"\n            basic={true}\n            color=\"red\"\n            onClick={this.resetModal}\n            disabled={isSubmitting}\n            type=\"button\"\n          >\n            <Icon name=\"remove\" /> Dismiss\n          </Button>\n\n          <Button\n            id=\"source-modal-submit\"\n            style={styles.submitButton}\n            color=\"green\"\n            disabled={disableSubmit}\n            loading={isSubmitting}\n          >\n            <Icon name=\"checkmark\" /> Ok\n          </Button>\n\n          <Button\n            basic={true}\n            color=\"red\"\n            onClick={handleReset}\n            disabled={dirtyOrSubmitting}\n          >\n            <Icon name=\"remove\" /> Reset\n          </Button>\n        </div>\n      </Form>\n    );\n  };\n\n  resetModal = async () => {\n    await this.setState(initialState);\n    this.dismissModal();\n  };\n\n  renderErrorOrSuccess = () => {\n    const { formError, source } = this.state;\n\n    if (formError) {\n      return (\n        <Message icon={true} error={true}>\n          <Icon name=\"ban\" />\n\n          <Message.Content>\n            <Message.Header>An error has occurred</Message.Header>\n\n            {formError.message}\n          </Message.Content>\n        </Message>\n      );\n    }\n\n    if (source) {\n      return (\n        <Card style={styles.successCard}>\n          <Card.Content>\n            <Card.Header style={{ color: \"#a3c293\" }}>Success</Card.Header>\n\n            <Card.Description>{sourceDisplay(source)}</Card.Description>\n\n            <Card.Content extra={true}>\n              <div className=\"ui two buttons\">\n                <Button\n                  basic={true}\n                  color=\"green\"\n                  onClick={this.goToSource(source.id)}\n                >\n                  Go to source\n                </Button>\n                <Button basic={true} color=\"red\" onClick={this.resetModal}>\n                  Dismiss\n                </Button>\n              </div>\n            </Card.Content>\n          </Card.Content>\n        </Card>\n      );\n    }\n\n    return undefined;\n  };\n\n  handleFocus = () =>\n    this.setState({ formError: undefined, source: undefined });\n\n  renderSourceTypeControl = (formProps: FieldProps<FormValues>) => {\n    const {\n      field: { name, value },\n      form\n    } = formProps;\n    const error = form.errors[name];\n    const booleanError = !!error;\n    const touched = form.touched[name];\n\n    return (\n      <div className={classes.fieldWrapper}>\n        <Form.Field\n          control={SourceTypeControlComponent}\n          label=\"Select source type\"\n          error={booleanError}\n          selectError={booleanError}\n          name={name}\n          value={value}\n          onFocus={this.handleFocus}\n          handleBlur={this.handleFormControlBlur(name, form)}\n          handleChange={this.handleControlChange(name, form)}\n        />\n\n        {this.renderFieldError(booleanError && touched, error)}\n      </div>\n    );\n  };\n\n  renderAuthorsControl = (formProps: FieldProps<FormValues>) => {\n    const {\n      field: { name, value },\n      form\n    } = formProps;\n    const error = form.errors[name];\n    const booleanError = !!error;\n    const touched = form.touched[name];\n\n    return (\n      <div className={classes.fieldWrapper}>\n        <Form.Field\n          control={AuthorsControlComponent}\n          label=\"Select authors\"\n          error={booleanError}\n          selectError={booleanError}\n          onFocus={this.handleFocus}\n          name={name}\n          value={value}\n          handleBlur={this.handleFormControlBlur(name, form)}\n          handleChange={this.handleControlChange(name, form)}\n        />\n\n        {this.renderFieldError(booleanError && touched, error)}\n      </div>\n    );\n  };\n\n  renderTextControl = ({ name, label }: { name: string; label?: string }) => {\n    label = label ? label : name.charAt(0).toUpperCase() + name.slice(1);\n\n    return (\n      <Field\n        key={name}\n        name={name}\n        render={this.renderTextControlFormik(label)}\n      />\n    );\n  };\n\n  renderTextControlFormik = (label: string) => (\n    formProps: FieldProps<FormValues>\n  ) => {\n    const { field, form } = formProps;\n    const { name } = field;\n    const error = form.errors[name];\n    const booleanError = !!error;\n    const touched = form.touched[name];\n\n    return (\n      <div className={classes.fieldWrapper}>\n        <Form.Field\n          control={Input}\n          placeholder={label}\n          label={label}\n          id={name}\n          error={booleanError}\n          autoComplete=\"off\"\n          onFocus={this.handleFocus}\n          {...field}\n        />\n\n        {this.renderFieldError(booleanError && touched, error)}\n      </div>\n    );\n  };\n\n  renderFieldError = (show: boolean, error: string) => {\n    return show ? (\n      <div className={classes.errorMessage}> {error} </div>\n    ) : (\n      undefined\n    );\n  };\n\n  handleFormControlBlur = (\n    name: string,\n    form: FormikProps<FormValues>\n  ) => () => {\n    form.setFieldTouched(name, true);\n  };\n\n  handleControlChange = (name: string, form: FormikProps<FormValues>) => (\n    val: undefined | AuthorFrag\n  ) => form.setFieldValue(name, val);\n\n  goToSource = (id: string) => async () => {\n    await this.setState(initialState);\n    this.dismissModal();\n    this.props.history.push(makeSourceURL(id));\n  };\n\n  private dismissModal = () => {\n    const { dismissModal } = this.props;\n\n    if (dismissModal) {\n      dismissModal();\n    } else {\n      this.setState({ open: false });\n    }\n  };\n}\n\nexport default SourceModal;\n","import gql from \"graphql-tag\";\nimport { MutationFn } from \"react-apollo\";\n\nimport { sourceFullFrag } from \"./source-full.fragment\";\nimport { CreateSourceVariables, CreateSource } from \"./gen.types\";\n\nexport const sourceMut = gql`\n  mutation CreateSource($source: CreateSourceInput!) {\n    createSource(source: $source) {\n      ...SourceFullFrag\n    }\n  }\n  ${sourceFullFrag}\n`;\n\nexport default sourceMut;\n\nexport type CreateSourceFn = MutationFn<CreateSource, CreateSourceVariables>;\n","import { withRouter } from \"react-router-dom\";\nimport { graphql, compose } from \"react-apollo\";\nimport { withFormik } from \"formik\";\nimport update from \"immutability-helper\";\n\nimport SourceModal from \"./component\";\nimport { CreateSource } from \"../../graphql/gen.types\";\nimport { CreateSourceVariables, Sources1Query } from \"../../graphql/gen.types\";\nimport CREATE_SOURCE_MUTATION, {\n  CreateSourceFn\n} from \"../../graphql/source.mutation\";\nimport SOURCES_QUERY from \"../../graphql/sources-1.query\";\nimport {\n  OwnProps,\n  CreateSourceProps,\n  FormValues,\n  formikConfig\n} from \"./source-modal\";\nimport CURRENT_PROJECT_QUERY, {\n  CurrentProjectLocalData,\n  CurrProjLocalGqlProps\n} from \"../../state/project.local.query\";\n\nconst currentProjGql = graphql<\n  {},\n  CurrentProjectLocalData,\n  {},\n  CurrProjLocalGqlProps | void\n>(CURRENT_PROJECT_QUERY, {\n  props: props => props.data\n});\n\nconst createSourceGraphql = graphql<\n  OwnProps,\n  CreateSource,\n  CreateSourceVariables,\n  CreateSourceProps | undefined\n>(CREATE_SOURCE_MUTATION, {\n  props: props => {\n    const mutate = props.mutate as CreateSourceFn;\n\n    if (!mutate) {\n      return;\n    }\n\n    const { currentProject } = props.ownProps;\n\n    if (!currentProject) {\n      return;\n    }\n\n    const { id: projectId } = currentProject;\n\n    return {\n      createSource: (values: FormValues) => {\n        const variables: CreateSourceVariables = {\n          source: {\n            sourceTypeId: (values.sourceType && values.sourceType.id) || \"0\",\n            authorIds: values.authors.map(a => a.id),\n            topic: values.topic.trim(),\n            publication: values.publication.trim() || null,\n            url: values.url.trim() || null,\n            year: values.year.trim() || null,\n            projectId\n          }\n        };\n\n        return mutate({\n          variables,\n\n          update: (store, { data: sourceData }) => {\n            if (!sourceData) {\n              return;\n            }\n\n            const { createSource: source } = sourceData;\n\n            if (!source) {\n              return;\n            }\n\n            const query = {\n              query: SOURCES_QUERY,\n              variables: {\n                source: { projectId }\n              }\n            };\n\n            try {\n              const data = store.readQuery(query) as Sources1Query;\n\n              const newData = update(data, {\n                sources: {\n                  $push: [source]\n                }\n              });\n\n              store.writeQuery({\n                ...query,\n                data: newData\n              });\n            } catch (error) {\n              const msg = error.message.startsWith(\n                `Can't find field sources({\"source\":{\"projectId\":\"${projectId}\"}})`\n              );\n\n              if (!msg) {\n                throw error;\n              }\n            }\n          }\n        });\n      }\n    };\n  }\n});\n\nexport default compose(\n  currentProjGql,\n  withRouter,\n  createSourceGraphql,\n  withFormik(formikConfig)\n)(SourceModal);\n","import Select, { OnChangeHandler } from \"react-select\";\nimport React from \"react\";\n\nimport { SourceTypeFrag } from \"../../graphql/gen.types\";\nimport { SourceTypeQueryComponent } from \"../../graphql/ops.types\";\nimport SOURCE_TYPE_QUERY from \"../../graphql/source-types.query\";\n\ninterface Props {\n  selectError: boolean;\n  handleChange: OnChangeHandler<SourceTypeFrag[]>;\n  handleBlur: () => void;\n  name: string;\n  value: SourceTypeFrag[];\n}\n\nexport class SourceTypeControlComponent extends React.Component<Props> {\n  render() {\n    const { name, value, selectError, handleChange, handleBlur } = this.props;\n\n    return (\n      <SourceTypeQueryComponent query={SOURCE_TYPE_QUERY}>\n        {({ data }) => {\n          let sourceTypes = [] as SourceTypeFrag[];\n\n          if (data) {\n            sourceTypes = data.sourceTypes as SourceTypeFrag[];\n          }\n\n          return (\n            <Select\n              className={`${selectError ? \"error\" : \"\"}`}\n              id={name}\n              name={name}\n              placeholder=\"Select source type\"\n              options={sourceTypes}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={value}\n              labelKey=\"name\"\n              valueKey=\"id\"\n            />\n          );\n        }}\n      </SourceTypeQueryComponent>\n    );\n  }\n}\n\nexport default SourceTypeControlComponent;\n","import SourceTypeControlComponent from \"./component\";\n\nexport default SourceTypeControlComponent;\n","import Select from \"react-select\";\nimport React from \"react\";\n\nimport { GetAllAuthorsQueryComponent } from \"../../graphql/ops.types\";\nimport AUTHORS_QUERY from \"../../graphql/authors.query\";\nimport { authorFullName } from \"../../graphql/utils\";\nimport { AuthorWithFullName } from \"../../graphql/utils\";\nimport { Props } from \"./authors-control\";\nimport Loading from \"../Loading\";\n\nexport class AuthorsControl extends React.Component<Props> {\n  render() {\n    const {\n      name,\n      value,\n      selectError,\n      handleChange,\n      handleBlur,\n      loading,\n      currentProject\n    } = this.props;\n\n    if (loading || !currentProject) {\n      return <Loading />;\n    }\n\n    return (\n      <GetAllAuthorsQueryComponent\n        query={AUTHORS_QUERY}\n        variables={{\n          author: {\n            projectId: currentProject.id\n          }\n        }}\n      >\n        {({ data }) => {\n          const authors = ((data && data.authors) || []).reduce(\n            (acc, a) => {\n              if (a) {\n                acc.push({ ...a, fullName: authorFullName(a) });\n              }\n              return acc;\n            },\n            [] as AuthorWithFullName[]\n          );\n\n          return (\n            <Select\n              className={`${selectError ? \"error\" : \"\"}`}\n              id={name}\n              name={name}\n              placeholder=\"Select authors\"\n              options={authors}\n              multi={true}\n              autoBlur={true}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={value}\n              labelKey=\"fullName\"\n              valueKey=\"id\"\n            />\n          );\n        }}\n      </GetAllAuthorsQueryComponent>\n    );\n  }\n}\n\nexport default AuthorsControl;\n","import { graphql } from \"react-apollo\";\n\nimport CURRENT_PROJECT_QUERY, {\n  CurrentProjectLocalData,\n  CurrProjLocalGqlProps\n} from \"../../state/project.local.query\";\nimport AuthorsControl from \"./component\";\nimport { OwnProps } from \"./authors-control\";\n\nconst currentProjGql = graphql<\n  OwnProps,\n  CurrentProjectLocalData,\n  {},\n  CurrProjLocalGqlProps | undefined\n>(CURRENT_PROJECT_QUERY, {\n  props: props => props.data\n});\n\nexport default currentProjGql(AuthorsControl);\n"],"sourceRoot":""}