{"version":3,"sources":["graphql/quote-from-tag.fragment.ts","graphql/quotes-1.query.ts","utils/main-content-centered-style.util.ts","graphql/text-search-row.fragment.ts","graphql/text-search-result.fragment.ts","graphql/text-search.query.ts","components/SearchComponent/styles.tsx","containers/error-boundary.container.tsx","components/SearchComponent/component.tsx","state/search-component-state.local.mutation.ts","state/search-component-state.local.query.ts","components/SearchComponent/index.ts","routes/NewQuote/form-tag-control.component.tsx","routes/NewQuote/form-source-control.component.tsx","routes/NewQuote/date.component.tsx","routes/NewQuote/form-page-start-end-control.component.tsx","routes/NewQuote/form-volume-issue-control.component.tsx","graphql/quote.mutation.ts","graphql/source.query.ts","routes/NewQuote/error-modal.component.tsx","routes/NewQuote/new-quote.ts","routes/NewQuote/SuccessModal/styles.ts","components/NewQuoteSidebar/new-quote-sidebar.ts","routes/NewQuote/SuccessModal/index.ts","routes/NewQuote/SuccessModal/component.tsx","components/NewQuoteSidebar/component.tsx","components/NewQuoteSidebar/index.ts","routes/NewQuote/route.tsx","routes/NewQuote/index.ts"],"names":["quoteFromTagFrag","gql","_templateObject","quotes1Query","__webpack_exports__","flex","overflowX","overflowY","padding","textSearchRowFrag","textSearchResultFrag","text_search_result_fragment_templateObject","textSearchQuery","text_search_query_templateObject","jss","setup","preset","styles","root","ROOT_CONTAINER_STYLE","input","margin","mainContent","Object","objectSpread","mainContentStyle","resultContainer","wordBreak","result","marginTop","&.first-of-type","& .ui.list>a.item","color","resultRowHeaderContainer","textAlign","resultRowHeader","display","minWidth","boxShadow","resultRowItem","borderTop","borderBottom","classes","createStyleSheet","attach","ErrorBoundary","_React$Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","inherits","createClass","key","value","error","info","setState","react","Message","icon","style","className","Icon","name","Content","Header","marginBottom","JSON","stringify","children","React","RENDER_ROW_PROPS","SOURCES","makeSourceURL","TAGS","makeTagURL","QUOTES","makeQuoteURL","AUTHORS","makeAuthorRouteURL","initialState","searchText","searchLoading","SearchQuotesComponent","onSearchInputChange","e","_ref","undefined","searchError","doSearchDebounced","doSearch","asyncToGenerator","regenerator_default","a","mark","_callee","data","quoteFullSearch","wrap","_context","prev","next","trim","length","abrupt","client","query","ALL_MATCHING_TEXT_QUERY","variables","text","sent","t0","stop","renderResult","_ref3","quotes","tags","authors","sources","sourceTypes","react_default","createElement","map","renderCategory","warning","size","fitted","fontSize","data0","header","source","List","divided","renderRow","tid","column","rowProps","otherProps","as","NavLink","to","toString","Item","assign","debounce","nextProps","searchComponentState","updateSCSLocal","cancel","Input","placeholder","fluid","autoFocus","onChange","loading","error_boundary_container","Component","mutationOps","search_component_state_local_mutation_templateObject","sCSLMutationGql","graphql","mutate","queryOps","search_component_state_local_query_templateObject","scslGql","SCSL_QUERY","compose","withApollo","SearchQuotes","TagControl","_this$props","selectError","react_select_es","concat","id","options","multi","handleChange","onBlur","handleBlur","labelKey","valueKey","SourceControl","s","sourceDisplay","date","border","outline","borderRadius","dateDayInput","flexGrow","dateMonthInput","dateYearInput","Date","errors","getError","err","target","min","max","realVal","_this$state","defineProperty","handleKeyPress","currentTarget","len","maxLength","includes","preventDefault","forEach","fn","bind","assertThisInitialized","nextState","_this$state$date","day","month","year","Form","Group","inline","Field","control","type","label","onKeyPress","page","justifyContent","startInput","endInput","Page","start","end","currentState","_this$state$page","volumeIssue","volumeInput","issueInput","VolumeIssue","_this$state$volumeIss","volume","issue","quoteMut","sourceFullFrag","sourceQuery","source_query_templateObject","ShouldReUseSource","modal","maxHeight","content","ERROR_COLOR","backgroundColor","ERROR_BG_COLOR","buttonContainer","flexShrink","modalStyle","errorStyle","buttonContainerStyle","ErrorModal","apply","arguments","Modal","dimmer","open","onClose","dismiss","message","Button","onClick","initialFormValues","quote","extras","formOutputs","sourceId","ResourceName","maxWidth","background","SUCCESS_BG_COLOR","SUCCESS_COLOR","messageContainer","messageIcon","paddingRight","messageHeader","fontWeight","messageAction","fontStyle","buttonsContainer","&.single","contentStyle","messageIconStyle","SuccessModal","_getPrototypeOf2","_len","args","Array","_key","renderButtons","reUseSource","inverted","DO_NOT_RE_USE_SOURCE","RE_USE_SOURCE","QuotesSidebar","onTabChange","event","activeIndex","fetchQuotes","fetchTags","fetchSources","renderError","resource","graphQlError","toLowerCase","charAt","toUpperCase","slice","renderQuotes","menuItem","render","Tab","Pane","attached","renderResourcesOr","renderquote","renderTags","rendertag","_ref2","navigateTo","renderSources","rendersource","renderSearch","SearchComponent","fetching","QUOTES_QUERY","_callee2","_context2","TAGS_QUERY","_callee3","currentProject","projectId","_context3","SOURCES_QUERY","_update","update","$set","url","history","push","menu","pointing","secondary","panes","defaultActiveIndex","resourcesName","resources","Loading","relaxed","ordered","currLocalProjGql","LOCAL_PROJECT_QUERY","withRouter","NewQuote","selectedTags","formContainerRef","renderErrorOrSuccess","graphqlError","submittedSourceId","error_modal_component_ErrorModal","dismissErrorModal","NewQuote_SuccessModal","onSuccessModalDismissed","renderSourceQuoteHeader","dividing","validate","values","_arr","keys","_i","renderForm","handleReset","dirty","isSubmitting","handleSubmit","dirtyOrSubmitting","disableSubmit","isEmpty","onSubmit","Dimmer","active","Loader","formik_esm","renderTagControl","renderSourceControl","renderQuoteControl","renderPageControl","renderVolumeIssueControl","renderDateControl","renderExtrasControl","basic","onResetClicked","disabled","submit","createQuote","formikBag","setSubmitting","resetForm","scrollToTopOfForm","_x","_x2","onTagCreated","tag","toConsumableArray","formProps","_formProps$field","field","form","booleanError","touched","onTagSelected","handleFormControlBlur","setFieldValue","setFieldTouched","handleControlChange","val","TextArea","formik","date_component_Date","form_page_start_end_control_component_Page","form_volume_issue_control_component_VolumeIssue","_formProps$field2","getSources","queryResult","validateQuote","validateExtras","validateSource","validateTags","t","validateDate","noPaddedDay","padStart","inputDate","isValid","dateIsValid","validatePage","pageStart","pageEnd","validateVolumeIssue","current","scrollTop","reset","_this$state2","makeNewQuoteURL","fetchSource","_result","SOURCE_QUERY","writeQuoteToCache","_ref6","cache","_ref5","quoteData","quotesQuery","queryErrorStart","readQuery","writeQuery","startsWith","_x3","_x4","setTitle","_this2","AppSidebar","components_Header","title","showSideBarTrigger","ref","react_apollo_browser_umd","mutation","QUOTE_MUTATION","initialValues","enableReinitialize","NewQuoteSidebar","match","params","tagsGraphQl","currentProjectGql","CURRENT_PROJECT_QUERY"],"mappings":"0UAEO,IAAMA,QAAmBC,GAAHC,qQCEtB,IAAMC,EAAeF,IAAHC,IAOrBF,KAGWG,wCCdAC,EAAA,GACbC,KAAM,EACNC,UAAW,SACXC,UAAW,OACXC,QAAS,uYCFJ,IASQC,EATkBR,IAAHC,wZCEvB,IAAMQ,EAAuBT,IAAHU,IAuB7BF,GAGWC,6NC1BR,IAUQE,EAVgBX,IAAHY,IAOxBH,gECJJI,IAAIC,MAAMC,OAEV,IAKaC,EAAS,CACpBC,KAAMC,IAENC,MAAO,CACLC,OAAQ,SAGVC,YAAYC,OAAAC,EAAA,EAAAD,CAAA,GACPE,IADM,CAETJ,OAAQ,gBAGVK,gBAAiB,CACfL,OAAQ,IACRd,UAAW,OACXoB,UAAW,aAGbC,OAAQ,CACNC,UAAW,QACXC,kBAAmB,CACjBD,UAAW,MAEbE,oBAAqB,CACnBC,MAAO,YAIXC,yBAA0B,CACxBC,UAAW,UAGbC,gBAAiB,CACfC,QAAS,eACTC,SAAU,MACVC,UAAW,yBAGbC,cAAchB,OAAAC,EAAA,EAAAD,CAAA,GA3CW,CACzBiB,UAAW,CAAC,OAAQ,gBA0CP,CAEXC,aAAc,sBACdZ,UAAW,KAMAa,EAAY5B,IAAI6B,iBAAiB1B,GAAQ2B,SAAzCF,QCCAG,EAjDf,SAAAC,GAKE,SAAAD,EAAYE,GAA2B,IAAAC,EAAA,OAAAzB,OAAA0B,EAAA,EAAA1B,CAAA2B,KAAAL,IACrCG,EAAAzB,OAAA4B,EAAA,EAAA5B,CAAA2B,KAAA3B,OAAA6B,EAAA,EAAA7B,CAAAsB,GAAAQ,KAAAH,KAAMH,KAFRO,MAA4B,CAAEC,UAAU,GACDP,EALzC,OAAAzB,OAAAiC,EAAA,EAAAjC,CAAAsB,EAAAC,GAAAvB,OAAAkC,EAAA,EAAAlC,CAAAsB,EAAA,EAAAa,IAAA,oBAAAC,MAAA,SASoBC,EAAcC,GAE9BX,KAAKY,SAAS,CAAEP,UAAU,MAX9B,CAAAG,IAAA,SAAAC,MAAA,WAiBI,OAAIT,KAAKI,MAAMC,SAGXQ,EAAA,cAACC,EAAA,EAAD,CACEJ,OAAO,EACPK,MAAM,EACNC,MAAO,CACLrC,UAAW,QAEbsC,UAAWjB,KAAKH,MAAMoB,WAAa,IAEnCJ,EAAA,cAACK,EAAA,EAAD,CAAMC,KAAK,QAEXN,EAAA,cAACC,EAAA,EAAQM,QAAT,KACEP,EAAA,cAACC,EAAA,EAAQO,OAAT,CACEL,MAAO,CACLzB,aAAc,YACdL,QAAS,eACToC,aAAc,SAJlB,yBASAT,EAAA,yBAAMU,KAAKC,UAAUxB,KAAKI,MAAMO,KAAM,KAAM,MAK7CX,KAAKH,MAAM4B,aA7CtB9B,EAAA,CAAmC+B,qBCc7BC,EAAmB,CACvBC,QAASC,IACTC,KAAMC,IACNC,OAAQC,IACRC,QAASC,KAGLC,EAAe,CACnBC,WAAY,GACZC,eAAe,GA0NFC,EAvNf,SAAA3C,GAcE,SAAA2C,EAAY1C,GAAc,IAAAC,EAAA,OAAAzB,OAAA0B,EAAA,EAAA1B,CAAA2B,KAAAuC,IACxBzC,EAAAzB,OAAA4B,EAAA,EAAA5B,CAAA2B,KAAA3B,OAAA6B,EAAA,EAAA7B,CAAAkE,GAAApC,KAAAH,KAAMH,KALRO,MAAegC,EAIWtC,EAoE1B0C,oBAAiD,SAACC,EAADC,GAAkB,IAAZjC,EAAYiC,EAAZjC,MAK/C/B,EAAWoB,EAAKM,MAAhB1B,OACNA,EAAS+B,EAAQ/B,OAASiE,EAC1B7C,EAAKc,SAAS,CACZyB,WAAY5B,EACZmC,iBAAaD,EACbjE,WAGFoB,EAAK+C,qBAjFmB/C,EAoF1BgD,SApF0BzE,OAAA0E,EAAA,EAAA1E,CAAA2E,EAAAC,EAAAC,KAoFf,SAAAC,IAAA,IAAAd,EAAA3D,EAAA0E,EAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,aACHpB,EAAavC,EAAKM,MAAMiC,WAAWqB,QAE1BC,OAAS,GAHf,CAAAJ,EAAAE,KAAA,eAAAF,EAAAK,OAAA,wBAOT9D,EAAKc,SAAS,CAAE0B,eAAe,IAPtBiB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAUc3D,EAAKD,MAAMgE,OAAOC,MAGrC,CACAA,MAAOC,EACPC,UAAW,CACTC,KAAM,CACJA,KAAM5B,MAjBL,UAUD3D,EAVC6E,EAAAW,KAsBDd,EAAO1E,EAAO0E,KAtBb,CAAAG,EAAAE,KAAA,gBAAAF,EAAAK,OAAA,kBA4BDP,EAAkBD,EAAKC,gBAE7BvD,EAAKc,SAAS,CAAE0B,eAAe,EAAO5D,OAAQ2E,IA9BvCE,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAY,GAAAZ,EAAA,SAgCPzD,EAAKc,SAAS,CAAE0B,eAAe,EAAOM,YAAWW,EAAAY,KAhC1C,yBAAAZ,EAAAa,SAAAjB,EAAAnD,KAAA,aApFeF,EAwH1BuE,aAAe,SAAAC,GAMa,IAL1BC,EAK0BD,EAL1BC,OACAC,EAI0BF,EAJ1BE,KACAC,EAG0BH,EAH1BG,QACAC,EAE0BJ,EAF1BI,QACAC,EAC0BL,EAD1BK,YAEA,OAAOF,GAAWF,GAAUG,GAAWC,GAAeH,EACpDI,EAAA3B,EAAA4B,cAAA,OAAK5D,UAAWzB,EAAQhB,iBACrB,CAAC+F,EAAQC,EAAMC,EAASC,EAASC,GAAaG,IAAIhF,EAAKiF,iBAG1DH,EAAA3B,EAAA4B,cAAC/D,EAAA,EAAD,CACEG,UAAWzB,EAAQhB,gBACnBwC,MAAO,CAAEhC,UAAW,SAAU1B,QAAS,QACvCyD,MAAM,EACNiE,SAAS,EACTC,KAAK,SAELL,EAAA3B,EAAA4B,cAAC3D,EAAA,EAAD,CACEC,KAAK,UACL8D,KAAK,OACLC,QAAQ,EACRlE,MAAO,CAAEmE,SAAU,SAErBP,EAAA3B,EAAA4B,cAAC/D,EAAA,EAAQM,QAAT,qBAjJoBtB,EAsJ1BiF,eAAiB,SAAC3B,GAChB,GAAKA,EAAL,CAIA,IAAMgC,EAAQhC,EAAK,GAEnB,GAAKgC,EAAL,CAIA,IAAMC,EAASD,EAAME,OAErB,OACEV,EAAA3B,EAAA4B,cAAA,OAAK5D,UAAWzB,EAAQd,OAAQ8B,IAAK6E,GACnCT,EAAA3B,EAAA4B,cAAA,OAAK5D,UAAWzB,EAAQT,0BACtB6F,EAAA3B,EAAA4B,cAAA,QAAM5D,UAAWzB,EAAQP,iBAAkBoG,IAG7CT,EAAA3B,EAAA4B,cAACU,EAAA,EAAD,CAAMC,SAAS,GAAOpC,EAAK0B,IAAIhF,EAAK2F,UAAUJ,SAzK1BvF,EA8K1B2F,UAAY,SAACJ,GAAD,OAAoB,SAACjC,GAC/B,GAAKA,EAAL,CADkE,IAK1Da,EAAsBb,EAAtBa,KAAMyB,EAAgBtC,EAAhBsC,IAAKC,EAAWvC,EAAXuC,OAEbC,EAAWjE,EAAiB0D,GAC5BQ,EAAaD,EACf,CACEE,GAAIC,IACJC,GAAIJ,EAASF,EAAIO,aAEnB,GAEJ,OACErB,EAAA3B,EAAA4B,cAACU,EAAA,EAAKW,KAAN7H,OAAA8H,OAAA,CACE3F,IAAKkF,EAAMC,EACX1E,UAAWzB,EAAQH,eACfwG,GAEJjB,EAAA3B,EAAA4B,cAACU,EAAA,EAAKnE,QAAN,KAAe6C,OAhMnBnE,EAAK+C,kBAAoBuD,YAAStG,EAAKgD,SAAU,KAHzBhD,EAd5B,OAAAzB,OAAAiC,EAAA,EAAAjC,CAAAkE,EAAA3C,GAAAvB,OAAAkC,EAAA,EAAAlC,CAAAkE,EAAA,OAAA/B,IAAA,2BAAAC,MAAA,SACkC4F,EAAkBjG,GAAc,IACtDkG,EAAyBD,EAAzBC,qBACR,OAAIA,GAAwBlG,IAAUgC,EAC7BkE,EAGF,SAPXjI,OAAAkC,EAAA,EAAAlC,CAAAkE,EAAA,EAAA/B,IAAA,uBAAAC,MAAA,WAqBIT,KAAKH,MAAM0G,eAAe,CACxBvC,UAAW,CACTsC,qBAAsBtG,KAAKI,SAG/BJ,KAAK6C,kBAAkB2D,WA1B3B,CAAAhG,IAAA,SAAAC,MAAA,WA8BI,OACEmE,EAAA3B,EAAA4B,cAAA,OAAK5D,UAAWzB,EAAQxB,MACtB4G,EAAA3B,EAAA4B,cAAA,YACED,EAAA3B,EAAA4B,cAAC4B,EAAA,EAAD,CACExF,UAAWzB,EAAQtB,MACnB6C,KAAK,SACL2F,YAAY,YACZC,OAAO,EACPC,WAAW,EACXC,SAAU7G,KAAKwC,oBACf/B,MAAOT,KAAKI,MAAMiC,WAClByE,QAAS9G,KAAKI,MAAMkC,iBAIxBsC,EAAA3B,EAAA4B,cAACkC,EAAD,CAAe9F,UAAWzB,EAAQpB,aAChCwG,EAAA3B,EAAA4B,cAAA,OAAK5D,UAAWzB,EAAQpB,aACrB4B,KAAKI,MAAMwC,aACVgC,EAAA3B,EAAA4B,cAAC/D,EAAA,EAAD,CACEJ,OAAO,EACPK,MAAM,EACNC,MAAO,CACLrC,UAAW,SAGbiG,EAAA3B,EAAA4B,cAAC3D,EAAA,EAAD,CAAMC,KAAK,QAEXyD,EAAA3B,EAAA4B,cAAC/D,EAAA,EAAQM,QAAT,KACEwD,EAAA3B,EAAA4B,cAAC/D,EAAA,EAAQO,OAAT,CACEL,MAAO,CACLzB,aAAc,YACdL,QAAS,eACToC,aAAc,SAJlB,yBASAsD,EAAA3B,EAAA4B,cAAA,WAAMtD,KAAKC,UAAUxB,KAAKI,MAAMwC,YAAa,KAAM,OAKvD5C,KAAKI,MAAMwC,aACX5C,KAAKI,MAAMiC,YACXrC,KAAKI,MAAM1B,QACXsB,KAAKqE,aAAarE,KAAKI,MAAM1B,eA3E3C6D,EAAA,CAA2Cb,IAAMsF,0QCjC1C,IAAMC,EAAclK,IAAHmK,KAoBXC,EAAkBC,kBAC7BH,EACA,CACEpH,MAAO,SAAAA,GAGL,MAAO,CACL0G,eAHa1G,EAAMwH,ySCxBpB,IAeQC,EAfSvK,IAAHwK,IAYjB/J,GCREgK,EAAUJ,kBACdK,EACA,CACE5H,MAAO,SAAAA,GAAK,OAAIA,EAAMuD,QAIXsE,sBACbC,aACAH,EACAL,EAHaO,CAIbE,uWCPmBC,mLACV,IAAAC,EAC8B9H,KAAKH,MAAlCsB,EADD2G,EACC3G,KAAMV,EADPqH,EACOrH,MAAOsH,EADdD,EACcC,YAErB,OACElH,EAAA,cAACmH,EAAA,EAAD,CACE/G,UAAS,GAAAgH,OAAKF,EAAc,QAAU,IACtCG,GAAI/G,EACJA,KAAMA,EACNuF,YAAY,cACZyB,QAASnI,KAAKH,MAAM2E,KACpB4D,OAAO,EACPvB,SAAU7G,KAAKH,MAAMwI,aACrBC,OAAQtI,KAAKH,MAAM0I,WACnB9H,MAAOA,EACP+H,SAAS,OACTC,SAAS,cAhBuB/G,aCCnBgH,mLACV,IAAAZ,EACuC9H,KAAKH,MAA3CsB,EADD2G,EACC3G,KAAMV,EADPqH,EACOrH,MAAOsH,EADdD,EACcC,YAAarD,EAD3BoD,EAC2BpD,QAElC,OACE7D,EAAA,cAACmH,EAAA,EAAD,CACE/G,UAAS,GAAAgH,OAAKF,EAAc,QAAU,IACtCG,GAAI/G,EACJA,KAAMA,EACNuF,YAAY,gBACZyB,QAASzD,EAAQI,IAAI,SAAA6D,GAAC,OAAAtK,OAAAC,EAAA,EAAAD,CAAA,GAAUsK,EAAV,CAAazJ,QAAS0J,YAAcD,OAC1D9B,SAAU7G,KAAKH,MAAMwI,aACrBC,OAAQtI,KAAKH,MAAM0I,WACnB9H,MAAOA,EACP+H,SAAS,UACTC,SAAS,cAf0B/G,2ECV3C9D,IAAIC,MAAMC,OAEV,IAwBQ0B,EAAY5B,IAAI6B,iBAxBT,CACboJ,KAAM,CACJC,OAAQ,sBACRC,QAAS,EACTzL,QAAS,QACT0L,aAAc,QACdhK,UAAW,UAGbiK,aAAc,CACZC,SAAU,CAAC,EAAG,eAGhBC,eAAgB,CACdD,SAAU,CAAC,EAAG,eAGhBE,cAAe,CACb9L,QAAS,CAAC,MAAO,cACjB4L,SAAU,CAAC,EAAG,iBAK+BxJ,SAAzCF,QAsBa6J,cAYnB,SAAAA,EAAYxJ,GAAkB,IAAAC,EAAA,OAAAzB,OAAA0B,EAAA,EAAA1B,CAAA2B,KAAAqJ,IAC5BvJ,EAAAzB,OAAA4B,EAAA,EAAA5B,CAAA2B,KAAA3B,OAAA6B,EAAA,EAAA7B,CAAAgL,GAAAlJ,KAAAH,KAAMH,KAHRO,MAAe,CAAEyI,KAAM,GAAIS,OAAQ,IAELxJ,EAmE9ByJ,SAAW,SAACpI,GACV,IAAMqI,EAAM1J,EAAKM,MAAMkJ,OAAOnI,GAC9B,YAAewB,IAAR6G,GAA4BA,GArEP1J,EAwE9BuI,aAAe,SAAClH,GAAD,OAAkB,SAACsB,GAA2C,IAAAqF,EAC9ChI,EAAKD,MAA1ByI,EADmER,EACnEQ,OAAQzB,EAD2DiB,EAC3DjB,SAEZyB,GACFA,IAGF,IAAMmB,EAAShH,EAAEgH,OAEXC,GAAOD,EAAOC,IACdC,GAAOF,EAAOE,IACdlJ,GAASgJ,EAAOhJ,MAChBmJ,EAAUnJ,EAAQiJ,GAAOjJ,EAAQkJ,EAAM,KAAOlJ,EAZuBoJ,EAapD/J,EAAKM,MAAtByI,EAbqEgB,EAarEhB,KAAMS,EAb+DO,EAa/DP,OACZT,EAAIxK,OAAAC,EAAA,EAAAD,CAAA,GAAQwK,EAARxK,OAAAyL,EAAA,EAAAzL,CAAA,GAAe8C,EAAOV,IAC1B6I,EAAMjL,OAAAC,EAAA,EAAAD,CAAA,GAAQiL,EAARjL,OAAAyL,EAAA,EAAAzL,CAAA,GAAiB8C,GAAUyI,IACjC9J,EAAKc,SAAS,SAAA4C,GAAI,OAAAnF,OAAAC,EAAA,EAAAD,CAAA,GAAUmF,EAAV,CAAgBqF,OAAMS,aAEpCzC,GACFA,EAASxI,OAAAC,EAAA,EAAAD,CAAA,GAAKwK,EAANxK,OAAAyL,EAAA,EAAAzL,CAAA,GAAa8C,EAAOyI,OA3FF9J,EA+F9BiK,eAAiB,SAACtH,GAChB,IAAMgH,EAAShH,EAAEuH,cACXC,EAAMR,EAAOhJ,MAAMkD,QAETsG,EAAM,GAAKA,EAAMR,EAAOS,UAAY,GAErC,CAAC,IAAK,KAAKC,SAAS1H,EAAEjC,OACnCiC,EAAE2H,kBAnGJ,CAAC,eAAgB,iBAAkB,YAAYC,QAC7C,SAAAC,GAAE,OAAKxK,EAAKwK,GAAMxK,EAAKwK,GAAIC,KAATlM,OAAAmM,EAAA,EAAAnM,QAAAmM,EAAA,EAAAnM,CAAAyB,OAJQA,6FAXEuG,EAAsBoE,GAEpD,OAAKpE,EAAU5F,MAIR,KAHE,CAAEoI,KAAM,GAAIS,OAAQ,sDAgBtB,IAAAoB,EACsB1K,KAAKI,MAAMyI,KAAhC8B,EADDD,EACCC,IAAKC,EADNF,EACME,MAAOC,EADbH,EACaG,KAEpB,OACEhK,EAAA,cAACiK,EAAA,EAAKC,MAAN,CACE9J,UAAS,GAAAgH,OAAKzI,EAAQqJ,KAAb,KAAAZ,OAAqBjI,KAAKH,MAAMoB,WAAa,IACtD+J,QAAQ,GAERnK,EAAA,cAACiK,EAAA,EAAKG,MAAN,CACEhK,UAAWzB,EAAQyJ,aACnBiC,QAASzE,IACT0E,KAAK,SACL1K,MAAOkK,GAAO,GACdjB,IAAK,EACLC,IAAK,GACLO,UAAW,EACXkB,MAAM,MACN1E,YAAY,MACZC,OAAO,EACPE,SAAU7G,KAAKqI,aAAa,OAC5BgD,WAAYrL,KAAK+J,eACjBrJ,MAAOV,KAAKuJ,SAAS,SAGvB1I,EAAA,cAACiK,EAAA,EAAKG,MAAN,CACEhK,UAAWzB,EAAQ2J,eACnB+B,QAASzE,IACT0E,KAAK,SACL1K,MAAOmK,GAAS,GAChBlB,IAAK,EACLC,IAAK,GACLO,UAAW,EACXkB,MAAM,QACN1E,YAAY,QACZC,OAAO,EACPE,SAAU7G,KAAKqI,aAAa,SAC5BgD,WAAYrL,KAAK+J,eACjBrJ,MAAOV,KAAKuJ,SAAS,WAGvB1I,EAAA,cAACiK,EAAA,EAAKG,MAAN,CACEhK,UAAWzB,EAAQ4J,cACnB8B,QAASzE,IACT0E,KAAK,SACL1K,MAAOoK,GAAQ,GACfnB,IAAK,IACLC,IAAK,KACLO,UAAW,EACXkB,MAAM,OACN1E,YAAY,OACZC,OAAO,EACPE,SAAU7G,KAAKqI,aAAa,QAC5BgD,WAAYrL,KAAK+J,eACjBrJ,MAAOV,KAAKuJ,SAAS,kBAzEG7H,qBChDlC9D,IAAIC,MAAMC,OAEV,IAoBQ0B,EAAY5B,IAAI6B,iBApBT,CACb6L,KAAM,CACJxC,OAAQ,sBACRC,QAAS,EACTzL,QAAS,QACT0L,aAAc,QACdhK,UAAW,SACXuM,eAAgB,UAGlBC,WAAY,CACVtC,SAAU,CAAC,EAAG,eAGhBuC,SAAU,CACRvC,SAAU,CAAC,EAAG,iBAK+BxJ,SAAzCF,QAqBakM,cAenB,SAAAA,EAAY7L,GAAkB,IAAAC,EAAA,OAAAzB,OAAA0B,EAAA,EAAA1B,CAAA2B,KAAA0L,IAC5B5L,EAAAzB,OAAA4B,EAAA,EAAA5B,CAAA2B,KAAA3B,OAAA6B,EAAA,EAAA7B,CAAAqN,GAAAvL,KAAAH,KAAMH,KANRO,MAAe,CACbkL,KAAM,GACNhC,OAAQ,IAGoBxJ,EA6C9ByJ,SAAW,SAACpI,GACV,IAAMqI,EAAM1J,EAAKM,MAAMkJ,OAAOnI,GAC9B,YAAewB,IAAR6G,GAA4BA,GA/CP1J,EAkD9BuI,aAAe,SAAClH,GAAD,OAAkB,SAACsB,GAA2C,IAAAqF,EAC9ChI,EAAKD,MAA1ByI,EADmER,EACnEQ,OAAQzB,EAD2DiB,EAC3DjB,SAEZyB,GACFA,IAGF,IACM7H,GADSgC,EAAEgH,OACKhJ,MARqDoJ,EASpD/J,EAAKM,MAAtBkL,EATqEzB,EASrEyB,KAAMhC,EAT+DO,EAS/DP,OACZgC,EAAIjN,OAAAC,EAAA,EAAAD,CAAA,GAAQiN,EAARjN,OAAAyL,EAAA,EAAAzL,CAAA,GAAe8C,EAAOV,IAKxB6I,EAHW,QAATnI,GAAmBmK,EAAKK,MAGjB,CAAEA,OAAO,EAAOC,KAAK,GAFrB,CAAED,MAAOrC,EAAOqC,MAAOC,KAAK,GAKvC9L,EAAKc,SAAS,SAAA4C,GAAI,OAAAnF,OAAAC,EAAA,EAAAD,CAAA,GAAUmF,EAAV,CAAgB8H,OAAMhC,aAEpCzC,GACFA,EAASyE,KAvEiBxL,EA2E9BiK,eAAiB,SAACtH,GACZ,CAAC,IAAK,KAAK0H,SAAS1H,EAAEjC,MACxBiC,EAAE2H,kBA1EJ,CAAC,eAAgB,iBAAkB,YAAYC,QAC7C,SAAAC,GAAE,OAAKxK,EAAKwK,GAAMxK,EAAKwK,GAAIC,KAATlM,OAAAmM,EAAA,EAAAnM,QAAAmM,EAAA,EAAAnM,CAAAyB,OAJQA,6FAdE2D,EAAiBoI,GAE/C,OAAKpI,EAAKhD,MAIH,KAHE,CAAE6K,KAAM,GAAIhC,OAAQ,sDAmBtB,IAAAwC,EACgB9L,KAAKI,MAAMkL,KAA1BK,EADDG,EACCH,MAAOC,EADRE,EACQF,IAEf,OACE/K,EAAA,cAACiK,EAAA,EAAKC,MAAN,CACE9J,UAAS,GAAAgH,OAAKzI,EAAQ8L,KAAb,KAAArD,OAAqBjI,KAAKH,MAAMoB,WAAa,IACtD+J,QAAQ,GAERnK,EAAA,cAACiK,EAAA,EAAKG,MAAN,CACEhK,UAAWzB,EAAQgM,WACnBN,QAASzE,IACT0E,KAAK,SACL1K,MAAOkL,GAAS,GAChBP,MAAM,aACN1E,YAAY,aACZC,OAAO,EACPE,SAAU7G,KAAKqI,aAAa,SAC5BgD,WAAYrL,KAAK+J,eACjBrJ,MAAOV,KAAKuJ,SAAS,WAGvB1I,EAAA,cAACiK,EAAA,EAAKG,MAAN,CACEhK,UAAWzB,EAAQiM,SACnBP,QAASzE,IACT0E,KAAK,SACL1K,MAAOmL,GAAO,GACdR,MAAM,WACN1E,YAAY,WACZC,OAAO,EACPE,SAAU7G,KAAKqI,aAAa,OAC5BgD,WAAYrL,KAAK+J,eACjBrJ,MAAOV,KAAKuJ,SAAS,iBAtDG7H,aC3ClC9D,IAAIC,MAAMC,OAEV,IAoBQ0B,EAAY5B,IAAI6B,iBApBT,CACbsM,YAAa,CACXjD,OAAQ,sBACRC,QAAS,EACTzL,QAAS,QACT0L,aAAc,QACdhK,UAAW,SACXuM,eAAgB,UAGlBS,YAAa,CACX9C,SAAU,CAAC,EAAG,eAGhB+C,WAAY,CACV/C,SAAU,CAAC,EAAG,iBAK+BxJ,SAAzCF,QAoBa0M,cAiBnB,SAAAA,EAAYrM,GAAyB,IAAAC,EAAA,OAAAzB,OAAA0B,EAAA,EAAA1B,CAAA2B,KAAAkM,IACnCpM,EAAAzB,OAAA4B,EAAA,EAAA5B,CAAA2B,KAAA3B,OAAA6B,EAAA,EAAA7B,CAAA6N,GAAA/L,KAAAH,KAAMH,KALRO,MAAe,CACb2L,YAAa,IAGsBjM,EAqCrCuI,aAAe,SAAClH,GAAD,OAAkB,SAACsB,GAA2C,IAAAqF,EAC9ChI,EAAKD,MAA1ByI,EADmER,EACnEQ,OAAQzB,EAD2DiB,EAC3DjB,SAEZyB,GACFA,IAGF,IAAMmB,EAAShH,EAAEgH,OACXsC,EAAgBjM,EAAKM,MAArB2L,YACNA,EAAW1N,OAAAC,EAAA,EAAAD,CAAA,GAAQ0N,EAAR1N,OAAAyL,EAAA,EAAAzL,CAAA,GAAsB8C,EAAOsI,EAAOhJ,QAC/CX,EAAKc,SAAS,SAAA4C,GAAI,OAAAnF,OAAAC,EAAA,EAAAD,CAAA,GAAUmF,EAAV,CAAgBuI,kBAE9BlF,GACFA,EAASkF,KA/CX,CAAC,gBAAgB1B,QAAQ,SAAAC,GAAE,OAAKxK,EAAKwK,GAAMxK,EAAKwK,GAAIC,KAATlM,OAAAmM,EAAA,EAAAnM,QAAAmM,EAAA,EAAAnM,CAAAyB,OAHRA,6FAbL2D,EAAwBoI,GAEtD,OAAKpI,EAAKhD,MAIH,KAHE,CAAEsL,YAAa,sDAgBjB,IAAAI,EACmBnM,KAAKI,MAAM2L,YAA7BK,EADDD,EACCC,OAAQC,EADTF,EACSE,MAEhB,OACExL,EAAA,cAACiK,EAAA,EAAKC,MAAN,CACE9J,UAAS,GAAAgH,OAAKzI,EAAQuM,YAAb,KAAA9D,OAA4BjI,KAAKH,MAAMoB,WAAa,IAC7D+J,QAAQ,GAERnK,EAAA,cAACiK,EAAA,EAAKG,MAAN,CACEhK,UAAWzB,EAAQwM,YACnBd,QAASzE,IACThG,MAAO2L,GAAU,GACjBhB,MAAM,SACN1E,YAAY,SACZC,OAAO,EACPE,SAAU7G,KAAKqI,aAAa,YAG9BxH,EAAA,cAACiK,EAAA,EAAKG,MAAN,CACEhK,UAAWzB,EAAQyM,WACnBf,QAASzE,IACThG,MAAO4L,GAAS,GAChBjB,MAAM,QACN1E,YAAY,QACZC,OAAO,EACPE,SAAU7G,KAAKqI,aAAa,mBAhDG3G,kUC1ClC,IAeQ4K,GAfSvP,IAAHC,KAWjBF,IACAyP,kNCbG,IAUQC,GAVYzP,IAAH0P,KAOpBF,6CCCJ3O,IAAIC,MAAMC,OAEV,ICkDY4O,GDlDN3O,GAAS,CACb4O,MAAO,CACLhO,UAAW,OACXiO,UAAW,OAGbC,QAAS,CACP/N,MAAOgO,KACPC,gBAAiBC,MAGnBtM,MAAO,CACLvD,KAAM,EACNG,QAAS,GACT0B,UAAW,UAGbiO,gBAAiB,CACfC,WAAY,EACZlO,UAAW,QACX1B,QAAS,cAIP6P,GAAapP,GAAO4O,MACpBS,GAAarP,GAAO2C,MACpB2M,GAAuBtP,GAAOkP,gBAQvBK,GAAb,SAAA1N,GAAA,SAAA0N,IAAA,OAAAjP,OAAA0B,EAAA,EAAA1B,CAAA2B,KAAAsN,GAAAjP,OAAA4B,EAAA,EAAA5B,CAAA2B,KAAA3B,OAAA6B,EAAA,EAAA7B,CAAAiP,GAAAC,MAAAvN,KAAAwN,YAAA,OAAAnP,OAAAiC,EAAA,EAAAjC,CAAAiP,EAAA1N,GAAAvB,OAAAkC,EAAA,EAAAlC,CAAAiP,EAAA,EAAA9M,IAAA,SAAAC,MAAA,WAEI,OACEI,EAAA,cAAC4M,GAAA,EAAD,CACEzM,MAAOmM,GACPO,OAAO,WACPC,KAAM3N,KAAKH,MAAM8N,KACjBC,QAAS5N,KAAKH,MAAMgO,SAEpBhN,EAAA,cAAC4M,GAAA,EAAMrM,QAAP,CAAeJ,MAAOjD,GAAO8O,SAC3BhM,EAAA,qBAAKG,MAAOoM,IAAapN,KAAKH,MAAMa,MAAMoN,SAE1CjN,EAAA,qBAAKG,MAAOqM,IACVxM,EAAA,cAACkN,EAAA,EAAD,CAAQjP,MAAM,MAAMkP,QAAShO,KAAKH,MAAMgO,SACtChN,EAAA,cAACK,EAAA,EAAD,CAAMC,KAAK,WADb,mBAbZmM,EAAA,CAAgC5L,aCDnBuM,GAAgC,CAC3CzJ,KAAM,GACNc,OAAQ,KACR4I,MAAO,GACPrF,KAAM,KACNyC,KAAM,KACNS,YAAa,KACboC,OAAQ,IAGGC,GAAgC,CAC3CvF,KAAM,GACNwF,SAAU,GACV7J,KAAM,GACNP,KAAM,cAGIyI,+FCzDZ9O,IAAIC,MAAMC,OAEV,ICQYwQ,GDRNvQ,GAAS,CACb4O,MAAO,CACLhO,UAAW,OACXiO,UAAW,MACX2B,SAAU,KAGZ1B,QAAS,CACP2B,WAAYC,KACZ3P,MAAO4P,MAGTC,iBAAkB,CAChBxR,KAAM,EACN+B,QAAS,OACT5B,QAAS,GACT6H,SAAU,SAGZyJ,YAAa,CACXC,aAAc,OACd1J,SAAU,SAGZ2J,cAAe,CACbC,WAAY,IACZ/P,UAAW,UAGbgQ,cAAe,CACb7J,SAAU,QACV8J,UAAW,UAGbC,iBAAkB,CAChBhC,WAAY,EACZ5P,QAAS,oBACT4B,QAAS,OACTqM,eAAgB,gBAChBjM,UAAW,oBAEX6P,WAAY,CACVjQ,QAAS,QACTF,UAAW,WAKJmO,GAAapP,GAAO4O,MACpByC,GAAerR,GAAO8O,QACtBwC,GAAmBtR,GAAO6Q,YAExBpP,GAAY5B,IAAI6B,iBAAiB1B,IAAQ2B,SAAzCF,QE3DA8P,GCef,SAAA1P,GAAA,SAAA0P,IAAA,IAAAC,EAAAzP,EAAAzB,OAAA0B,EAAA,EAAA1B,CAAA2B,KAAAsP,GAAA,QAAAE,EAAAhC,UAAA7J,OAAA8L,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAnC,UAAAmC,GAAA,OAAA7P,EAAAzB,OAAA4B,EAAA,EAAA5B,CAAA2B,MAAAuP,EAAAlR,OAAA6B,EAAA,EAAA7B,CAAAiR,IAAAnP,KAAAoN,MAAAgC,EAAA,CAAAvP,MAAAiI,OAAAwH,MA+BEG,cAAgB,WACd,OAAI9P,EAAKD,MAAMgQ,YAEXhP,EAAA,qBAAKI,UAAS,UAAAgH,OAAYzI,GAAQ0P,mBAChCrO,EAAA,cAACkN,EAAA,EAAD,CACEjP,MAAM,MACNgR,UAAU,EACV9B,QAASlO,EAAKD,MAAMgO,QAAQnB,GAAkBqD,uBAE9ClP,EAAA,cAACK,EAAA,EAAD,CAAMC,KAAK,WALb,aAYJN,EAAA,qBAAKI,UAAWzB,GAAQ0P,kBACtBrO,EAAA,cAACkN,EAAA,EAAD,CACEjP,MAAM,MACNgR,UAAU,EACV9B,QAASlO,EAAKD,MAAMgO,QAAQnB,GAAkBqD,uBAE9ClP,EAAA,cAACK,EAAA,EAAD,CAAMC,KAAK,WALb,SAQAN,EAAA,cAACkN,EAAA,EAAD,CACEjP,MAAM,QACNgR,UAAU,EACV9B,QAASlO,EAAKD,MAAMgO,QAAQnB,GAAkBsD,gBAE9CnP,EAAA,cAACK,EAAA,EAAD,CAAMC,KAAK,cALb,SAxDRrB,EAAA,OAAAzB,OAAAiC,EAAA,EAAAjC,CAAAiR,EAAA1P,GAAAvB,OAAAkC,EAAA,EAAAlC,CAAAiR,EAAA,EAAA9O,IAAA,SAAAC,MAAA,WAGW,IACCoP,EAAgB7P,KAAKH,MAArBgQ,YAER,OACEhP,EAAA,cAAC4M,GAAA,EAAD,CAAOzM,MAAOmM,GAAYO,OAAO,WAAWC,KAAM3N,KAAKH,MAAM8N,MAC3D9M,EAAA,cAAC4M,GAAA,EAAMrM,QAAP,CAAeJ,MAAOoO,IACpBvO,EAAA,qBAAKI,UAAWzB,GAAQmP,kBACtB9N,EAAA,cAACK,EAAA,EAAD,CAAMF,MAAOqO,GAAkBlO,KAAK,cAEpCN,EAAA,yBACEA,EAAA,qBAAKI,UAAWzB,GAAQsP,eAAxB,+BAIEe,GACAhP,EAAA,qBAAKI,UAAWzB,GAAQwP,eAAxB,2CAOLhP,KAAK4P,sBAzBhBN,EAAA,CAAkC5N,2FFAtB4M,qEGYL,IA4RQ2B,GA5Rf,SAAArQ,GAAA,SAAAqQ,IAAA,IAAAV,EAAAzP,EAAAzB,OAAA0B,EAAA,EAAA1B,CAAA2B,KAAAiQ,GAAA,QAAAT,EAAAhC,UAAA7J,OAAA8L,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAnC,UAAAmC,GAAA,OAAA7P,EAAAzB,OAAA4B,EAAA,EAAA5B,CAAA2B,MAAAuP,EAAAlR,OAAA6B,EAAA,EAAA7B,CAAA4R,IAAA9P,KAAAoN,MAAAgC,EAAA,CAAAvP,MAAAiI,OAAAwH,MACErP,MAAe,GADjBN,EAyBEoQ,YAAc,SAACC,EAAmCtQ,GAChD,OAAQA,EAAMuQ,aACZ,KAAK,EACHtQ,EAAKuQ,cACL,MAEF,KAAK,EACHvQ,EAAKwQ,YACL,MAEF,KAAK,EACHxQ,EAAKyQ,iBApCbzQ,EA4CE0Q,YAAc,SAACC,GAAqB,IAC1BC,EAAiB5Q,EAAKM,MAAtBsQ,aAIR,OAFAD,GADAA,EAAWA,EAASE,eACAC,OAAO,GAAGC,cAAgBJ,EAASK,MAAM,GAG3DlM,EAAA3B,EAAA4B,cAAA,OAAK5D,UAAU,2BACb2D,EAAA3B,EAAA4B,cAAC3D,EAAA,EAAD,CAAMD,UAAU,eAAeE,KAAK,iBAEpCyD,EAAA3B,EAAA4B,cAAA,WACED,EAAA3B,EAAA4B,cAAA,OAAK5D,UAAU,kBAAf,mBAAAgH,OAAoDwI,IAEpD7L,EAAA3B,EAAA4B,cAAA,WAAM6L,GAAgBA,EAAa5C,YAxD7ChO,EAsFEiR,aAAe,WACb,MAAO,CACLC,SAAU,SACVC,OAAQ,kBACNrM,EAAA3B,EAAA4B,cAACqM,GAAA,EAAIC,KAAL,CACElQ,UAAU,OACVmQ,UAAU,EACVtK,QAAShH,EAAKM,MAAM0G,SAEnBhH,EAAKuR,kBAAkB/C,GAAatM,YA/F/ClC,EAqGEwR,YAAc,SAAA5O,GAAkC,IAA/BwF,EAA+BxF,EAA/BwF,GAAIjE,EAA2BvB,EAA3BuB,KACnB,OACEW,EAAA3B,EAAA4B,cAACU,GAAA,EAAKW,KAAN,CAAW1F,IAAK0H,GACdtD,EAAA3B,EAAA4B,cAACU,GAAA,EAAKnE,QAAN,KAAe6C,KAxGvBnE,EA6GEyR,WAAa,WACX,MAAO,CACLP,SAAU,OACVC,OAAQ,kBACNrM,EAAA3B,EAAA4B,cAACqM,GAAA,EAAIC,KAAL,CACElQ,UAAU,OACVmQ,UAAU,EACVtK,QAAShH,EAAKM,MAAM0G,SAEnBhH,EAAKuR,kBAAkB/C,GAAaxM,UAtH/ChC,EA4HE0R,UAAY,SAAAC,GAA2B,IAAxBvJ,EAAwBuJ,EAAxBvJ,GAAIjE,EAAoBwN,EAApBxN,KACjB,OACEW,EAAA3B,EAAA4B,cAACU,GAAA,EAAKW,KAAN,CACE1F,IAAK0H,EACLjH,UAAU,YACV+M,QAASlO,EAAK4R,WAAW3P,YAAWmG,KAEpCtD,EAAA3B,EAAA4B,cAACU,GAAA,EAAKnE,QAAN,KAAe6C,KAnIvBnE,EAwIE6R,cAAgB,WACd,MAAO,CACLX,SAAU,UACVC,OAAQ,kBACNrM,EAAA3B,EAAA4B,cAACqM,GAAA,EAAIC,KAAL,CACElQ,UAAU,OACVmQ,UAAU,EACVtK,QAAShH,EAAKM,MAAM0G,SAEnBhH,EAAKuR,kBAAkB/C,GAAa1M,aAjJ/C9B,EAuJE8R,aAAe,SAACtM,GAA2B,IACjC4C,EAAO5C,EAAP4C,GACFhJ,EAAU0J,YAActD,GAC9B,OACEV,EAAA3B,EAAA4B,cAACU,GAAA,EAAKW,KAAN,CACE1F,IAAK0H,EACLjH,UAAU,YACV+M,QAASlO,EAAK4R,WAAW7P,YAAcqG,KAEvCtD,EAAA3B,EAAA4B,cAACU,GAAA,EAAKnE,QAAN,KAAelC,KAhKvBY,EAqKE+R,aAAe,WACb,MAAO,CACLb,SAAU,SACVC,OAAQ,kBACNrM,EAAA3B,EAAA4B,cAACqM,GAAA,EAAIC,KAAL,CACElQ,UAAU,OACVmQ,UAAU,EACVtK,QAAShH,EAAKM,MAAM0G,SAEpBlC,EAAA3B,EAAA4B,cAACiN,GAAA,EAAD,UA9KVhS,EAoLEuQ,YApLFhS,OAAA0E,EAAA,EAAA1E,CAAA2E,EAAAC,EAAAC,KAoLgB,SAAAC,IAAA,IAAAzE,EAAA6F,EAAA,OAAAvB,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACZ3D,EAAKiS,WADOxO,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIW3D,EAAKD,MAAMgE,OAAOC,MAAiC,CACtEA,MAAOkO,KACPhO,UAAW,CACTkK,MAAO,CACL5I,OAAQ,SARJ,OAIJ5G,EAJI6E,EAAAW,KAaJK,EAAS7F,EAAO0E,KAAKmB,OAC3BzE,EAAKiS,SAASzD,GAAatM,OAAQuC,GAdzBhB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAY,GAAAZ,EAAA,SAgBVzD,EAAKiS,cAASpP,OAAWA,EAAzBY,EAAAY,IAhBU,yBAAAZ,EAAAa,SAAAjB,EAAAnD,KAAA,YApLhBF,EAwMEwQ,UAxMFjS,OAAA0E,EAAA,EAAA1E,CAAA2E,EAAAC,EAAAC,KAwMc,SAAA+O,IAAA,IAAAvT,EAAA0E,EAAA,OAAAJ,EAAAC,EAAAK,KAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAzO,MAAA,cACV3D,EAAKiS,WADKG,EAAA1O,KAAA,EAAA0O,EAAAzO,KAAA,EAIa3D,EAAKD,MAAMgE,OAAOC,MAAmB,CACxDA,MAAOqO,OALD,OAIFzT,EAJEwT,EAAAhO,KAQFd,EAAO1E,EAAO0E,KAAKoB,KACzB1E,EAAKiS,SAASzD,GAAaxM,KAAMsB,GATzB8O,EAAAzO,KAAA,gBAAAyO,EAAA1O,KAAA,EAAA0O,EAAA/N,GAAA+N,EAAA,SAWRpS,EAAKiS,cAASpP,OAAWA,EAAzBuP,EAAA/N,IAXQ,yBAAA+N,EAAA9N,SAAA6N,EAAAjS,KAAA,YAxMdF,EAuNEyQ,aAvNFlS,OAAA0E,EAAA,EAAA1E,CAAA2E,EAAAC,EAAAC,KAuNiB,SAAAkP,IAAA,IAAAC,EAAAC,EAAA5T,EAAA0E,EAAA,OAAAJ,EAAAC,EAAAK,KAAA,SAAAiP,GAAA,cAAAA,EAAA/O,KAAA+O,EAAA9O,MAAA,UACL4O,EAAmBvS,EAAKD,MAAxBwS,eADK,CAAAE,EAAA9O,KAAA,eAIX3D,EAAKc,SAAS,CAAE8P,aAAc,CAAE5C,QAAS,0BAJ9ByE,EAAA3O,OAAA,wBAQb9D,EAAKiS,WARQQ,EAAA/O,KAAA,EAWL8O,EAAYD,EAAenK,GAXtBqK,EAAA9O,KAAA,EAYU3D,EAAKD,MAAMgE,OAAOC,MAGrC,CACAA,MAAO0O,KACPxO,UAAW,CACTsB,OAAQ,CAAEgN,gBAlBH,OAYL5T,EAZK6T,EAAArO,KAsBLd,EAAO1E,EAAO0E,KAAKsB,QACzB5E,EAAKiS,SAASzD,GAAa1M,QAASwB,GAvBzBmP,EAAA9O,KAAA,iBAAA8O,EAAA/O,KAAA,GAAA+O,EAAApO,GAAAoO,EAAA,SAyBXzS,EAAKiS,cAASpP,OAAWA,EAAzB4P,EAAApO,IAzBW,yBAAAoO,EAAAnO,SAAAgO,EAAApS,KAAA,aAvNjBF,EAoPEiS,SAAW,SACTtB,EACA/R,EACAgC,GAEAZ,EAAKc,SAAS,CAAE8P,kBAAc/N,IAE1BjC,EACFZ,EAAKc,SAAS,CAAEkG,SAAS,EAAO4J,aAAchQ,IAI5C+P,GAAY/R,EACdoB,EAAKc,SAAS,SAAA+H,GAAC,IAAA8J,EAAA,OACbC,IAAO/J,GAAD8J,EAAA,CACJ3L,QAAS,CACP6L,MAAM,IAFJtU,OAAAyL,EAAA,EAAAzL,CAAAoU,EAKHhC,EAAW,CACVkC,KAAMjU,IANJL,OAAAyL,EAAA,EAAAzL,CAAAoU,EAAA,eASU,CACZE,UAAMhQ,IAVJ8P,MAkBV3S,EAAKc,SAAS,CAAEkG,SAAS,KApR7BhH,EAuRE4R,WAAa,SAACkB,GAAD,OAAiB,WAC5B9S,EAAKD,MAAMgT,QAAQC,KAAKF,KAxR5B9S,EAAA,OAAAzB,OAAAiC,EAAA,EAAAjC,CAAA4R,EAAArQ,GAAAvB,OAAAkC,EAAA,EAAAlC,CAAA4R,EAAA,EAAAzP,IAAA,SAAAC,MAAA,WAII,OACEmE,EAAA3B,EAAA4B,cAACqM,GAAA,EAAD,CACEjQ,UAAS,oCAAAgH,OAAsCjI,KAAKH,MAAMoB,WACxD,IACF8R,KAAM,CACJC,UAAU,EACVlD,UAAU,EACVmD,WAAW,GAEbC,MAAO,CACLlT,KAAK+Q,eACL/Q,KAAKuR,aACLvR,KAAK2R,gBACL3R,KAAK6R,gBAEP3B,YAAalQ,KAAKkQ,YAClBiD,oBAAqB,MApB7B,CAAA3S,IAAA,oBAAAC,MAAA,SA8DoB2S,GAA6B,IAAAvJ,EACX7J,KAAKI,MAA/B0G,EADqC+C,EACrC/C,QAER,GAH6C+C,EAC5B6G,aAGf,OAAO1Q,KAAKwQ,YAAY4C,GAG1B,IAAMC,EAAYrT,KAAKI,MAAMgT,GAE7B,OAAItM,IAAYuM,EACPzO,EAAA3B,EAAA4B,cAACyO,GAAA,EAAD,MAGLD,GAAaA,EAAU1P,OAEvBiB,EAAA3B,EAAA4B,cAACU,GAAA,EAAD,CAAMC,SAAS,EAAM+N,SAAS,EAAMC,SAAS,GAC1CH,EAAUvO,IAAI9E,KAAK,SAAWoT,EAActC,MAAM,GAAI,MAKtDlM,EAAA3B,EAAA4B,cAAA,iBAAAoD,OAAYmL,EAAZ,UAnFXnD,EAAA,CAAmCvO,IAAMsF,qBCpBnCyM,GAAmBrM,kBAKvBsM,KAAqB,CACrB7T,MAAO,SAAAA,GAAK,OAAIA,EAAMuD,QAGTsE,qBACb+L,GACAE,KACAhM,aAHaD,CAIbuI,cC2wBa2D,GApuBf,SAAAhU,GAAA,SAAAgU,IAAA,IAAArE,EAAAzP,EAAAzB,OAAA0B,EAAA,EAAA1B,CAAA2B,KAAA4T,GAAA,QAAApE,EAAAhC,UAAA7J,OAAA8L,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAnC,UAAAmC,GAAA,OAAA7P,EAAAzB,OAAA4B,EAAA,EAAA5B,CAAA2B,MAAAuP,EAAAlR,OAAA6B,EAAA,EAAA7B,CAAAuV,IAAAzT,KAAAoN,MAAAgC,EAAA,CAAAvP,MAAAiI,OAAAwH,MAkBErP,MAAe,CACb6N,qBACAG,eACAyF,aAAc,IArBlB/T,EAwBEgU,iBAAmBpS,cAxBrB5B,EAuFEiU,qBAAuB,WAAM,IAAAlK,EAC2B/J,EAAKM,MAAnDiO,EADmBxE,EACnBwE,SAAU2F,EADSnK,EACTmK,aAAcC,EADLpK,EACKoK,kBAEhC,OAAID,EAEAnT,EAAA,cAACqT,GAAD,CACEvG,OAAQqG,EACRnG,QAAS/N,EAAKqU,kBACdzT,MAAOsT,IAKTC,EAEApT,EAAA,cAACuT,GAAD,CACEzG,OAAQsG,EACRpG,QAAS/N,EAAKuU,wBACdxE,cAAexB,SALrB,GApGJvO,EAiHEwU,wBAA0B,WAAM,IACtBhP,EAAWxF,EAAKM,MAAM6N,kBAAtB3I,OAER,OACEzE,EAAA,cAACQ,EAAA,EAAD,CAAQkT,UAAU,EAAMtT,UAAU,kCAC/BqE,GACCzE,EAAA,cAACkF,EAAA,EAAD,CAAS9E,UAAU,aAAa+E,GAAInE,YAAcyD,EAAO4C,KACvDrH,EAAA,qBAAKI,UAAU,sBAAf,yBAEAJ,EAAA,qBAAKI,UAAU,wBAAwB2H,YAActD,OA1HjExF,EAiIE0U,SAAW,SAACC,GAGV,IAFA,IAAMnL,EAAmC,GADRoL,EAGfrW,OAAOsW,KAAKF,GAA9BG,EAAA,EAAAA,EAAAF,EAAA/Q,OAAAiR,IAAuC,CAAlC,IAAMpU,EAAGkU,EAAAE,GACNlU,EAAQZ,EAAA,WAAAmI,OACDzH,EAAIoQ,OAAO,GAAGC,eADb5I,OAC6BzH,EAAIsQ,MAAM,KACnD2D,EAAOjU,IAET,GAAIE,EAEF,OADA4I,EAAO9I,GAAOE,EACP4I,EAIX,OAAOA,GA/IXxJ,EAkJE+U,WAAa,SAAAnS,GAMkB,IAL7BoS,EAK6BpS,EAL7BoS,YACAC,EAI6BrS,EAJ7BqS,MACAC,EAG6BtS,EAH7BsS,aACA1L,EAE6B5G,EAF7B4G,OACA2L,EAC6BvS,EAD7BuS,aAEMC,GAAqBH,GAASC,EAC9BG,EAAgBD,IAAsBE,IAAQ9L,GAC5C+E,EAAavO,EAAKM,MAAlBiO,SAER,OACExN,EAAA,cAACiK,EAAA,EAAD,CAAMuK,SAAUJ,GACdpU,EAAA,cAACyU,EAAA,EAAD,CAAQxF,UAAU,EAAMyF,OAAQP,GAC9BnU,EAAA,cAAC2U,EAAA,EAAD,CAAQD,OAAQP,EAAc/P,KAAK,UAAnC,aAKFpE,EAAA,cAAC4U,EAAA,EAAD,CAAOtU,KAAK,OAAO8P,OAAQnR,EAAK4V,oBAE9BrH,GAAYxN,EAAA,cAAC4U,EAAA,EAAD,CAAOtU,KAAK,SAAS8P,OAAQnR,EAAK6V,sBAEhD9U,EAAA,cAAC4U,EAAA,EAAD,CAAOtU,KAAK,QAAQ8P,OAAQnR,EAAK8V,qBACjC/U,EAAA,cAAC4U,EAAA,EAAD,CAAOtU,KAAK,OAAO8P,OAAQnR,EAAK+V,oBAChChV,EAAA,cAAC4U,EAAA,EAAD,CAAOtU,KAAK,cAAc8P,OAAQnR,EAAKgW,2BACvCjV,EAAA,cAAC4U,EAAA,EAAD,CAAOtU,KAAK,OAAO8P,OAAQnR,EAAKiW,oBAChClV,EAAA,cAAC4U,EAAA,EAAD,CAAOtU,KAAK,SAAS8P,OAAQnR,EAAKkW,sBAElCnV,EAAA,qBAAKI,UAAU,gBACbJ,EAAA,cAACkN,EAAA,EAAD,CACEkI,OAAO,EACPnX,MAAM,MACNkP,QAASlO,EAAKoW,eAAepB,GAC7BqB,SAAUjB,GAEVrU,EAAA,cAACK,EAAA,EAAD,CAAMC,KAAK,WANb,UASAN,EAAA,cAACkN,EAAA,EAAD,CACE9M,UAAU,gBACVkK,KAAK,SACLrM,MAAM,QACNqX,SAAUhB,EACVrO,QAASkO,GAETnU,EAAA,cAACK,EAAA,EAAD,CAAMC,KAAK,cAPb,UAzLVrB,EAuMEsW,OAAS,SAACC,GAAD,sBAAA5E,EAAApT,OAAA0E,EAAA,EAAA1E,CAAA2E,EAAAC,EAAAC,KAAgC,SAAAC,EACvCsR,EACA6B,GAFuC,OAAAtT,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAIvC6S,EAAUC,eAAc,GAJehT,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAO/B4S,IAP+B,OAQrCC,EAAUE,YAEV1W,EAAKc,SAAS,SAAA+H,GAAC,OACb+J,IAAO/J,EAAG,CACRsL,kBAAmB,CACjBtB,KAAM8B,EAAOnP,QAAUmP,EAAOnP,OAAO4C,IAGvC+F,kBAAmB,CACjBzJ,KAAM,CACJmO,KAAM,SAMd7S,EAAK2W,oBAxBgClT,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAY,GAAAZ,EAAA,SA0BrC+S,EAAUC,eAAc,GACxBzW,EAAKc,SAAS,CAAEoT,aAAYzQ,EAAAY,KA3BS,yBAAAZ,EAAAa,SAAAjB,EAAAnD,KAAA,YAAhC,gBAAA0W,EAAAC,GAAA,OAAAlF,EAAAlE,MAAAvN,KAAAwN,YAAA,IAvMX1N,EAsOE8W,aAAe,SAACC,GACd/W,EAAKc,SAAS,SAAA+H,GAAC,OACb+J,IAAO/J,EAAG,CACRsF,kBAAmB,CACjBzJ,KAAM,CACJmO,KAAKtU,OAAAyY,EAAA,EAAAzY,CAAKyB,EAAKM,MAAMyT,cAAjB5L,OAAA,CAA+B4O,WA3O/C/W,EAkPE4V,iBAAmB,SAACqB,GAAsC,IAAAC,EAIpDD,EAFFE,MAAS9V,EAF6C6V,EAE7C7V,KAAMV,EAFuCuW,EAEvCvW,MACfyW,EACEH,EADFG,KAEIxW,EAAQwW,EAAK5N,OAAOnI,GACpBgW,IAAiBzW,EACjB0W,EAAUF,EAAKE,QAAQjW,GACvBqD,EAAO1E,EAAKD,MAAM2E,KAExB,OACE3D,EAAA,qBAAKI,UAAU,cACbJ,EAAA,cAACiK,EAAA,EAAKG,MAAN,CACEC,QAASrD,EACTuD,MAAM,0BACN1K,MAAOyW,EACPpP,YAAaoP,EACb3S,KAAMA,GAAQ,GACdrD,KAAMA,EACNV,MAAOA,EACP4H,aAAcvI,EAAKuX,cAAcN,GACjCxO,WAAYzI,EAAKwX,sBAAsBnW,EAAM+V,IAE5CC,GAAgBC,GAAWvW,EAAA,cAACC,EAAA,EAAD,CAASJ,OAAO,EAAM2E,OAAQ3E,OAzQpEZ,EA+QEuX,cAAgB,SAAA/S,GAAA,IAAG4S,EAAH5S,EAAG4S,KAAMD,EAAT3S,EAAS2S,MAAT,OAA6C,SAC3DxW,GAEAyW,EAAKK,cAAcN,EAAM9V,KAAMV,GAC/BX,EAAKc,SAAS,SAAA+H,GAAC,OACb+J,IAAO/J,EAAG,CACRkL,aAAc,CACZlB,KAAMlS,SAtRhBX,EA4REwX,sBAAwB,SACtBnW,EACA+V,GAFsB,OAGnB,WACHA,EAAKM,gBAAgBrW,GAAM,KAhS/BrB,EAmSE2X,oBAAsB,SAACtW,EAAc+V,GAAf,OAAiD,SACrEQ,GADqE,OAElER,EAAKK,cAAcpW,EAAMuW,KArShC5X,EAuSE8V,mBAAqB,SAACmB,GAAsC,IAClDE,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KACP/V,EAAS8V,EAAT9V,KAEFgW,IADQD,EAAK5N,OAAOnI,GAK1B,OACEN,EAAA,cAACiK,EAAA,EAAKG,MAAN5M,OAAA8H,OAAA,CACE+E,QAASyM,IACTjR,YALU,aAMV0E,MANU,aAOVlD,GAAI/G,EACJT,MAAOyW,GACHF,KAtTZnX,EA2TEkW,oBAAsB,SAACe,GAAsC,IACnDE,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KACP/V,EAAS8V,EAAT9V,KAEFgW,IADQD,EAAK5N,OAAOnI,GAK1B,OACEN,EAAA,cAACiK,EAAA,EAAKG,MAAN5M,OAAA8H,OAAA,CACE+E,QAASyM,IACTjR,YALU,SAMV0E,MANU,SAOVlD,GAAI/G,EACJT,MAAOyW,GACHF,KA1UZnX,EA+UEiW,kBAAoB,SAAC6B,GAAmC,IAC9CX,EAAgBW,EAAhBX,MAAOC,EAASU,EAATV,KACP/V,EAAS8V,EAAT9V,KAEFgW,IADQD,EAAK5N,OAAOnI,GAI1B,OACEN,EAAA,cAACgX,EAAD,CACE5W,UAAS,GAAAgH,OAAKkP,EAAe,eAAiB,IAC9CtQ,SAAU/G,EAAK2X,oBAAoBtW,EAAM+V,GACzC5O,OAAQxI,EAAKwX,sBAAsBnW,EAAM+V,GACzCzW,MAAOwW,EAAMxW,SA3VrBX,EAgWE+V,kBAAoB,SAAC+B,GAAmC,IAC9CX,EAAgBW,EAAhBX,MAAOC,EAASU,EAATV,KACP/V,EAAS8V,EAAT9V,KAEFgW,IADQD,EAAK5N,OAAOnI,GAG1B,OACEN,EAAA,cAACiX,EAAD,CACE7W,UAAS,GAAAgH,OAAKkP,EAAe,eAAiB,IAC9CtQ,SAAU/G,EAAK2X,oBAAoBtW,EAAM+V,GACzC5O,OAAQxI,EAAKwX,sBAAsBnW,EAAM+V,GACzCzW,MAAOwW,EAAMxW,SA3WrBX,EAgXEgW,yBAA2B,SAAC8B,GAAmC,IACrDX,EAAgBW,EAAhBX,MAAOC,EAASU,EAATV,KACP/V,EAAS8V,EAAT9V,KAEFgW,IADQD,EAAK5N,OAAOnI,GAG1B,OACEN,EAAA,cAACkX,EAAD,CACE9W,UAAS,GAAAgH,OAAKkP,EAAe,eAAiB,IAC9CtQ,SAAU/G,EAAK2X,oBAAoBtW,EAAM+V,GACzC5O,OAAQxI,EAAKwX,sBAAsBnW,EAAM+V,GACzCzW,MAAOwW,EAAMxW,SA3XrBX,EAgYE6V,oBAAsB,SAACoB,GAAsC,IAAAiB,EAIvDjB,EAFFE,MAAS9V,EAFgD6W,EAEhD7W,KAAMV,EAF0CuX,EAE1CvX,MACfyW,EACEH,EADFG,KAEIxW,EAAQwW,EAAK5N,OAAOnI,GACpBgW,IAAiBzW,EACjB0W,EAAUF,EAAKE,QAAQjW,GAE7B,OACEN,EAAA,cAACiK,EAAA,EAAKG,MAAN,CACEC,QAASxC,EACT0C,MAAM,gBACN1K,MAAOyW,EACPpP,YAAaoP,EACbzS,QAAS5E,EAAKmY,aACd9W,KAAMA,EACNV,MAAOA,EACP8H,WAAYzI,EAAKwX,sBAAsBnW,EAAM+V,GAC7C7O,aAAcvI,EAAK2X,oBAAoBtW,EAAM+V,IAE5CC,GAAgBC,GAAWvW,EAAA,cAACC,EAAA,EAAD,CAASJ,OAAO,EAAM2E,OAAQ3E,MArZlEZ,EA0ZEmY,WAAa,WAAM,IACTC,EAAgBpY,EAAKM,MAArB8X,YAER,IAAKA,EACH,MAAO,GAJQ,IAOT9U,EAAS8U,EAAT9U,KAER,OAAKA,EAIDA,EAAKkC,OACA,CAAClC,EAAKkC,QAGRlC,EAAKsB,QAPH,IApab5E,EA8aEqY,cAAgB,SAACjK,GAGf,OAAKA,GAILpO,EAAKc,SAAS,SAAA4C,GAAI,OAChBkP,IAAOlP,EAAM,CACX4K,YAAa,CACXnK,KAAM,CACJ0O,KAAMzE,QAMP,IAhBO,iBA/alBpO,EAkcEsY,eAAiB,SAACjK,GAChB,OAAKA,GAILrO,EAAKc,SAAS,SAAA4C,GAAI,OAChBkP,IAAOlP,EAAM,CACX4K,YAAa,CACXD,OAAQ,CACNwE,KAAMxE,QAMP,IAbE,IApcbrO,EAodEuY,eAAiB,SAAC/S,GAGhB,OAAKA,GAILxF,EAAKc,SAAS,SAAA4C,GAAI,OAChBkP,IAAOlP,EAAM,CACX4K,YAAa,CACXC,SAAU,CACRsE,KAAMrN,EAAO4C,SAMd,IAhBO,mBArdlBpI,EAweEwY,aAAe,SAAC9T,GAGd,OAAKA,GAASA,EAAKb,QAInB7D,EAAKc,SAAS,SAAA4C,GAAI,OAChBkP,IAAOlP,EAAM,CACX4K,YAAa,CACX5J,KAAM,CACJmO,KAAMnO,EAAKM,IAAI,SAAAyT,GAAC,OAAIA,EAAErQ,WAMvB,IAhBO,2BAzelBpI,EA4fE0Y,aAAe,SAAC3P,GACd,IAAMnI,EAAQ,qBAEd,IAAKmI,EAWH,OAVA/I,EAAKc,SAAS,SAAA4C,GAAI,OAChBkP,IAAOlP,EAAM,CACX4K,YAAa,CACXvF,KAAM,CACJ8J,UAAMhQ,QAMP,GAKT,GAAoB,IAFPtE,OAAOsW,KAAK9L,GAEhBlF,OACP,OAAOjD,EApB+B,IAuBhCmK,EAAkChC,EAAlCgC,KAAMD,EAA4B/B,EAA5B+B,MAAY6N,EAAgB5P,EAArB8B,IAErB,KAAME,GAAQD,GAAS6N,GACrB,OAAO/X,EAGT,IAAMiK,EAAM,GAAA1C,OAAGwQ,GAAcC,SAAS,EAAG,KAEnCC,EAAS,GAAA1Q,OAAM4C,EAAN,KAAA5C,OAAc2C,EAAd,KAAA3C,OAAuB0C,GAChCiO,EAAUC,YAAYF,GAY5B,OAVA7Y,EAAKc,SAAS,SAAA4C,GAAI,OAChBkP,IAAOlP,EAAM,CACX4K,YAAa,CACXvF,KAAM,CACJ8J,KAAMiG,EAAUD,OAAYhW,QAM7BiW,EAAU,GAAKlY,GAxiB1BZ,EA2iBEgZ,aAAe,SAACxN,GACd,IAAKA,EACH,MAAO,GAF+B,IAKhCK,EAAeL,EAAfK,MAAOC,EAAQN,EAARM,IAgBf,OAdA9L,EAAKc,SAAS,SAAA4C,GAAI,OAChBkP,IAAOlP,EAAM,CACX4K,YAAa,CACX2K,UAAW,CACTpG,KAAMhH,GAGRqN,QAAS,CACPrG,KAAM/G,QAMP,IAhkBX9L,EAmkBEmZ,oBAAsB,SAAClN,GACrB,IAAKA,EACH,MAAO,GAFoD,IAKrDK,EAAkBL,EAAlBK,OAAQC,EAAUN,EAAVM,MAgBhB,OAdAvM,EAAKc,SAAS,SAAA4C,GAAI,OAChBkP,IAAOlP,EAAM,CACX4K,YAAa,CACXhC,OAAQ,CACNuG,KAAMvG,GAGRC,MAAO,CACLsG,KAAMtG,QAMP,IAxlBXvM,EA2lBU2W,kBAAoB,WACtB3W,EAAKgU,iBAAiBoF,UACxBpZ,EAAKgU,iBAAiBoF,QAAQC,UAAY,IA7lBhDrZ,EAimBUoW,eAAiB,SAACkD,GAAD,OAAuB,WAC9CA,IACAtZ,EAAK2W,sBAnmBT3W,EAsmBUqU,kBAAoB,WAC1BrU,EAAKc,SAAS,SAAA+H,GAAC,OACb+J,IAAO/J,EAAG,CACRqL,aAAc,CACZrB,UAAMhQ,QA1mBhB7C,EAgnBUuU,wBAA0B,SAACqD,GAAD,OAA4B,WAAM,IAAA2B,EAC1BvZ,EAAKM,MAArCiO,EAD0DgL,EAC1DhL,SAAU4F,EADgDoF,EAChDpF,kBAClBnU,EAAKc,SAAS,CAAEqT,uBAAmBtR,KAGhC0L,GACD4F,GACAyD,IAAQhL,GAAkBsD,eAE1BlQ,EAAKD,MAAMgT,QAAQC,KAAKwG,YAAgBrF,MAznB9CnU,EA6nBUyZ,YA7nBVlb,OAAA0E,EAAA,EAAA1E,CAAA2E,EAAAC,EAAAC,KA6nBwB,SAAA+O,IAAA,IAAAnO,EAAAuO,EAAA3T,EAAA8a,EAAA,OAAAxW,EAAAC,EAAAK,KAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAzO,MAAA,UAAAyO,EAAA1O,KAAA,GAId1D,EAAKM,MAAMiO,SAJG,CAAA6D,EAAAzO,KAAA,eAAAyO,EAAAzO,KAAA,EAKF3D,EAAKD,MAAMgE,OAAOC,MAAsC,CACpEA,MAAO2V,GACPzV,UAAW,CACTsB,OAAQ,CACN4C,GAAIpI,EAAKM,MAAMiO,aATL,OAKhBvK,EALgBoO,EAAAhO,KAAAgO,EAAAzO,KAAA,mBAcR4O,EAAmBvS,EAAKD,MAAxBwS,eAdQ,CAAAH,EAAAzO,KAAA,gBAAAyO,EAAAtO,OAAA,yBAAAsO,EAAAzO,KAAA,GAoBF3D,EAAKD,MAAMgE,OAAOC,MAG9B,CACAA,MAAO0O,KACPxO,UAAW,CACTsB,OAAQ,CACNgN,UAAWD,EAAiBA,EAAenK,GAAK,QA3BtC,QAoBhBpE,EApBgBoO,EAAAhO,KAAA,WAiCbJ,EAjCa,CAAAoO,EAAAzO,KAAA,gBAAAyO,EAAAtO,OAAA,kBAqCZlF,EAASoF,EAEfhE,EAAKc,SAAS,SAAA+H,GAAC,OACb+J,IAAO/J,EAAG,CACRuP,YAAa,CACXvF,KAAMjU,GAGRuP,kBAAmB,CACjB3I,OAAQ,CACNqN,KAAMjU,EAAO0E,KAAKkC,aA/CR4M,EAAAzO,KAAA,iBAAAyO,EAAA1O,KAAA,GAAA0O,EAAA/N,GAAA+N,EAAA,SAsDZxT,EAAS,CAAE0E,KAAM,CAAEsB,QAAS,KAClC5E,EAAKc,SAAS,CAAEoT,aAAY9B,EAAA/N,GAAS+T,YAAaxZ,IAvDhC,yBAAAwT,EAAA9N,SAAA6N,EAAAjS,KAAA,aA7nBxBF,EAwrBU4Z,kBAxrBV,eAAAC,EAAAtb,OAAA0E,EAAA,EAAA1E,CAAA2E,EAAAC,EAAAC,KAwrBmD,SAAAkP,EAC/CwH,EAD+CC,GAAA,IAAAC,EAAAzD,EAAAhI,EAAAvK,EAAAiW,EAAAxV,EAAAuJ,EAAAkM,EAAA,OAAAhX,EAAAC,EAAAK,KAAA,SAAAiP,GAAA,cAAAA,EAAA/O,KAAA+O,EAAA9O,MAAA,WAEvCqW,EAFuCD,EAE7CzW,OAEiB0W,EAAUzD,YAJkB,CAAA9D,EAAA9O,KAAA,eAAA8O,EAAA3O,OAAA,iBAQvCyS,EAAgByD,EAAhBzD,YAEFhI,EAAWvO,EAAKM,MAAMgO,YAAYC,SAElCvK,EAAQ,CACZA,MAAOkO,KACPhO,UAAW,CACTkK,MAAO,CACL5I,OAAQ+I,KAhBiCkE,EAAA/O,KAAA,EAsBvCuW,EAAcH,EAAMK,UAAUnW,GAC9BS,EAASwV,EAAYxV,QAAU,GAErCqV,EAAMM,WAAN7b,OAAAC,EAAA,EAAAD,CAAA,GACKyF,EADL,CAEEV,KAAM,CACJmB,OAAM,CAAG8R,GAAHpO,OAAA5J,OAAAyY,EAAA,EAAAzY,CAAmBkG,QA5BgBgO,EAAA9O,KAAA,oBAAA8O,EAAA/O,KAAA,GAAA+O,EAAApO,GAAAoO,EAAA,SAgCvCzE,EAAUyE,EAAApO,GAAM2J,QAChBkM,EAjCuC,gDAAA/R,OAiC0BoG,EAjC1B,SAmCzCP,EAAQqM,WAAWH,GAnCsB,CAAAzH,EAAA9O,KAAA,gBAAA8O,EAAA3O,OAAA,wBAAA2O,EAAApO,GAAA,yBAAAoO,EAAAnO,SAAAgO,EAAApS,KAAA,aAxrBnD,gBAAAoa,EAAAC,GAAA,OAAAV,EAAApM,MAAAvN,KAAAwN,YAAA,GAAA1N,EAAA,OAAAzB,OAAAiC,EAAA,EAAAjC,CAAAuV,EAAAhU,GAAAvB,OAAAkC,EAAA,EAAAlC,CAAAuV,EAAA,EAAApT,IAAA,oBAAAC,MAAA,WA2BIT,KAAKuZ,cAELe,YAAS,eA7Bb,CAAA9Z,IAAA,qBAAAC,MAAA,WAiCST,KAAKI,MAAM8X,aACdlY,KAAKuZ,gBAlCX,CAAA/Y,IAAA,uBAAAC,MAAA,WAuCI6Z,gBAvCJ,CAAA9Z,IAAA,SAAAC,MAAA,WA0CW,IAAA8Z,EAAAva,KACP,OACEa,EAAA,cAAC2Z,GAAA,EAAD,CAAY5D,aAAc5W,KAAK4W,cAC7B/V,EAAA,qBAAKI,UAAU,wBACbJ,EAAA,cAAC4Z,GAAA,EAAD,CACExZ,UAAU,eACVD,MAAO,CAAE7C,OAAQ,GACjBuc,MAAM,YACNC,oBAAoB,IAGtB9Z,EAAA,qBAAKI,UAAU,eACbJ,EAAA,qBAAKI,UAAU,oBACZjB,KAAKI,MAAMiO,UAAYrO,KAAKsU,0BAE7BzT,EAAA,qBAAKI,UAAU,eAAe2Z,IAAK5a,KAAK8T,kBACrC9T,KAAK+T,uBAENlT,EAAA,cAACga,EAAA,SAAD,CACEC,SAAUC,GACV/W,UAAW,CAAEkK,MAAOlO,KAAKI,MAAMgO,aAC/BsE,OAAQ1S,KAAK0Z,mBAEZ,SAAArD,GACC,OACExV,EAAA,cAAC4U,EAAA,EAAD,CACEuF,cAAeT,EAAKna,MAAM6N,kBAC1BgN,oBAAoB,EACpB5F,SAAUkF,EAAKnE,OAAOC,GACtBpF,OAAQsJ,EAAK1F,WACbL,SAAU+F,EAAK/F,eAQ3B3T,EAAA,cAACqa,GAAD,CAAeja,UAAU,yBAhFrC,EAAAT,IAAA,2BAAAC,MAAA,SACkC4F,EAAkBwF,GAAqB,IAC7DwC,EAAahI,EAAU8U,MAAMC,OAA7B/M,SAER,OAAIA,IAAaxC,EAAawC,SACrBqE,IAAO7G,EAAc,CAC1BwC,SAAU,CACRsE,KAAMtE,GAER6J,YAAa,CACXvF,UAAMhQ,KAKL,SAfXiR,EAAA,CAA8BlS,aC9CxB2Z,GAAcjU,kBAKlB+K,KAAY,CACZtS,MAAO,SAAAA,GAAK,OAAIA,EAAMuD,QAGlBkY,GAAoBlU,kBAKxBmU,KAAuB,CACvB1b,MAAO,SAAAA,GAAK,OAAIA,EAAMuD,QAGTsE,4BACbC,aACA0T,GACAC,GAHa5T,CAIbkM","file":"static/js/6.22e5c01f.chunk.js","sourcesContent":["import gql from \"graphql-tag\";\n\nexport const quoteFromTagFrag = gql`\n  fragment QuoteFromTagFrag on Quote {\n    id\n    text\n    date\n    source {\n      id\n      display\n    }\n  }\n`;\n\nexport default quoteFromTagFrag;\n","import gql from \"graphql-tag\";\n\nimport { quoteFromTagFrag } from \"./quote-from-tag.fragment\";\n\nexport const quotes1Query = gql`\n  query Quotes1($quote: GetQuotes) {\n    quotes(quote: $quote) {\n      ...QuoteFromTagFrag\n    }\n  }\n\n  ${quoteFromTagFrag}\n`;\n\nexport default quotes1Query;\n","export default {\n  flex: 1,\n  overflowX: \"hidden\",\n  overflowY: \"auto\",\n  padding: \"0 5px\"\n};\n","import gql from \"graphql-tag\";\n\nexport const textSearchRowFrag = gql`\n  fragment TextSearchRowFrag on QuoteFullSearchResultRow {\n    tid\n    text\n    source\n    column\n  }\n`;\n\nexport default textSearchRowFrag;\n","import gql from \"graphql-tag\";\n\nimport textSearchRowFrag from \"./text-search-row.fragment\";\n\nexport const textSearchResultFrag = gql`\n  fragment TextSearchResultFrag on QuoteFullSearchResult {\n    quotes {\n      ...TextSearchRowFrag\n    }\n\n    sources {\n      ...TextSearchRowFrag\n    }\n\n    tags {\n      ...TextSearchRowFrag\n    }\n\n    authors {\n      ...TextSearchRowFrag\n    }\n\n    sourceTypes {\n      ...TextSearchRowFrag\n    }\n  }\n\n  ${textSearchRowFrag}\n`;\n\nexport default textSearchResultFrag;\n","import gql from \"graphql-tag\";\n\nimport textSearchResultFrag from \"./text-search-result.fragment\";\n\nexport const textSearchQuery = gql`\n  query AllMatchingTexts($text: QuoteFullSearchInput!) {\n    quoteFullSearch(text: $text) {\n      ...TextSearchResultFrag\n    }\n  }\n\n  ${textSearchResultFrag}\n`;\n\nexport default textSearchQuery;\n","import jss from \"jss\";\nimport preset from \"jss-preset-default\";\n\nimport { ROOT_CONTAINER_STYLE } from \"../../constants\";\nimport { SimpleCss } from \"../../constants\";\nimport mainContentStyle from \"../../utils/main-content-centered-style.util\";\n\njss.setup(preset());\n\nconst resultRowItemStyle = {\n  borderTop: [\"none\", \"!important;\"]\n  // tslint:disable-next-line:no-any\n} as any;\n\nexport const styles = {\n  root: ROOT_CONTAINER_STYLE,\n\n  input: {\n    margin: \"0 5px\"\n  },\n\n  mainContent: {\n    ...mainContentStyle,\n    margin: \"5px 3px 0 0\"\n  },\n\n  resultContainer: {\n    margin: \"0\",\n    overflowY: \"auto\",\n    wordBreak: \"break-all\"\n  },\n\n  result: {\n    marginTop: \"15px;\",\n    \"&.first-of-type\": {\n      marginTop: \"0;\"\n    },\n    \"& .ui.list>a.item\": {\n      color: \"initial\"\n    }\n  },\n\n  resultRowHeaderContainer: {\n    textAlign: \"center\"\n  },\n\n  resultRowHeader: {\n    display: \"inline-block\",\n    minWidth: \"40%\",\n    boxShadow: \"0 1px 1px -1px black;\"\n  },\n\n  resultRowItem: {\n    ...resultRowItemStyle,\n    borderBottom: \"1px solid #22242626\",\n    marginTop: 8\n  }\n} as SimpleCss;\n\nexport default styles;\n\nexport const { classes } = jss.createStyleSheet(styles).attach();\n","import * as React from \"react\";\nimport { Message } from \"semantic-ui-react\";\nimport { Icon } from \"semantic-ui-react\";\n\ninterface ErrorBoundaryProps {\n  className?: string;\n}\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n  info?: React.ErrorInfo;\n}\n\nexport class ErrorBoundary extends React.Component<\n  ErrorBoundaryProps,\n  ErrorBoundaryState\n> {\n  state: ErrorBoundaryState = { hasError: false };\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n  }\n\n  componentDidCatch(error: Error, info: React.ErrorInfo) {\n    // Display fallback UI\n    this.setState({ hasError: true });\n    // You can also log the error to an error reporting service\n    // logErrorToMyService(error, info);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return (\n        <Message\n          error={true}\n          icon={true}\n          style={{\n            marginTop: \"20px\"\n          }}\n          className={this.props.className || \"\"}\n        >\n          <Icon name=\"ban\" />\n\n          <Message.Content>\n            <Message.Header\n              style={{\n                borderBottom: \"1px solid\",\n                display: \"inline-block\",\n                marginBottom: \"10px\"\n              }}\n            >\n              An error has occurred\n            </Message.Header>\n            <div>{JSON.stringify(this.state.info, null, 2)}</div>\n          </Message.Content>\n        </Message>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from \"react\";\nimport { Cancelable } from \"lodash\";\nimport debounce from \"lodash-es/debounce\";\nimport { Input } from \"semantic-ui-react\";\nimport { List } from \"semantic-ui-react\";\nimport { Message } from \"semantic-ui-react\";\nimport { Icon } from \"semantic-ui-react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport {\n  AllMatchingTexts,\n  AllMatchingTextsVariables\n} from \"../../graphql/gen.types\";\nimport { AllMatchingTexts_quoteFullSearch } from \"../../graphql/gen.types\";\nimport { State } from \"./search-component\";\nimport { Props } from \"./search-component\";\nimport ALL_MATCHING_TEXT_QUERY from \"../../graphql/text-search.query\";\nimport { classes } from \"./styles\";\nimport ErrorBoundary from \"../../containers/error-boundary.container\";\nimport { SemanticOnInputChangeFunc } from \"../../utils\";\nimport { TextSearchResultFrag } from \"../../graphql/gen.types\";\nimport { TextSearchRowFrag } from \"../../graphql/gen.types\";\nimport { makeSourceURL } from \"../../routes/util\";\nimport { makeTagURL } from \"../../routes/util\";\nimport { makeQuoteURL } from \"../../routes/util\";\nimport { makeAuthorRouteURL } from \"../../routes/util\";\n\nconst RENDER_ROW_PROPS = {\n  SOURCES: makeSourceURL,\n  TAGS: makeTagURL,\n  QUOTES: makeQuoteURL,\n  AUTHORS: makeAuthorRouteURL\n};\n\nconst initialState = {\n  searchText: \"\",\n  searchLoading: false\n};\n\nexport class SearchQuotesComponent extends React.Component<Props, State> {\n  static getDerivedStateFromProps(nextProps: Props, state: State) {\n    const { searchComponentState } = nextProps;\n    if (searchComponentState && state === initialState) {\n      return searchComponentState;\n    }\n\n    return null;\n  }\n\n  state: State = initialState;\n\n  doSearchDebounced: (() => void) & Cancelable;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.doSearchDebounced = debounce(this.doSearch, 700);\n  }\n\n  componentWillUnmount() {\n    this.props.updateSCSLocal({\n      variables: {\n        searchComponentState: this.state\n      }\n    });\n    this.doSearchDebounced.cancel();\n  }\n\n  render() {\n    return (\n      <div className={classes.root}>\n        <form>\n          <Input\n            className={classes.input}\n            icon=\"search\"\n            placeholder=\"Search...\"\n            fluid={true}\n            autoFocus={true}\n            onChange={this.onSearchInputChange}\n            value={this.state.searchText}\n            loading={this.state.searchLoading}\n          />\n        </form>\n\n        <ErrorBoundary className={classes.mainContent}>\n          <div className={classes.mainContent}>\n            {this.state.searchError && (\n              <Message\n                error={true}\n                icon={true}\n                style={{\n                  marginTop: \"20px\"\n                }}\n              >\n                <Icon name=\"ban\" />\n\n                <Message.Content>\n                  <Message.Header\n                    style={{\n                      borderBottom: \"1px solid\",\n                      display: \"inline-block\",\n                      marginBottom: \"10px\"\n                    }}\n                  >\n                    An error has occurred\n                  </Message.Header>\n                  <div>{JSON.stringify(this.state.searchError, null, 2)}</div>\n                </Message.Content>\n              </Message>\n            )}\n\n            {!this.state.searchError &&\n              this.state.searchText &&\n              this.state.result &&\n              this.renderResult(this.state.result)}\n          </div>\n        </ErrorBoundary>\n      </div>\n    );\n  }\n\n  onSearchInputChange: SemanticOnInputChangeFunc = (e, { value }) => {\n    // if user is pressing backspace or clearing texts in any other way, when\n    // the text input is clear, we clear search results. This fixes the bug\n    // where after user clears input and then begins typing again, we render the\n    // stale search result before hitting network\n    let { result } = this.state;\n    result = value ? result : undefined;\n    this.setState({\n      searchText: value,\n      searchError: undefined,\n      result\n    });\n\n    this.doSearchDebounced();\n  };\n\n  doSearch = async () => {\n    const searchText = this.state.searchText.trim();\n\n    if (searchText.length < 2) {\n      return;\n    }\n\n    this.setState({ searchLoading: true });\n\n    try {\n      const result = await this.props.client.query<\n        AllMatchingTexts,\n        AllMatchingTextsVariables\n      >({\n        query: ALL_MATCHING_TEXT_QUERY,\n        variables: {\n          text: {\n            text: searchText\n          }\n        }\n      });\n\n      const data = result.data;\n\n      if (!data) {\n        return;\n      }\n\n      const quoteFullSearch = data.quoteFullSearch as AllMatchingTexts_quoteFullSearch;\n\n      this.setState({ searchLoading: false, result: quoteFullSearch });\n    } catch (error) {\n      this.setState({ searchLoading: false, searchError: error });\n    }\n  };\n\n  renderResult = ({\n    quotes,\n    tags,\n    authors,\n    sources,\n    sourceTypes\n  }: TextSearchResultFrag) => {\n    return authors || quotes || sources || sourceTypes || tags ? (\n      <div className={classes.resultContainer}>\n        {[quotes, tags, authors, sources, sourceTypes].map(this.renderCategory)}\n      </div>\n    ) : (\n      <Message\n        className={classes.resultContainer}\n        style={{ textAlign: \"center\", padding: \"10px\" }}\n        icon={true}\n        warning={true}\n        size=\"small\"\n      >\n        <Icon\n          name=\"warning\"\n          size=\"tiny\"\n          fitted={true}\n          style={{ fontSize: \"2em\" }}\n        />\n        <Message.Content>No Result!</Message.Content>\n      </Message>\n    );\n  };\n\n  renderCategory = (data: Array<TextSearchRowFrag | null> | null) => {\n    if (!data) {\n      return;\n    }\n\n    const data0 = data[0];\n\n    if (!data0) {\n      return;\n    }\n\n    const header = data0.source;\n\n    return (\n      <div className={classes.result} key={header}>\n        <div className={classes.resultRowHeaderContainer}>\n          <span className={classes.resultRowHeader}>{header}</span>\n        </div>\n\n        <List divided={true}>{data.map(this.renderRow(header))}</List>\n      </div>\n    );\n  };\n\n  renderRow = (header: string) => (data: TextSearchRowFrag | null) => {\n    if (!data) {\n      return undefined;\n    }\n\n    const { text, tid, column } = data;\n\n    const rowProps = RENDER_ROW_PROPS[header];\n    const otherProps = rowProps\n      ? {\n          as: NavLink,\n          to: rowProps(tid.toString())\n        }\n      : {};\n\n    return (\n      <List.Item\n        key={tid + column}\n        className={classes.resultRowItem}\n        {...otherProps}\n      >\n        <List.Content>{text}</List.Content>\n      </List.Item>\n    );\n  };\n}\n\nexport default SearchQuotesComponent;\n","import gql from \"graphql-tag\";\nimport { graphql } from \"react-apollo\";\nimport { MutationFn } from \"react-apollo\";\n\nimport { State } from \"../components/SearchComponent/search-component\";\n\nexport const mutationOps = gql`\n  mutation SearchComponentStateLocalMutation(\n    $searchComponentState: SearchLocalInput!\n  ) {\n    searchComponentState(searchComponentState: $searchComponentState) @client\n  }\n`;\n\nexport default mutationOps;\n\ninterface Variable {\n  searchComponentState: State;\n}\n\ntype Fn = MutationFn<void, Variable>;\n\nexport interface SCSLMutateProps {\n  updateSCSLocal: Fn;\n}\n\nexport const sCSLMutationGql = graphql<{}, void, Variable, SCSLMutateProps>(\n  mutationOps,\n  {\n    props: props => {\n      const mutate = props.mutate as Fn;\n\n      return {\n        updateSCSLocal: mutate\n      };\n    }\n  }\n);\n","import gql from \"graphql-tag\";\nimport { DataValue } from \"react-apollo\";\n\nimport { State } from \"../components/SearchComponent/search-component\";\nimport { textSearchResultFrag } from \"../graphql/text-search-result.fragment\";\n\nexport const queryOps = gql`\n  query SearchComponentStateLocalQuery {\n    searchComponentState @client {\n      searchText\n      searchLoading\n      result {\n        ...TextSearchResultFrag\n      }\n      searchError\n    }\n  }\n\n  ${textSearchResultFrag}\n`;\n\nexport default queryOps;\n\nexport interface SCSLData {\n  searchComponentState?: State | null;\n}\n\nexport type SCSLQueryProps = DataValue<SCSLData>;\n","import { withApollo, compose, graphql } from \"react-apollo\";\n\nimport SearchQuotes from \"./component\";\nimport { OwnProps } from \"./search-component\";\nimport { sCSLMutationGql } from \"../../state/search-component-state.local.mutation\";\nimport SCSL_QUERY, {\n  SCSLQueryProps,\n  SCSLData\n} from \"../../state/search-component-state.local.query\";\n\nconst scslGql = graphql<OwnProps, SCSLData, {}, SCSLQueryProps | undefined>(\n  SCSL_QUERY,\n  {\n    props: props => props.data\n  }\n);\n\nexport default compose(\n  withApollo,\n  scslGql,\n  sCSLMutationGql\n)(SearchQuotes);\n","import Select, { OnChangeHandler } from \"react-select\";\nimport * as React from \"react\";\n\nimport { TagFrag } from \"../../graphql/gen.types\";\n\ninterface Props {\n  tags: TagFrag[];\n  selectError: boolean;\n  handleChange: OnChangeHandler<TagFrag[]>;\n  handleBlur: () => void;\n  name: string;\n  value: TagFrag;\n}\n\nexport default class TagControl extends React.Component<Props> {\n  render() {\n    const { name, value, selectError } = this.props;\n\n    return (\n      <Select\n        className={`${selectError ? \"error\" : \"\"}`}\n        id={name}\n        name={name}\n        placeholder=\"Select tags\"\n        options={this.props.tags}\n        multi={true}\n        onChange={this.props.handleChange}\n        onBlur={this.props.handleBlur}\n        value={value}\n        labelKey=\"text\"\n        valueKey=\"id\"\n      />\n    );\n  }\n}\n","import Select, { OnChangeHandler } from \"react-select\";\nimport * as React from \"react\";\n\nimport { SourceFullFrag } from \"../../graphql/gen.types\";\nimport { sourceDisplay } from \"../../graphql/utils\";\n\ninterface Props {\n  selectError: boolean;\n  sources: SourceFullFrag[];\n  handleChange: OnChangeHandler<SourceFullFrag[]>;\n  handleBlur: () => void;\n  name: string;\n  value: SourceFullFrag;\n}\n\nexport default class SourceControl extends React.Component<Props> {\n  render() {\n    const { name, value, selectError, sources } = this.props;\n\n    return (\n      <Select\n        className={`${selectError ? \"error\" : \"\"}`}\n        id={name}\n        name={name}\n        placeholder=\"Select source\"\n        options={sources.map(s => ({ ...s, display: sourceDisplay(s) }))}\n        onChange={this.props.handleChange}\n        onBlur={this.props.handleBlur}\n        value={value}\n        labelKey=\"display\"\n        valueKey=\"id\"\n      />\n    );\n  }\n}\n","import * as React from \"react\";\nimport jss from \"jss\";\nimport preset from \"jss-preset-default\";\nimport { Form, Input } from \"semantic-ui-react\";\n\njss.setup(preset());\n\nconst styles = {\n  date: {\n    border: \"1px solid #22242626\",\n    outline: 0,\n    padding: \"0.3em\",\n    borderRadius: \"0.2em\",\n    textAlign: \"center\"\n  },\n\n  dateDayInput: {\n    flexGrow: [1, \"!important\"]\n  },\n\n  dateMonthInput: {\n    flexGrow: [1, \"!important\"]\n  },\n\n  dateYearInput: {\n    padding: [\"0px\", \"!important\"],\n    flexGrow: [2, \"!important\"]\n  }\n  // tslint:disable-next-line:no-any\n} as any;\n\nconst { classes } = jss.createStyleSheet(styles).attach();\n\nexport interface DateType {\n  day?: number | null;\n  month?: number | null;\n  year?: number | null;\n}\n\ninterface State {\n  date: DateType;\n  errors: { [key: string]: boolean };\n}\n\ninterface DateProps {\n  value?: DateType;\n  id?: string;\n  name?: string;\n  className?: string;\n  onChange?: (value?: DateType) => void;\n  onBlur?: () => void;\n}\n\nexport default class Date extends React.Component<DateProps, State> {\n  static getDerivedStateFromProps(nextProps: DateProps, nextState: State) {\n    // The value was reset by user of component so we sync the state\n    if (!nextProps.value) {\n      return { date: {}, errors: {} };\n    }\n\n    return null;\n  }\n\n  state: State = { date: {}, errors: {} };\n\n  constructor(props: DateProps) {\n    super(props);\n\n    [\"handleChange\", \"handleKeyPress\", \"getError\"].forEach(\n      fn => (this[fn] = this[fn].bind(this))\n    );\n  }\n\n  render() {\n    const { day, month, year } = this.state.date;\n\n    return (\n      <Form.Group\n        className={`${classes.date} ${this.props.className || \"\"}`}\n        inline={true}\n      >\n        <Form.Field\n          className={classes.dateDayInput}\n          control={Input}\n          type=\"number\"\n          value={day || \"\"}\n          min={1}\n          max={31}\n          maxLength={2}\n          label=\"Day\"\n          placeholder=\"Day\"\n          fluid={true}\n          onChange={this.handleChange(\"day\")}\n          onKeyPress={this.handleKeyPress}\n          error={this.getError(\"day\")}\n        />\n\n        <Form.Field\n          className={classes.dateMonthInput}\n          control={Input}\n          type=\"number\"\n          value={month || \"\"}\n          min={1}\n          max={12}\n          maxLength={2}\n          label=\"Month\"\n          placeholder=\"Month\"\n          fluid={true}\n          onChange={this.handleChange(\"month\")}\n          onKeyPress={this.handleKeyPress}\n          error={this.getError(\"month\")}\n        />\n\n        <Form.Field\n          className={classes.dateYearInput}\n          control={Input}\n          type=\"number\"\n          value={year || \"\"}\n          min={1000}\n          max={9999}\n          maxLength={4}\n          label=\"Year\"\n          placeholder=\"Year\"\n          fluid={true}\n          onChange={this.handleChange(\"year\")}\n          onKeyPress={this.handleKeyPress}\n          error={this.getError(\"year\")}\n        />\n      </Form.Group>\n    );\n  }\n\n  getError = (name: string) => {\n    const err = this.state.errors[name];\n    return err === undefined ? false : err;\n  };\n\n  handleChange = (name: string) => (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { onBlur, onChange } = this.props;\n\n    if (onBlur) {\n      onBlur();\n    }\n\n    const target = e.target;\n\n    const min = +target.min;\n    const max = +target.max;\n    const value = +target.value;\n    const realVal = value < min || value > max ? null : value;\n    let { date, errors } = this.state;\n    date = { ...date, [name]: value };\n    errors = { ...errors, [name]: !!!realVal };\n    this.setState(prev => ({ ...prev, date, errors }));\n\n    if (onChange) {\n      onChange({ ...date, [name]: realVal });\n    }\n  };\n\n  handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    const target = e.currentTarget;\n    const len = target.value.length;\n\n    const tooMany = len > 0 && len > target.maxLength - 1;\n\n    if (tooMany || [\".\", \",\"].includes(e.key)) {\n      e.preventDefault();\n    }\n  };\n}\n","import * as React from \"react\";\nimport jss from \"jss\";\nimport preset from \"jss-preset-default\";\nimport { Form, Input } from \"semantic-ui-react\";\n\njss.setup(preset());\n\nconst styles = {\n  page: {\n    border: \"1px solid #22242626\",\n    outline: 0,\n    padding: \"0.3em\",\n    borderRadius: \"0.2em\",\n    textAlign: \"center\",\n    justifyContent: \"center\"\n  },\n\n  startInput: {\n    flexGrow: [1, \"!important\"]\n  },\n\n  endInput: {\n    flexGrow: [1, \"!important\"]\n  }\n  // tslint:disable-next-line:no-any\n} as any;\n\nconst { classes } = jss.createStyleSheet(styles).attach();\n\nexport interface PageType {\n  start?: number | null;\n  end?: number | null;\n}\n\ninterface State {\n  page: PageType;\n  errors: { [key: string]: boolean };\n}\n\ninterface PageProps {\n  value?: PageType;\n  id?: string;\n  name?: string;\n  className?: string;\n  onChange?: (value?: PageType) => void;\n  onBlur?: () => void;\n}\n\nexport default class Page extends React.Component<PageProps, State> {\n  static getDerivedStateFromProps(next: PageProps, currentState: State) {\n    // The value was reset by user of component so we sync the state\n    if (!next.value) {\n      return { page: {}, errors: {} };\n    }\n\n    return null;\n  }\n\n  state: State = {\n    page: {},\n    errors: {}\n  };\n\n  constructor(props: PageProps) {\n    super(props);\n\n    [\"handleChange\", \"handleKeyPress\", \"getError\"].forEach(\n      fn => (this[fn] = this[fn].bind(this))\n    );\n  }\n\n  render() {\n    const { start, end } = this.state.page;\n\n    return (\n      <Form.Group\n        className={`${classes.page} ${this.props.className || \"\"}`}\n        inline={true}\n      >\n        <Form.Field\n          className={classes.startInput}\n          control={Input}\n          type=\"number\"\n          value={start || \"\"}\n          label=\"Page start\"\n          placeholder=\"Page start\"\n          fluid={true}\n          onChange={this.handleChange(\"start\")}\n          onKeyPress={this.handleKeyPress}\n          error={this.getError(\"start\")}\n        />\n\n        <Form.Field\n          className={classes.endInput}\n          control={Input}\n          type=\"number\"\n          value={end || \"\"}\n          label=\"Page end\"\n          placeholder=\"Page end\"\n          fluid={true}\n          onChange={this.handleChange(\"end\")}\n          onKeyPress={this.handleKeyPress}\n          error={this.getError(\"end\")}\n        />\n      </Form.Group>\n    );\n  }\n\n  getError = (name: string) => {\n    const err = this.state.errors[name];\n    return err === undefined ? false : err;\n  };\n\n  handleChange = (name: string) => (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { onBlur, onChange } = this.props;\n\n    if (onBlur) {\n      onBlur();\n    }\n\n    const target = e.target;\n    const value = +target.value;\n    let { page, errors } = this.state;\n    page = { ...page, [name]: value };\n\n    if (name === \"end\" && !page.start) {\n      errors = { start: errors.start, end: true };\n    } else {\n      errors = { start: false, end: false };\n    }\n\n    this.setState(prev => ({ ...prev, page, errors }));\n\n    if (onChange) {\n      onChange(page);\n    }\n  };\n\n  handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if ([\".\", \",\"].includes(e.key)) {\n      e.preventDefault();\n    }\n  };\n}\n","import * as React from \"react\";\nimport jss from \"jss\";\nimport preset from \"jss-preset-default\";\nimport { Form, Input } from \"semantic-ui-react\";\n\njss.setup(preset());\n\nconst styles = {\n  volumeIssue: {\n    border: \"1px solid #22242626\",\n    outline: 0,\n    padding: \"0.3em\",\n    borderRadius: \"0.2em\",\n    textAlign: \"center\",\n    justifyContent: \"center\"\n  },\n\n  volumeInput: {\n    flexGrow: [1, \"!important\"]\n  },\n\n  issueInput: {\n    flexGrow: [1, \"!important\"]\n  }\n  // tslint:disable-next-line:no-any\n} as any;\n\nconst { classes } = jss.createStyleSheet(styles).attach();\n\nexport interface VolumeIssueType {\n  volume?: string | null;\n  issue?: string | null;\n}\n\ninterface State {\n  volumeIssue: VolumeIssueType;\n}\n\ninterface VolumeIssueProps {\n  value?: VolumeIssueType;\n  id?: string;\n  name?: string;\n  className?: string;\n  onChange?: (value?: VolumeIssueType) => void;\n  onBlur?: () => void;\n}\n\nexport default class VolumeIssue extends React.Component<\n  VolumeIssueProps,\n  State\n> {\n  static getDerivedStateFromProps(next: VolumeIssueProps, currentState: State) {\n    // The value was reset by user of component so we sync the state\n    if (!next.value) {\n      return { volumeIssue: {} };\n    }\n\n    return null;\n  }\n\n  state: State = {\n    volumeIssue: {}\n  };\n\n  constructor(props: VolumeIssueProps) {\n    super(props);\n\n    [\"handleChange\"].forEach(fn => (this[fn] = this[fn].bind(this)));\n  }\n\n  render() {\n    const { volume, issue } = this.state.volumeIssue;\n\n    return (\n      <Form.Group\n        className={`${classes.volumeIssue} ${this.props.className || \"\"}`}\n        inline={true}\n      >\n        <Form.Field\n          className={classes.volumeInput}\n          control={Input}\n          value={volume || \"\"}\n          label=\"Volume\"\n          placeholder=\"Volume\"\n          fluid={true}\n          onChange={this.handleChange(\"volume\")}\n        />\n\n        <Form.Field\n          className={classes.issueInput}\n          control={Input}\n          value={issue || \"\"}\n          label=\"Issue\"\n          placeholder=\"Issue\"\n          fluid={true}\n          onChange={this.handleChange(\"issue\")}\n        />\n      </Form.Group>\n    );\n  }\n\n  handleChange = (name: string) => (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { onBlur, onChange } = this.props;\n\n    if (onBlur) {\n      onBlur();\n    }\n\n    const target = e.target;\n    let { volumeIssue } = this.state;\n    volumeIssue = { ...volumeIssue, [name]: target.value };\n    this.setState(prev => ({ ...prev, volumeIssue }));\n\n    if (onChange) {\n      onChange(volumeIssue);\n    }\n  };\n}\n","import gql from \"graphql-tag\";\n\nimport { sourceFullFrag } from \"./source-full.fragment\";\nimport { quoteFromTagFrag } from \"./quote-from-tag.fragment\";\n\nexport const quoteMut = gql`\n  mutation CreateQuote($quote: CreateQuoteInput!) {\n    createQuote(quote: $quote) {\n      ...QuoteFromTagFrag\n\n      source {\n        ...SourceFullFrag\n      }\n    }\n  }\n\n  ${quoteFromTagFrag}\n  ${sourceFullFrag}\n`;\n\nexport default quoteMut;\n","import gql from \"graphql-tag\";\n\nimport { sourceFullFrag } from \"./source-full.fragment\";\n\nexport const sourceQuery = gql`\n  query Source1($source: GetSourceInput!) {\n    source(source: $source) {\n      ...SourceFullFrag\n    }\n  }\n\n  ${sourceFullFrag}\n`;\n\nexport default sourceQuery;\n","import * as React from \"react\";\nimport { Icon } from \"semantic-ui-react\";\nimport { Modal } from \"semantic-ui-react\";\nimport { Button } from \"semantic-ui-react\";\nimport { ApolloError } from \"apollo-client/errors/ApolloError\";\nimport jss from \"jss\";\nimport preset from \"jss-preset-default\";\n\nimport { SimpleCss } from \"../../constants\";\nimport { ERROR_COLOR } from \"../../utils/colors\";\nimport { ERROR_BG_COLOR } from \"../../utils/colors\";\n\njss.setup(preset());\n\nconst styles = {\n  modal: {\n    marginTop: \"20px\",\n    maxHeight: \"40%\"\n  },\n\n  content: {\n    color: ERROR_COLOR,\n    backgroundColor: ERROR_BG_COLOR\n  },\n\n  error: {\n    flex: 1,\n    padding: 20,\n    textAlign: \"center\"\n  },\n\n  buttonContainer: {\n    flexShrink: 0,\n    textAlign: \"right\",\n    padding: \"0 0 5px 0\"\n  }\n} as SimpleCss;\n\nconst modalStyle = styles.modal as React.CSSProperties;\nconst errorStyle = styles.error as React.CSSProperties;\nconst buttonContainerStyle = styles.buttonContainer as React.CSSProperties;\n\ninterface NewQuoteRouteErrorModalProps {\n  open: boolean;\n  dismiss: () => void;\n  error: ApolloError;\n}\n\nexport class ErrorModal extends React.Component<NewQuoteRouteErrorModalProps> {\n  render() {\n    return (\n      <Modal\n        style={modalStyle}\n        dimmer=\"inverted\"\n        open={this.props.open}\n        onClose={this.props.dismiss}\n      >\n        <Modal.Content style={styles.content}>\n          <div style={errorStyle}>{this.props.error.message}</div>\n\n          <div style={buttonContainerStyle}>\n            <Button color=\"red\" onClick={this.props.dismiss}>\n              <Icon name=\"remove\" /> Dismiss\n            </Button>\n          </div>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n}\n\nexport default ErrorModal;\n","import { ApolloError } from \"apollo-client/errors/ApolloError\";\nimport { WithApolloClient, DataValue } from \"react-apollo\";\nimport { ApolloQueryResult } from \"apollo-client\";\n\nimport { TagsMinimal as TagsMinimalQuery } from \"../../graphql/gen.types\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { CreateQuoteInput } from \"../../graphql/gen.types\";\nimport { TagFrag } from \"../../graphql/gen.types\";\nimport { VolumeIssueType } from \"./form-volume-issue-control.component\";\nimport { PageType } from \"./form-page-start-end-control.component\";\nimport { DateType } from \"./date.component\";\nimport { SourceFullFrag } from \"../../graphql/gen.types\";\nimport { Sources1Query } from \"../../graphql/gen.types\";\nimport { Source1 as Source1Query } from \"../../graphql/gen.types\";\nimport { CurrentProjectLocalData } from \"../../state/project.local.query\";\n\nexport interface FormValues {\n  tags: TagFrag[];\n  source: SourceFullFrag | null;\n  quote: string;\n  date: DateType | null;\n  page: PageType | null;\n  volumeIssue: VolumeIssueType | null;\n  extras: string;\n}\n\nexport type OwnProps = WithApolloClient<{}> &\n  RouteComponentProps<{ sourceId?: string }> & {\n    sourceId?: string;\n  };\n\nexport type TagsMinimalGqlProps = DataValue<TagsMinimalQuery>;\n\nexport type CurrentProjectGqlProps = DataValue<CurrentProjectLocalData>;\n\nexport type Props = OwnProps & TagsMinimalGqlProps & CurrentProjectGqlProps;\n\nexport interface State {\n  initialFormValues: FormValues;\n  formOutputs: CreateQuoteInput;\n  sourceId?: string;\n  queryResult?: ApolloQueryResult<Sources1Query & Source1Query>;\n  graphqlError?: ApolloError;\n  submittedSourceId?: string | null;\n  selectedTags: TagFrag[]; // from form\n}\n\nexport const initialFormValues: FormValues = {\n  tags: [],\n  source: null,\n  quote: \"\",\n  date: null,\n  page: null,\n  volumeIssue: null,\n  extras: \"\"\n};\n\nexport const formOutputs: CreateQuoteInput = {\n  date: \"\",\n  sourceId: \"\",\n  tags: [],\n  text: \"\"\n};\n\nexport enum ShouldReUseSource {\n  RE_USE_SOURCE = \"re-use source\",\n  DO_NOT_RE_USE_SOURCE = \"do not re-use source\"\n}\n","import jss from \"jss\";\nimport preset from \"jss-preset-default\";\n\nimport { SUCCESS_COLOR } from \"../../../utils/colors\";\nimport { SUCCESS_BG_COLOR } from \"../../../utils/colors\";\nimport { SimpleCss } from \"../../../constants\";\n\njss.setup(preset());\n\nconst styles = {\n  modal: {\n    marginTop: \"20px\",\n    maxHeight: \"40%\",\n    maxWidth: 300\n  },\n\n  content: {\n    background: SUCCESS_BG_COLOR,\n    color: SUCCESS_COLOR\n  },\n\n  messageContainer: {\n    flex: 1,\n    display: \"flex\",\n    padding: 10,\n    fontSize: \"1.5em\"\n  },\n\n  messageIcon: {\n    paddingRight: \"10px\",\n    fontSize: \"1.5em\"\n  },\n\n  messageHeader: {\n    fontWeight: 900,\n    textAlign: \"center\"\n  },\n\n  messageAction: {\n    fontSize: \"0.8em\",\n    fontStyle: \"italic\"\n  },\n\n  buttonsContainer: {\n    flexShrink: 0,\n    padding: \"10px 8px 5px 10px\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    borderTop: \"1px solid #b3dcb4\",\n\n    \"&.single\": {\n      display: \"block\",\n      textAlign: \"right\"\n    }\n  }\n} as SimpleCss;\n\nexport const modalStyle = styles.modal as React.CSSProperties;\nexport const contentStyle = styles.content as React.CSSProperties;\nexport const messageIconStyle = styles.messageIcon as React.CSSProperties;\n\nexport const { classes } = jss.createStyleSheet(styles).attach();\n","import { RouteComponentProps } from \"react-router-dom\";\nimport { WithApolloClient } from \"react-apollo\";\nimport { ApolloError } from \"apollo-client\";\n\nimport { CurrentProjectLocalData } from \"../../state/project.local.query\";\nimport {\n  SourceFullFrag,\n  Quotes1_quotes,\n  TagFrag\n} from \"../../graphql/gen.types\";\n\ninterface OwnProps extends RouteComponentProps<{}> {\n  className?: string;\n}\n\nexport type Props = OwnProps & CurrentProjectLocalData & WithApolloClient<{}>;\n\nexport enum ResourceName {\n  QUOTES = \"quotes\",\n  TAGS = \"tags\",\n  SOURCES = \"sources\"\n}\n\nexport type Resources = Array<Quotes1_quotes | TagFrag | SourceFullFrag>;\n\nexport interface State {\n  quotes?: Quotes1_quotes[];\n  tags?: TagFrag[];\n  sources?: SourceFullFrag[];\n  loading?: boolean;\n  graphQlError?: ApolloError | { message: string };\n}\n","import SuccessModal from \"./component\";\n\nexport default SuccessModal;\n","import * as React from \"react\";\nimport { Icon } from \"semantic-ui-react\";\nimport { Modal } from \"semantic-ui-react\";\nimport { Button } from \"semantic-ui-react\";\n\nimport { ShouldReUseSource } from \"../new-quote\";\nimport { modalStyle } from \"./styles\";\nimport { contentStyle } from \"./styles\";\nimport { messageIconStyle } from \"./styles\";\nimport { classes } from \"./styles\";\n\ninterface NewQuoteRouteSuccessModalProps {\n  open: boolean;\n  dismiss: (shouldUseSource: ShouldReUseSource) => () => void;\n  reUseSource: boolean;\n}\n\nexport class SuccessModal extends React.Component<\n  NewQuoteRouteSuccessModalProps\n> {\n  render() {\n    const { reUseSource } = this.props;\n\n    return (\n      <Modal style={modalStyle} dimmer=\"inverted\" open={this.props.open}>\n        <Modal.Content style={contentStyle}>\n          <div className={classes.messageContainer}>\n            <Icon style={messageIconStyle} name=\"thumbs up\" />\n\n            <div>\n              <div className={classes.messageHeader}>\n                Quote successfully created\n              </div>\n\n              {!reUseSource && (\n                <div className={classes.messageAction}>\n                  Create another quote for this source?\n                </div>\n              )}\n            </div>\n          </div>\n\n          {this.renderButtons()}\n        </Modal.Content>\n      </Modal>\n    );\n  }\n\n  renderButtons = () => {\n    if (this.props.reUseSource) {\n      return (\n        <div className={`single ${classes.buttonsContainer}`}>\n          <Button\n            color=\"red\"\n            inverted={true}\n            onClick={this.props.dismiss(ShouldReUseSource.DO_NOT_RE_USE_SOURCE)}\n          >\n            <Icon name=\"remove\" /> Dismiss\n          </Button>\n        </div>\n      );\n    }\n\n    return (\n      <div className={classes.buttonsContainer}>\n        <Button\n          color=\"red\"\n          inverted={true}\n          onClick={this.props.dismiss(ShouldReUseSource.DO_NOT_RE_USE_SOURCE)}\n        >\n          <Icon name=\"remove\" /> Nope\n        </Button>\n\n        <Button\n          color=\"green\"\n          inverted={true}\n          onClick={this.props.dismiss(ShouldReUseSource.RE_USE_SOURCE)}\n        >\n          <Icon name=\"checkmark\" /> Ok\n        </Button>\n      </div>\n    );\n  };\n}\n\nexport default SuccessModal;\n","import React, { MouseEvent } from \"react\";\nimport { Tab } from \"semantic-ui-react\";\nimport { TabProps } from \"semantic-ui-react\";\nimport { List } from \"semantic-ui-react\";\nimport { Icon } from \"semantic-ui-react\";\nimport update from \"immutability-helper\";\nimport { ApolloError } from \"apollo-client\";\n\nimport \"./new-quote-sidebar.scss\";\nimport {\n  SourceFullFrag,\n  Sources1Query,\n  Sources1QueryVariables,\n  Quotes1_quotes,\n  Quotes1,\n  Quotes1Variables,\n  TagsMinimal,\n  TagFrag\n} from \"../../graphql/gen.types\";\nimport QUOTES_QUERY from \"../../graphql/quotes-1.query\";\nimport TAGS_QUERY from \"../../graphql/tags-mini.query\";\nimport SOURCES_QUERY from \"../../graphql/sources-1.query\";\nimport { sourceDisplay } from \"../../graphql/utils\";\nimport SearchQuotesComponent from \"../../components/SearchComponent\";\nimport { makeSourceURL } from \"../../routes/util\";\nimport { makeTagURL } from \"../../routes/util\";\nimport Loading from \"../../components/Loading\";\nimport { Props, State, ResourceName, Resources } from \"./new-quote-sidebar\";\n\nexport class QuotesSidebar extends React.Component<Props, State> {\n  state: State = {};\n\n  render() {\n    return (\n      <Tab\n        className={`src-components-new-quote-sidebar ${this.props.className ||\n          \"\"}`}\n        menu={{\n          pointing: true,\n          inverted: true,\n          secondary: true\n        }}\n        panes={[\n          this.renderQuotes(),\n          this.renderTags(),\n          this.renderSources(),\n          this.renderSearch()\n        ]}\n        onTabChange={this.onTabChange}\n        defaultActiveIndex={-1}\n      />\n    );\n  }\n\n  onTabChange = (event: MouseEvent<HTMLDivElement>, props: TabProps) => {\n    switch (props.activeIndex) {\n      case 0:\n        this.fetchQuotes();\n        break;\n\n      case 1:\n        this.fetchTags();\n        break;\n\n      case 2:\n        this.fetchSources();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  renderError = (resource: string) => {\n    const { graphQlError } = this.state;\n    resource = resource.toLowerCase();\n    resource = resource.charAt(0).toUpperCase() + resource.slice(1);\n\n    return (\n      <div className=\"message-container error\">\n        <Icon className=\"message-icon\" name=\"warning sign\" />\n\n        <div>\n          <div className=\"message-header\">{`Error fetching: ${resource}`}</div>\n\n          <div>{graphQlError && graphQlError.message}</div>\n        </div>\n      </div>\n    );\n  };\n\n  renderResourcesOr(resourcesName: ResourceName) {\n    const { loading, graphQlError } = this.state;\n\n    if (graphQlError) {\n      return this.renderError(resourcesName);\n    }\n\n    const resources = this.state[resourcesName] as Resources;\n\n    if (loading && !resources) {\n      return <Loading />;\n    }\n\n    if (resources && resources.length) {\n      return (\n        <List divided={true} relaxed={true} ordered={true}>\n          {resources.map(this[\"render\" + resourcesName.slice(0, -1)])}\n        </List>\n      );\n    }\n\n    return <div>{`No ${resourcesName}!`}</div>;\n  }\n\n  renderQuotes = () => {\n    return {\n      menuItem: \"Quotes\",\n      render: () => (\n        <Tab.Pane\n          className=\"pane\"\n          attached={false}\n          loading={this.state.loading}\n        >\n          {this.renderResourcesOr(ResourceName.QUOTES)}\n        </Tab.Pane>\n      )\n    };\n  };\n\n  renderquote = ({ id, text }: Quotes1_quotes) => {\n    return (\n      <List.Item key={id}>\n        <List.Content>{text}</List.Content>\n      </List.Item>\n    );\n  };\n\n  renderTags = () => {\n    return {\n      menuItem: \"Tags\",\n      render: () => (\n        <Tab.Pane\n          className=\"pane\"\n          attached={false}\n          loading={this.state.loading}\n        >\n          {this.renderResourcesOr(ResourceName.TAGS)}\n        </Tab.Pane>\n      )\n    };\n  };\n\n  rendertag = ({ id, text }: TagFrag) => {\n    return (\n      <List.Item\n        key={id}\n        className=\"list-item\"\n        onClick={this.navigateTo(makeTagURL(id))}\n      >\n        <List.Content>{text}</List.Content>\n      </List.Item>\n    );\n  };\n\n  renderSources = () => {\n    return {\n      menuItem: \"Sources\",\n      render: () => (\n        <Tab.Pane\n          className=\"pane\"\n          attached={false}\n          loading={this.state.loading}\n        >\n          {this.renderResourcesOr(ResourceName.SOURCES)}\n        </Tab.Pane>\n      )\n    };\n  };\n\n  rendersource = (source: SourceFullFrag) => {\n    const { id } = source;\n    const display = sourceDisplay(source);\n    return (\n      <List.Item\n        key={id}\n        className=\"list-item\"\n        onClick={this.navigateTo(makeSourceURL(id))}\n      >\n        <List.Content>{display}</List.Content>\n      </List.Item>\n    );\n  };\n\n  renderSearch = () => {\n    return {\n      menuItem: \"Search\",\n      render: () => (\n        <Tab.Pane\n          className=\"pane\"\n          attached={false}\n          loading={this.state.loading}\n        >\n          <SearchQuotesComponent />\n        </Tab.Pane>\n      )\n    };\n  };\n\n  fetchQuotes = async () => {\n    this.fetching();\n\n    try {\n      const result = await this.props.client.query<Quotes1, Quotes1Variables>({\n        query: QUOTES_QUERY,\n        variables: {\n          quote: {\n            source: null\n          }\n        }\n      });\n\n      const quotes = result.data.quotes as Quotes1_quotes[];\n      this.fetching(ResourceName.QUOTES, quotes);\n    } catch (error) {\n      this.fetching(undefined, undefined, error);\n    }\n  };\n\n  fetchTags = async () => {\n    this.fetching();\n\n    try {\n      const result = await this.props.client.query<TagsMinimal>({\n        query: TAGS_QUERY\n      });\n\n      const data = result.data.tags as TagFrag[];\n      this.fetching(ResourceName.TAGS, data);\n    } catch (error) {\n      this.fetching(undefined, undefined, error);\n    }\n  };\n\n  fetchSources = async () => {\n    const { currentProject } = this.props;\n\n    if (!currentProject) {\n      this.setState({ graphQlError: { message: \"No project selected.\" } });\n      return;\n    }\n\n    this.fetching();\n\n    try {\n      const projectId = currentProject.id;\n      const result = await this.props.client.query<\n        Sources1Query,\n        Sources1QueryVariables\n      >({\n        query: SOURCES_QUERY,\n        variables: {\n          source: { projectId }\n        }\n      });\n\n      const data = result.data.sources as SourceFullFrag[];\n      this.fetching(ResourceName.SOURCES, data);\n    } catch (error) {\n      this.fetching(undefined, undefined, error);\n    }\n  };\n\n  fetching = (\n    resource?: ResourceName,\n    result?: Quotes1_quotes[] | TagFrag[] | SourceFullFrag[],\n    error?: ApolloError\n  ) => {\n    this.setState({ graphQlError: undefined });\n\n    if (error) {\n      this.setState({ loading: false, graphQlError: error });\n      return;\n    }\n\n    if (resource && result) {\n      this.setState(s =>\n        update(s, {\n          loading: {\n            $set: false\n          },\n\n          [resource]: {\n            $set: result\n          },\n\n          graphQlError: {\n            $set: undefined\n          }\n        })\n      );\n\n      return;\n    }\n\n    this.setState({ loading: true });\n  };\n\n  navigateTo = (url: string) => () => {\n    this.props.history.push(url);\n  };\n}\n\nexport default QuotesSidebar;\n","import { withApollo, compose, graphql } from \"react-apollo\";\nimport { withRouter } from \"react-router-dom\";\n\nimport QuotesSidebar from \"./component\";\nimport LOCAL_PROJECT_QUERY, {\n  CurrProjLocalGqlProps,\n  CurrentProjectLocalData\n} from \"../../state/project.local.query\";\n\nconst currLocalProjGql = graphql<\n  {},\n  CurrentProjectLocalData,\n  {},\n  CurrProjLocalGqlProps | void\n>(LOCAL_PROJECT_QUERY, {\n  props: props => props.data\n});\n\nexport default compose(\n  currLocalProjGql,\n  withRouter,\n  withApollo\n)(QuotesSidebar);\n","import * as React from \"react\";\nimport { Formik } from \"formik\";\nimport { FormikProps, FormikActions } from \"formik\";\nimport { Field } from \"formik\";\nimport { FieldProps } from \"formik\";\nimport { FormikErrors } from \"formik\";\nimport { ApolloQueryResult } from \"apollo-client\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { Header } from \"semantic-ui-react\";\nimport { Button } from \"semantic-ui-react\";\nimport { Form } from \"semantic-ui-react\";\nimport { TextArea } from \"semantic-ui-react\";\nimport { Message } from \"semantic-ui-react\";\nimport { Icon } from \"semantic-ui-react\";\nimport { Dimmer } from \"semantic-ui-react\";\nimport { Loader } from \"semantic-ui-react\";\nimport update from \"immutability-helper\";\nimport { Mutation } from \"react-apollo\";\nimport { NavLink } from \"react-router-dom\";\nimport dateIsValid from \"date-fns/isValid\";\n\nimport \"./new-quote.scss\";\nimport {\n  Quotes1 as Quotes1Query,\n  Sources1QueryVariables,\n  Source1Variables\n} from \"../../graphql/gen.types\";\nimport { TagFrag } from \"../../graphql/gen.types\";\nimport { SourceFullFrag } from \"../../graphql/gen.types\";\nimport { Sources1Query } from \"../../graphql/gen.types\";\nimport { Source1 as Source1Query } from \"../../graphql/gen.types\";\nimport { sourceDisplay } from \"../../graphql/utils\";\nimport TagControl from \"./form-tag-control.component\";\nimport SourceControl from \"./form-source-control.component\";\nimport Date from \"./date.component\";\nimport { DateType } from \"./date.component\";\nimport { makeSourceURL } from \"../../routes/util\";\nimport Page from \"./form-page-start-end-control.component\";\nimport { PageType } from \"./form-page-start-end-control.component\";\nimport VolumeIssue from \"./form-volume-issue-control.component\";\nimport { VolumeIssueType } from \"./form-volume-issue-control.component\";\nimport QUOTE_MUTATION from \"../../graphql/quote.mutation\";\nimport { CreateQuoteFn } from \"../../graphql/ops.types\";\nimport { CreateQuoteUpdateFn } from \"../../graphql/ops.types\";\nimport SOURCES_QUERY from \"../../graphql/sources-1.query\";\nimport SOURCE_QUERY from \"../../graphql/source.query\";\nimport RootHeader from \"../../components/Header\";\nimport QUOTES_QUERY from \"../../graphql/quotes-1.query\";\nimport { ErrorModal } from \"./error-modal.component\";\nimport SuccessModal from \"./SuccessModal\";\nimport { setTitle } from \"../../routes/util\";\nimport { makeNewQuoteURL } from \"../../routes/util\";\nimport { ShouldReUseSource } from \"./new-quote\";\nimport { FormValues } from \"./new-quote\";\nimport { State } from \"./new-quote\";\nimport { Props } from \"./new-quote\";\nimport QuotesSidebar from \"../../components/NewQuoteSidebar\";\nimport { initialFormValues } from \"./new-quote\";\nimport { formOutputs } from \"./new-quote\";\nimport AppSideBar from \"../../components/AppSidebar\";\n\nexport class NewQuote extends React.Component<Props, State> {\n  static getDerivedStateFromProps(nextProps: Props, currentState: State) {\n    const { sourceId } = nextProps.match.params;\n\n    if (sourceId !== currentState.sourceId) {\n      return update(currentState, {\n        sourceId: {\n          $set: sourceId\n        },\n        queryResult: {\n          $set: undefined\n        }\n      });\n    }\n\n    return null;\n  }\n\n  state: State = {\n    initialFormValues,\n    formOutputs,\n    selectedTags: []\n  };\n\n  formContainerRef = React.createRef<HTMLDivElement>();\n\n  componentDidMount() {\n    this.fetchSource();\n\n    setTitle(\"New quote\");\n  }\n\n  componentDidUpdate() {\n    if (!this.state.queryResult) {\n      this.fetchSource();\n    }\n  }\n\n  componentWillUnmount() {\n    setTitle();\n  }\n\n  render() {\n    return (\n      <AppSideBar onTagCreated={this.onTagCreated}>\n        <div className=\"src-routes-new-quote\">\n          <RootHeader\n            className=\"route-header\"\n            style={{ margin: 0 }}\n            title=\"New Quote\"\n            showSideBarTrigger={true}\n          />\n\n          <div className=\"route-inner\">\n            <div className=\"form-with-header\">\n              {this.state.sourceId && this.renderSourceQuoteHeader()}\n\n              <div className=\"main-content\" ref={this.formContainerRef}>\n                {this.renderErrorOrSuccess()}\n\n                <Mutation\n                  mutation={QUOTE_MUTATION}\n                  variables={{ quote: this.state.formOutputs }}\n                  update={this.writeQuoteToCache}\n                >\n                  {createQuote => {\n                    return (\n                      <Formik\n                        initialValues={this.state.initialFormValues}\n                        enableReinitialize={true}\n                        onSubmit={this.submit(createQuote)}\n                        render={this.renderForm}\n                        validate={this.validate}\n                      />\n                    );\n                  }}\n                </Mutation>\n              </div>\n            </div>\n\n            <QuotesSidebar className=\"quotes-sidebar\" />\n          </div>\n        </div>\n      </AppSideBar>\n    );\n  }\n\n  renderErrorOrSuccess = () => {\n    const { sourceId, graphqlError, submittedSourceId } = this.state;\n\n    if (graphqlError) {\n      return (\n        <ErrorModal\n          open={!!graphqlError}\n          dismiss={this.dismissErrorModal}\n          error={graphqlError}\n        />\n      );\n    }\n\n    if (submittedSourceId) {\n      return (\n        <SuccessModal\n          open={!!submittedSourceId}\n          dismiss={this.onSuccessModalDismissed}\n          reUseSource={!!sourceId}\n        />\n      );\n    }\n\n    return undefined;\n  };\n\n  renderSourceQuoteHeader = () => {\n    const { source } = this.state.initialFormValues;\n\n    return (\n      <Header dividing={true} className=\"quote-source-display-container\">\n        {source && (\n          <NavLink className=\"quote-link\" to={makeSourceURL(source.id)}>\n            <div className=\"quote-source-label\">Click to go to source</div>\n\n            <div className=\"quote-source-display\">{sourceDisplay(source)}</div>\n          </NavLink>\n        )}\n      </Header>\n    );\n  };\n\n  validate = (values: FormValues) => {\n    const errors: FormikErrors<FormValues> = {};\n\n    for (const key of Object.keys(values)) {\n      const error = this[\n        `validate${key.charAt(0).toUpperCase()}${key.slice(1)}`\n      ](values[key]);\n\n      if (error) {\n        errors[key] = error;\n        return errors;\n      }\n    }\n\n    return errors;\n  };\n\n  renderForm = ({\n    handleReset,\n    dirty,\n    isSubmitting,\n    errors,\n    handleSubmit\n  }: FormikProps<FormValues>) => {\n    const dirtyOrSubmitting = !dirty || isSubmitting;\n    const disableSubmit = dirtyOrSubmitting || !isEmpty(errors);\n    const { sourceId } = this.state;\n\n    return (\n      <Form onSubmit={handleSubmit}>\n        <Dimmer inverted={true} active={isSubmitting}>\n          <Loader active={isSubmitting} size=\"medium\">\n            Saving..\n          </Loader>\n        </Dimmer>\n\n        <Field name=\"tags\" render={this.renderTagControl} />\n\n        {!sourceId && <Field name=\"source\" render={this.renderSourceControl} />}\n\n        <Field name=\"quote\" render={this.renderQuoteControl} />\n        <Field name=\"page\" render={this.renderPageControl} />\n        <Field name=\"volumeIssue\" render={this.renderVolumeIssueControl} />\n        <Field name=\"date\" render={this.renderDateControl} />\n        <Field name=\"extras\" render={this.renderExtrasControl} />\n\n        <div className=\"submit-reset\">\n          <Button\n            basic={true}\n            color=\"red\"\n            onClick={this.onResetClicked(handleReset)}\n            disabled={dirtyOrSubmitting}\n          >\n            <Icon name=\"remove\" /> Reset\n          </Button>\n\n          <Button\n            className=\"submit-button\"\n            type=\"submit\"\n            color=\"green\"\n            disabled={disableSubmit}\n            loading={isSubmitting}\n          >\n            <Icon name=\"checkmark\" /> Ok\n          </Button>\n        </div>\n      </Form>\n    );\n  };\n\n  submit = (createQuote: CreateQuoteFn) => async (\n    values: FormValues,\n    formikBag: FormikActions<FormValues>\n  ) => {\n    formikBag.setSubmitting(true);\n\n    try {\n      await createQuote();\n      formikBag.resetForm();\n\n      this.setState(s =>\n        update(s, {\n          submittedSourceId: {\n            $set: values.source && values.source.id\n          },\n\n          initialFormValues: {\n            tags: {\n              $set: []\n            }\n          }\n        })\n      );\n\n      this.scrollToTopOfForm();\n    } catch (error) {\n      formikBag.setSubmitting(false);\n      this.setState({ graphqlError: error });\n    }\n  };\n\n  onTagCreated = (tag: TagFrag) => {\n    this.setState(s =>\n      update(s, {\n        initialFormValues: {\n          tags: {\n            $set: [...this.state.selectedTags, tag]\n          }\n        }\n      })\n    );\n  };\n\n  renderTagControl = (formProps: FieldProps<FormValues>) => {\n    const {\n      field: { name, value },\n      form\n    } = formProps;\n    const error = form.errors[name];\n    const booleanError = !!error;\n    const touched = form.touched[name];\n    const tags = this.props.tags as TagFrag[];\n\n    return (\n      <div className=\"tags-field\">\n        <Form.Field\n          control={TagControl}\n          label=\"Select at least one tag\"\n          error={booleanError}\n          selectError={booleanError}\n          tags={tags || []}\n          name={name}\n          value={value}\n          handleChange={this.onTagSelected(formProps)}\n          handleBlur={this.handleFormControlBlur(name, form)}\n        >\n          {booleanError && touched && <Message error={true} header={error} />}\n        </Form.Field>\n      </div>\n    );\n  };\n\n  onTagSelected = ({ form, field }: FieldProps<FormValues>) => (\n    value: TagFrag[]\n  ) => {\n    form.setFieldValue(field.name, value);\n    this.setState(s =>\n      update(s, {\n        selectedTags: {\n          $set: value\n        }\n      })\n    );\n  };\n\n  handleFormControlBlur = (\n    name: string,\n    form: FormikProps<FormValues>\n  ) => () => {\n    form.setFieldTouched(name, true);\n  };\n\n  handleControlChange = (name: string, form: FormikProps<FormValues>) => (\n    val: undefined | VolumeIssueType | SourceFullFrag | PageType | DateType\n  ) => form.setFieldValue(name, val);\n\n  renderQuoteControl = (formProps: FieldProps<FormValues>) => {\n    const { field, form } = formProps;\n    const { name } = field;\n    const error = form.errors[name];\n    const booleanError = !!error;\n    // const touched = form.touched[name];\n    const label = \"Quote text\";\n\n    return (\n      <Form.Field\n        control={TextArea}\n        placeholder={label}\n        label={label}\n        id={name}\n        error={booleanError}\n        {...field}\n      />\n    );\n  };\n\n  renderExtrasControl = (formProps: FieldProps<FormValues>) => {\n    const { field, form } = formProps;\n    const { name } = field;\n    const error = form.errors[name];\n    const booleanError = !!error;\n    // const touched = form.touched[name];\n    const label = \"Extras\";\n\n    return (\n      <Form.Field\n        control={TextArea}\n        placeholder={label}\n        label={label}\n        id={name}\n        error={booleanError}\n        {...field}\n      />\n    );\n  };\n\n  renderDateControl = (formik: FieldProps<FormValues>) => {\n    const { field, form } = formik;\n    const { name } = field;\n    const error = form.errors[name];\n    const booleanError = !!error;\n    // const touched = form.touched[name];\n\n    return (\n      <Date\n        className={`${booleanError ? \"error-border\" : \"\"}`}\n        onChange={this.handleControlChange(name, form)}\n        onBlur={this.handleFormControlBlur(name, form)}\n        value={field.value}\n      />\n    );\n  };\n\n  renderPageControl = (formik: FieldProps<FormValues>) => {\n    const { field, form } = formik;\n    const { name } = field;\n    const error = form.errors[name];\n    const booleanError = !!error;\n\n    return (\n      <Page\n        className={`${booleanError ? \"error-border\" : \"\"}`}\n        onChange={this.handleControlChange(name, form)}\n        onBlur={this.handleFormControlBlur(name, form)}\n        value={field.value}\n      />\n    );\n  };\n\n  renderVolumeIssueControl = (formik: FieldProps<FormValues>) => {\n    const { field, form } = formik;\n    const { name } = field;\n    const error = form.errors[name];\n    const booleanError = !!error;\n\n    return (\n      <VolumeIssue\n        className={`${booleanError ? \"error-border\" : \"\"}`}\n        onChange={this.handleControlChange(name, form)}\n        onBlur={this.handleFormControlBlur(name, form)}\n        value={field.value}\n      />\n    );\n  };\n\n  renderSourceControl = (formProps: FieldProps<FormValues>) => {\n    const {\n      field: { name, value },\n      form\n    } = formProps;\n    const error = form.errors[name];\n    const booleanError = !!error;\n    const touched = form.touched[name];\n\n    return (\n      <Form.Field\n        control={SourceControl}\n        label=\"Select source\"\n        error={booleanError}\n        selectError={booleanError}\n        sources={this.getSources()}\n        name={name}\n        value={value}\n        handleBlur={this.handleFormControlBlur(name, form)}\n        handleChange={this.handleControlChange(name, form)}\n      >\n        {booleanError && touched && <Message error={true} header={error} />}\n      </Form.Field>\n    );\n  };\n\n  getSources = () => {\n    const { queryResult } = this.state;\n\n    if (!queryResult) {\n      return [] as SourceFullFrag[];\n    }\n\n    const { data } = queryResult;\n\n    if (!data) {\n      return [] as SourceFullFrag[];\n    }\n\n    if (data.source) {\n      return [data.source];\n    }\n\n    return data.sources;\n  };\n\n  validateQuote = (quote: string | null) => {\n    const error = \"Enter a quote\";\n\n    if (!quote) {\n      return error;\n    }\n\n    this.setState(prev =>\n      update(prev, {\n        formOutputs: {\n          text: {\n            $set: quote\n          }\n        }\n      })\n    );\n\n    return \"\";\n  };\n\n  validateExtras = (extras: string | null) => {\n    if (!extras) {\n      return \"\";\n    }\n\n    this.setState(prev =>\n      update(prev, {\n        formOutputs: {\n          extras: {\n            $set: extras\n          }\n        }\n      })\n    );\n\n    return \"\";\n  };\n\n  validateSource = (source: SourceFullFrag | null) => {\n    const error = \"Select a source\";\n\n    if (!source) {\n      return error;\n    }\n\n    this.setState(prev =>\n      update(prev, {\n        formOutputs: {\n          sourceId: {\n            $set: source.id\n          }\n        }\n      })\n    );\n\n    return \"\";\n  };\n\n  validateTags = (tags: TagFrag[] | null) => {\n    const error = \"Select at least one tag\";\n\n    if (!tags || !tags.length) {\n      return error;\n    }\n\n    this.setState(prev =>\n      update(prev, {\n        formOutputs: {\n          tags: {\n            $set: tags.map(t => t.id)\n          }\n        }\n      })\n    );\n\n    return \"\";\n  };\n\n  validateDate = (date: DateType | null) => {\n    const error = \"Enter a valid date\";\n\n    if (!date) {\n      this.setState(prev =>\n        update(prev, {\n          formOutputs: {\n            date: {\n              $set: undefined\n            }\n          }\n        })\n      );\n\n      return \"\";\n    }\n\n    const keys = Object.keys(date);\n\n    if (keys.length !== 3) {\n      return error;\n    }\n\n    const { year, month, day: noPaddedDay } = date;\n\n    if (!(year && month && noPaddedDay)) {\n      return error;\n    }\n\n    const day = `${noPaddedDay}`.padStart(2, \"0\");\n\n    const inputDate = `${year}-${month}-${day}`;\n    const isValid = dateIsValid(inputDate);\n\n    this.setState(prev =>\n      update(prev, {\n        formOutputs: {\n          date: {\n            $set: isValid ? inputDate : undefined\n          }\n        }\n      })\n    );\n\n    return isValid ? \"\" : error;\n  };\n\n  validatePage = (page: PageType | null) => {\n    if (!page) {\n      return \"\";\n    }\n\n    const { start, end } = page;\n\n    this.setState(prev =>\n      update(prev, {\n        formOutputs: {\n          pageStart: {\n            $set: start\n          },\n\n          pageEnd: {\n            $set: end\n          }\n        }\n      })\n    );\n\n    return \"\";\n  };\n\n  validateVolumeIssue = (volumeIssue: VolumeIssueType | null) => {\n    if (!volumeIssue) {\n      return \"\";\n    }\n\n    const { volume, issue } = volumeIssue;\n\n    this.setState(prev =>\n      update(prev, {\n        formOutputs: {\n          volume: {\n            $set: volume\n          },\n\n          issue: {\n            $set: issue\n          }\n        }\n      })\n    );\n\n    return \"\";\n  };\n\n  private scrollToTopOfForm = () => {\n    if (this.formContainerRef.current) {\n      this.formContainerRef.current.scrollTop = 0;\n    }\n  };\n\n  private onResetClicked = (reset: () => void) => () => {\n    reset();\n    this.scrollToTopOfForm();\n  };\n\n  private dismissErrorModal = () => {\n    this.setState(s =>\n      update(s, {\n        graphqlError: {\n          $set: undefined\n        }\n      })\n    );\n  };\n\n  private onSuccessModalDismissed = (val: ShouldReUseSource) => () => {\n    const { sourceId, submittedSourceId } = this.state;\n    this.setState({ submittedSourceId: undefined });\n\n    if (\n      !sourceId &&\n      submittedSourceId &&\n      val === ShouldReUseSource.RE_USE_SOURCE\n    ) {\n      this.props.history.push(makeNewQuoteURL(submittedSourceId));\n    }\n  };\n\n  private fetchSource = async () => {\n    try {\n      let query;\n\n      if (this.state.sourceId) {\n        query = await this.props.client.query<Source1Query, Source1Variables>({\n          query: SOURCE_QUERY,\n          variables: {\n            source: {\n              id: this.state.sourceId\n            }\n          }\n        });\n      } else {\n        const { currentProject } = this.props;\n\n        if (!currentProject) {\n          return;\n        }\n\n        query = await this.props.client.query<\n          Sources1Query,\n          Sources1QueryVariables\n        >({\n          query: SOURCES_QUERY,\n          variables: {\n            source: {\n              projectId: currentProject ? currentProject.id : \"0\"\n            }\n          }\n        });\n      }\n\n      if (!query) {\n        return;\n      }\n\n      const result = query as ApolloQueryResult<Sources1Query & Source1Query>;\n\n      this.setState(s =>\n        update(s, {\n          queryResult: {\n            $set: result\n          },\n\n          initialFormValues: {\n            source: {\n              $set: result.data.source\n            }\n          }\n        })\n      );\n    } catch (error) {\n      // tslint:disable-next-line:no-any\n      const result = { data: { sources: [] } } as any;\n      this.setState({ graphqlError: error, queryResult: result });\n    }\n  };\n\n  private writeQuoteToCache: CreateQuoteUpdateFn = async (\n    cache,\n    { data: quoteData }\n  ) => {\n    if (!quoteData || !quoteData.createQuote) {\n      return;\n    }\n\n    const { createQuote } = quoteData;\n\n    const sourceId = this.state.formOutputs.sourceId;\n\n    const query = {\n      query: QUOTES_QUERY,\n      variables: {\n        quote: {\n          source: sourceId\n        }\n      }\n    };\n\n    try {\n      const quotesQuery = cache.readQuery(query) as Quotes1Query;\n      const quotes = quotesQuery.quotes || [];\n\n      cache.writeQuery({\n        ...query,\n        data: {\n          quotes: [createQuote, ...quotes]\n        }\n      });\n    } catch (error) {\n      const message = error.message;\n      const queryErrorStart = `Can't find field quotes({\"quote\":{\"source\":\"${sourceId}\"}})`;\n\n      if (message.startsWith(queryErrorStart)) {\n        return;\n      }\n\n      throw error;\n    }\n  };\n}\n\nexport default NewQuote;\n","import { withApollo, compose, graphql } from \"react-apollo\";\n\nimport NewQuote from \"./route\";\nimport {\n  OwnProps,\n  Props,\n  TagsMinimalGqlProps,\n  CurrentProjectGqlProps\n} from \"./new-quote\";\nimport TAGS_QUERY from \"../../graphql/tags-mini.query\";\nimport { TagsMinimal as TagsMinimalQuery } from \"../../graphql/gen.types\";\nimport CURRENT_PROJECT_QUERY, {\n  CurrentProjectLocalData\n} from \"../../state/project.local.query\";\n\nconst tagsGraphQl = graphql<\n  Props,\n  TagsMinimalQuery,\n  {},\n  TagsMinimalGqlProps | undefined\n>(TAGS_QUERY, {\n  props: props => props.data\n});\n\nconst currentProjectGql = graphql<\n  OwnProps,\n  CurrentProjectLocalData,\n  {},\n  CurrentProjectGqlProps | undefined\n>(CURRENT_PROJECT_QUERY, {\n  props: props => props.data\n});\n\nexport default compose(\n  withApollo,\n  tagsGraphQl,\n  currentProjectGql\n)(NewQuote);\n"],"sourceRoot":""}