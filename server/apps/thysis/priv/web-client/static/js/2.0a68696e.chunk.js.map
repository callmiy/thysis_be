{"version":3,"sources":["utils/colors.ts","graphql/ops.types.ts","components/AuthorsControl/component.tsx","components/AuthorsControl/index.ts","components/Header/header.utils.ts","components/Header/component.tsx","components/Header/index.ts","components/AppSidebar/app-sidebar.ts","graphql/tag.mutation.ts","components/NewTagModalForm/utils.ts","components/NewTagModalForm/index.ts","components/NewTagModalForm/component.tsx","components/TagsModal/component.tsx","components/TagsModal/index.ts","components/SourcesModal/component.tsx","components/SourcesModal/index.ts","components/NewSourceTypeModal/new-source-type-modal.ts","components/NewSourceTypeModal/component.tsx","graphql/create-source-type.mutation.ts","components/NewSourceTypeModal/index.ts","components/AppSidebar/component.tsx","components/AppSidebar/index.ts","graphql/utils.ts","components/NewAuthorModal/new-author-modal.ts","components/NewAuthorModal/component.tsx","graphql/create-author.mutation.ts","graphql/update-author.mutation.ts","components/NewAuthorModal/index.ts","components/SourceModal/styles.ts","components/SourceModal/source-modal.ts","components/SourceModal/component.tsx","graphql/source.mutation.ts","components/SourceModal/index.ts","components/SourceTypeControl/component.tsx","components/SourceTypeControl/index.ts"],"names":["__webpack_require__","d","__webpack_exports__","ERROR_COLOR","ERROR_BG_COLOR","SUCCESS_COLOR","SUCCESS_BG_COLOR","TagsMinimalQueryComponent","_Query","Object","_home_kanmii_projects_thysis_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_kanmii_projects_thysis_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","_home_kanmii_projects_thysis_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","apply","arguments","_home_kanmii_projects_thysis_client_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__","Query","GetAllAuthorsQueryComponent","_Query2","SourceTypeQueryComponent","_Query4","TagQuoteQueryComponent","_Query5","AuthorsControl","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","value","_this$props","props","name","selectError","handleChange","handleBlur","loading","currentProject","react_default","a","createElement","Loading","ops_types","query","AUTHORS_QUERY","variables","author","projectId","id","_ref","data","authors","reduce","acc","push","objectSpread","fullName","authorFullName","react_select_es","className","concat","placeholder","options","multi","autoBlur","onChange","onBlur","labelKey","valueKey","React","Component","currentProjGql","graphql","CURRENT_PROJECT_QUERY","INITIAL_STATE","showingSidebar","Header","state","renderWithContext","context","_this","_this$props$className","style","title","path","match","showSideBarTrigger","onShowClicked","minWidth600","showSidebar","show","react","onClick","Icon","ROOT_URL","NavLink","to","makeNewQuoteURL","app_utils","currentProjectGql","CURRENT_PROJECT_LOCAL_QUERY","compose","withRouter","initialState","modalState","newTag","newSource","tagList","tagMut","gql","_templateObject","tagFrag","text","formError","undefined","submitting","submitSuccess","NewTagModalForm","_getPrototypeOf2","_len","length","args","Array","_key","call","renderErrorOrSuccess","_this$state","Message","icon","error","Content","message","success","content","reset","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","dismissModal","stop","handleFocus","setState","e","target","s","update","defineProperty","$set","handleSubmit","createTag","_callee2","_context2","t0","writeTagsToCache","_ref4","_callee3","cache","_ref3","tag","tagsQuery","_context3","abrupt","onTagCreated","TAGS_QUERY","readQuery","writeQuery","tags","$push","startsWith","_x","_x2","_this2","open","_this$state2","question","Modal","background","basic","size","dimmer","onClose","Form","Field","control","Input","label","fluid","onFocus","display","justifyContent","marginTop","Button","color","disabled","react_apollo_browser_umd","mutation","TAG_MUTATION","inverted","TagsModal","renderTags","Loader","active","List","divided","relaxed","map","renderTag","Item","navigateTo","paddingLeft","fontStyle","resetModal","history","makeTagURL","dataProps","SourcesModal","renderSources","_this$props2","sources","renderSource","source","sourceDisplay","makeSourceURL","reshapeSource","sourceType","sourcesGraphQl","SOURCES_QUERY","reshapeSources","_ref2","projectLocalGql","PROJECT_LOCAL_QUERY","initialFormValues","graphQlError","NewSourceTypeModal","validate","values","errors","_arr","keys","_i","charAt","toUpperCase","slice","trim","validateName","onResetClicked","submit","formikBag","setSubmitting","createSourceType","resetForm","renderForm","handleReset","dirty","isSubmitting","disableSubmit","isEmpty","onSubmit","_data","slicedToArray","formik_esm","render","renderInput","type","formProps","field","form","booleanError","touched","assign","autoComplete","handleFormControlBlur","padding","marginBottom","header","setFieldTouched","initialValues","enableReinitialize","create_source_type_mutation_templateObject","sourceTypeFrag","userLocalGql","USER_LOCAL_QUERY","createSourceTypeGql","CREATE_SOURCE_TYPE_MUTATION","mutate","ownProps","user","client","newSourceTypeData","newSourceType","SOURCE_TYPES_QUERY","newData","sourceTypes","AUTH_URLS","LOGIN_URL","USER_REG_URL","AppSideBar","renderSideBar","pushableClassName","Sidebar","Pushable","as","Segment","Menu","animation","onHide","hideSidebar","vertical","visible","PROJECTS_URL","SEARCH_QUOTES_URL","toggleModalState","MenuItemNames","NEW_SOURCE","NEW_AUTHOR","NEW_TAG","NEW_SOURCE_TYPE","TAG_LIST","SOURCE_LIST","includes","logout","Pusher","height","children","components_NewTagModalForm","SourceModal","components_NewSourceTypeModal","components_SourcesModal","components_TagsModal","NewAuthorModal","modal","replace","_this$context","currentProjectLocalGql","userLocalMutationGql","lastName","firstName","middleName","filter","v","join","authorDisplay","split","forEach","mName","year","topic","publication","url","FORM_OUTPUT_KEY","initialFormOutput","_initialFormOutput","LAST_NAME","FIRST_NAME","MIDDLE_NAMES","createdAuthors","contentRef","createRef","renderContent","renderError","validateLastName","validateFirstName","validateMiddleName","onAuthorCreated","createAuthor","authorUpdate","authorCreated","createdAuthor","authorUpdated","eliminateEmptyFields","sent","handleAuthorCreated","prepFormForUpdate","updateAuthor","dirtyOrSubmitting","_arr2","entries","_i2","_ref5","k","val","_arr3","_i3","_ref8","_ref7","initStateWithAuthor","start","renderAuthorCreated","len","compact","showCreateSourceModal","renderAuthor","showSourceModal","current","scrollTop","ref","authorFrag","update_author_mutation_templateObject","createAuthorGql","CREATE_AUTHOR_MUTATION","_props$ownProps","userId","_update2","store","newAuthorData","newAuthor","msg","currentProLocalGql","authorUpdateGql","AUTHOR_UPDATE_MUTATION","NewAuthorForm","jss","setup","preset","styles","overflowX","overflowY","paddingRight","fieldWrapper","formButtonsContainer","submitButton","margin","successCard","backgroundColor","boxShadow","errorMessage","position","top","modalStyle","classes","createStyleSheet","attach","formikConfig","_handleSubmit","mapPropsToValues","formAuthors","createSource","result","renderSourceTypeControl","renderAuthorsControl","renderTextControl","Card","Description","extra","goToSource","_formProps$field","SourceTypeControlComponent","handleControlChange","renderFieldError","_formProps$field2","AuthorsControlComponent","renderTextControlFormik","setFieldValue","_this$props3","toggleModal","sourceMut","sourceFullFrag","createSourceGraphql","CREATE_SOURCE_MUTATION","sourceTypeId","authorIds","sourceData","withFormik","SOURCE_TYPE_QUERY"],"mappings":"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","file":"static/js/2.0a68696e.chunk.js","sourcesContent":["export const ERROR_COLOR = \"#9f3a38\";\nexport const ERROR_BG_COLOR = \"#fff6f6\";\nexport const SUCCESS_COLOR = \"#2c662d\";\nexport const SUCCESS_BG_COLOR = \"#f8f8f9\";\n","import { Query } from \"react-apollo\";\nimport { MutationFn } from \"react-apollo\";\nimport { MutationUpdaterFn } from \"react-apollo\";\nimport { QueryResult } from \"react-apollo\";\nimport { ApolloQueryResult } from \"apollo-client\";\n\nimport { TagsMinimal as TagsMinimalQuery } from \"./gen.types\";\nimport { Sources1Query } from \"./gen.types\";\nimport { CreateQuote as CreateQuoteMutation } from \"./gen.types\";\nimport { CreateQuoteVariables } from \"./gen.types\";\nimport { CreateTag as CreateTagMutation } from \"./gen.types\";\nimport { CreateTagVariables } from \"./gen.types\";\nimport { CreateSource } from \"./gen.types\";\nimport { SourceTypes as SourceTypesQuery } from \"./gen.types\";\nimport { TagQuote as TagQuoteQuery } from \"./gen.types\";\nimport { TagQuoteVariables } from \"./gen.types\";\nimport { Quotes1 as Quotes1Query } from \"./gen.types\";\nimport { Quotes1Variables } from \"./gen.types\";\nimport { GetAllAuthors as GetAllAuthorsQuery } from \"./gen.types\";\nimport { CreateAuthor as CreateAuthorMutation } from \"./gen.types\";\nimport { CreateAuthorVariables } from \"./gen.types\";\nimport { UpdateSource as UpdateSourceMutation } from \"./gen.types\";\nimport { UpdateSourceVariables } from \"./gen.types\";\nimport { UserRegMutation } from \"./gen.types\";\nimport { UserRegMutationVariables } from \"./gen.types\";\nimport { LoginMutation } from \"./gen.types\";\nimport { LoginMutationVariables, GetAllAuthorsVariables } from \"./gen.types\";\n\nexport class TagsMinimalQueryComponent extends Query<TagsMinimalQuery, {}> {}\nexport type TagsMinimalQueryResult = QueryResult<TagsMinimalQuery>;\nexport type TagsMinimalQueryClientResult = ApolloQueryResult<TagsMinimalQuery>;\n\n// tslint:disable-next-line:max-classes-per-file\nexport class GetAllAuthorsQueryComponent extends Query<\n  GetAllAuthorsQuery,\n  GetAllAuthorsVariables\n> {}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class Sources1QueryComponent extends Query<Sources1Query, {}> {}\n\nexport type CreateQuoteFn = MutationFn<\n  CreateQuoteMutation,\n  CreateQuoteVariables\n>;\n\nexport type CreateQuoteUpdateFn = MutationUpdaterFn<CreateQuoteMutation>;\n\nexport type CreateTagFn = MutationFn<CreateTagMutation, CreateTagVariables>;\n\nexport type CreateTagUpdateFn = MutationUpdaterFn<CreateTagMutation>;\n\nexport type CreateSourceMutationCallResult = ApolloQueryResult<CreateSource>;\n\nexport type CreateSourceUpdateFn = MutationUpdaterFn<CreateSource>;\n\nexport type UpdateSourceMutationFn = MutationFn<\n  UpdateSourceMutation,\n  UpdateSourceVariables\n>;\n\n// tslint:disable-next-line:max-classes-per-file\nexport class SourceTypeQueryComponent extends Query<SourceTypesQuery, {}> {}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class TagQuoteQueryComponent extends Query<\n  TagQuoteQuery,\n  TagQuoteVariables\n> {}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class Quotes1QueryComponent extends Query<\n  Quotes1Query,\n  Quotes1Variables\n> {}\n\nexport type CreateAuthorFn = MutationFn<\n  CreateAuthorMutation,\n  CreateAuthorVariables\n>;\n\nexport type CreateAuthorUpdateFn = MutationUpdaterFn<CreateAuthorMutation>;\n\nexport type UserRegFn = MutationFn<UserRegMutation, UserRegMutationVariables>;\n\nexport interface UserRegMutationProps {\n  regUser: UserRegFn;\n}\n\nexport type LoginFn = MutationFn<LoginMutation, LoginMutationVariables>;\n\nexport interface LoginMutationProps {\n  login?: LoginFn;\n}\n","import Select from \"react-select\";\nimport React from \"react\";\n\nimport { GetAllAuthorsQueryComponent } from \"../../graphql/ops.types\";\nimport AUTHORS_QUERY from \"../../graphql/authors.query\";\nimport { authorFullName } from \"../../graphql/utils\";\nimport { AuthorWithFullName } from \"../../graphql/utils\";\nimport { Props } from \"./authors-control\";\nimport Loading from \"../Loading\";\n\nexport class AuthorsControl extends React.Component<Props> {\n  render() {\n    const {\n      name,\n      value,\n      selectError,\n      handleChange,\n      handleBlur,\n      loading,\n      currentProject\n    } = this.props;\n\n    if (loading || !currentProject) {\n      return <Loading />;\n    }\n\n    return (\n      <GetAllAuthorsQueryComponent\n        query={AUTHORS_QUERY}\n        variables={{\n          author: {\n            projectId: currentProject.id\n          }\n        }}\n      >\n        {({ data }) => {\n          const authors = ((data && data.authors) || []).reduce(\n            (acc, a) => {\n              if (a) {\n                acc.push({ ...a, fullName: authorFullName(a) });\n              }\n              return acc;\n            },\n            [] as AuthorWithFullName[]\n          );\n\n          return (\n            <Select\n              className={`${selectError ? \"error\" : \"\"}`}\n              id={name}\n              name={name}\n              placeholder=\"Select authors\"\n              options={authors}\n              multi={true}\n              autoBlur={true}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={value}\n              labelKey=\"fullName\"\n              valueKey=\"id\"\n            />\n          );\n        }}\n      </GetAllAuthorsQueryComponent>\n    );\n  }\n}\n\nexport default AuthorsControl;\n","import { graphql } from \"react-apollo\";\n\nimport CURRENT_PROJECT_QUERY, {\n  CurrentProjectLocalData,\n  CurrProjLocalGqlProps\n} from \"../../state/project.local.query\";\nimport AuthorsControl from \"./component\";\nimport { OwnProps } from \"./authors-control\";\n\nconst currentProjGql = graphql<\n  OwnProps,\n  CurrentProjectLocalData,\n  {},\n  CurrProjLocalGqlProps | undefined\n>(CURRENT_PROJECT_QUERY, {\n  props: props => props.data\n});\n\nexport default currentProjGql(AuthorsControl);\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\nimport { CurrentProjectLocalData } from \"../../state/project.local.query\";\n\nexport type Props = RouteComponentProps<{}> &\n  CurrentProjectLocalData & {\n    title: string;\n    style?: React.CSSProperties;\n    className?: string;\n    showSideBarTrigger?: boolean;\n  };\n\nexport interface State {\n  showingSidebar: boolean;\n}\n\nexport const INITIAL_STATE: State = {\n  showingSidebar: false\n};\n","import * as React from \"react\";\nimport { Icon } from \"semantic-ui-react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport \"./header.scss\";\nimport { Props, State, INITIAL_STATE } from \"./header.utils\";\nimport {\n  AppSidebarConsumer,\n  SideBarContextProps\n} from \"../../containers/App/app.utils\";\nimport { ROOT_URL, makeNewQuoteURL } from \"../../routes/util\";\n\nexport default class Header extends React.Component<Props, State> {\n  state = INITIAL_STATE;\n\n  render() {\n    return <AppSidebarConsumer>{this.renderWithContext}</AppSidebarConsumer>;\n  }\n\n  private renderWithContext = (context: SideBarContextProps) => {\n    const {\n      className = \"\",\n      style,\n      currentProject,\n      title,\n      match: { path },\n      showSideBarTrigger\n    } = this.props;\n\n    const { onShowClicked, minWidth600, showSidebar } = context;\n    const show = minWidth600 ? !showSidebar : true;\n\n    return (\n      <div className={`${className} src-components-header`} style={style}>\n        <div className=\"top\">\n          {showSideBarTrigger && show && (\n            <a className=\"sidebar-trigger item\" onClick={onShowClicked}>\n              <Icon name=\"content\" />\n            </a>\n          )}\n\n          <div className=\"title\">{title}</div>\n        </div>\n\n        {currentProject && (\n          <div className=\"bottom\">\n            {path === ROOT_URL ? (\n              <span className=\"project-title\">{currentProject.title}</span>\n            ) : (\n              <NavLink to={makeNewQuoteURL()} className=\"project-title\">\n                {currentProject.title}\n              </NavLink>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  };\n}\n","import { graphql, compose } from \"react-apollo\";\nimport { withRouter } from \"react-router-dom\";\n\nimport Header from \"./component\";\nimport CURRENT_PROJECT_LOCAL_QUERY, {\n  CurrentProjectLocalData\n} from \"../../state/project.local.query\";\nimport { Props } from \"./header.utils\";\n\nconst currentProjectGql = graphql<\n  Props,\n  CurrentProjectLocalData,\n  {},\n  CurrentProjectLocalData | void\n>(CURRENT_PROJECT_LOCAL_QUERY, {\n  props: props => props.data\n});\n\nexport default compose(\n  withRouter,\n  currentProjectGql\n)(Header);\n","import { RouteComponentProps } from \"react-router\";\n\nimport { CurrProjLocalGqlProps } from \"../../state/project.local.query\";\nimport { TagModalCreatedCb } from \"../../components/NewTagModalForm/utils\";\nimport { UserLocalGqlProps } from \"../../state/auth-user.local.query\";\n\nexport interface OwnProps {\n  children: JSX.Element;\n  onTagCreated?: TagModalCreatedCb;\n}\n\nexport type Props = RouteComponentProps<{}> &\n  OwnProps &\n  CurrProjLocalGqlProps &\n  UserLocalGqlProps;\n\nexport interface State {\n  modalState: {\n    newTag: boolean;\n    newSource: boolean;\n    tagList: boolean;\n  };\n}\n\nexport const initialState: State = {\n  modalState: {\n    newTag: false,\n    newSource: false,\n    tagList: false\n  }\n};\n","import gql from \"graphql-tag\";\n\nimport tagFrag from \"./tag-mini.fragment\";\n\nexport const tagMut = gql`\n  mutation CreateTag($tag: CreateTagInput!) {\n    createTag(tag: $tag) {\n      ...TagFrag\n    }\n  }\n\n  ${tagFrag}\n`;\n\nexport default tagMut;\n","import React from \"react\";\nimport { ApolloError } from \"apollo-client\";\n\nimport { TagFrag, CreateTagInput } from \"../../graphql/gen.types\";\n\nexport type TagModalCreatedCb = (tag: TagFrag) => void;\n\nexport interface Props {\n  open: boolean;\n  dismissModal: () => void;\n  style: React.CSSProperties;\n  onTagCreated?: TagModalCreatedCb;\n}\n\nexport interface State extends CreateTagInput {\n  formError?: ApolloError;\n  submitting: boolean;\n  submitSuccess: boolean;\n}\n\nexport const initialState: State = {\n  text: \"\",\n  formError: undefined,\n  submitting: false,\n  submitSuccess: false\n};\n","import NewTagModalForm from \"./component\";\n\nexport default NewTagModalForm;\n","import React from \"react\";\nimport { Form } from \"semantic-ui-react\";\nimport { Icon } from \"semantic-ui-react\";\nimport { Button } from \"semantic-ui-react\";\nimport { Modal } from \"semantic-ui-react\";\nimport { Input } from \"semantic-ui-react\";\nimport { Header } from \"semantic-ui-react\";\nimport { Message } from \"semantic-ui-react\";\n\nimport { Mutation } from \"react-apollo\";\nimport update from \"immutability-helper\";\n\nimport TAG_MUTATION from \"../../graphql/tag.mutation\";\nimport { CreateTagFn, CreateTagUpdateFn } from \"../../graphql/ops.types\";\nimport {\n  TagsMinimal as TagsMinimalQuery,\n  CreateTag,\n  CreateTagVariables\n} from \"../../graphql/gen.types\";\nimport { TagFrag } from \"../../graphql/gen.types\";\nimport TAGS_QUERY from \"../../graphql/tags-mini.query\";\nimport { initialState } from \"./utils\";\nimport { Props } from \"./utils\";\nimport { State } from \"./utils\";\n\nexport class NewTagModalForm extends React.Component<Props, State> {\n  state = initialState;\n\n  render() {\n    const { open, style } = this.props;\n    const { text, question, formError, submitting, submitSuccess } = this.state;\n\n    return (\n      <Modal\n        style={{ ...(style || {}), ...{ background: \"#fff\" } }}\n        basic={true}\n        size=\"small\"\n        dimmer=\"inverted\"\n        open={open}\n        onClose={this.reset}\n      >\n        <Header icon=\"quote left\" content=\"Subject matter of quote\" />\n\n        <Modal.Content>\n          {this.renderErrorOrSuccess()}\n\n          <Form>\n            <Form.Field\n              control={Input}\n              name=\"tag\"\n              placeholder=\"Tag text\"\n              label=\"Tag text\"\n              fluid={true}\n              onChange={this.handleChange(\"text\")}\n              onFocus={this.handleFocus}\n              error={!!formError}\n            />\n\n            <Form.Field\n              control={Input}\n              name=\"question\"\n              placeholder=\"Question\"\n              label=\"Question\"\n              fluid={true}\n              onChange={this.handleChange(\"question\")}\n              onFocus={this.handleFocus}\n              error={!!formError}\n            />\n          </Form>\n\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              marginTop: \"20px\"\n            }}\n          >\n            <Button\n              id=\"tag-modal-close\"\n              basic={true}\n              color=\"red\"\n              onClick={this.reset}\n              disabled={submitting}\n            >\n              <Icon name=\"remove\" /> Dismiss\n            </Button>\n\n            <Mutation<CreateTag, CreateTagVariables>\n              mutation={TAG_MUTATION}\n              variables={{ tag: { text, question } }}\n              update={this.writeTagsToCache}\n            >\n              {createTag => {\n                return (\n                  <Button\n                    id=\"tag-modal-submit\"\n                    color=\"green\"\n                    inverted={true}\n                    disabled={\n                      !!formError ||\n                      text.length < 2 ||\n                      submitting ||\n                      submitSuccess\n                    }\n                    onClick={this.handleSubmit(createTag)}\n                    loading={submitting}\n                  >\n                    <Icon name=\"checkmark\" /> Ok\n                  </Button>\n                );\n              }}\n            </Mutation>\n          </div>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n\n  renderErrorOrSuccess = () => {\n    const { formError, submitSuccess } = this.state;\n\n    if (formError) {\n      return (\n        <Message icon={true} error={true}>\n          <Icon name=\"ban\" />\n\n          <Message.Content>\n            <Message.Header>An error has occurred</Message.Header>\n\n            {formError.message}\n          </Message.Content>\n        </Message>\n      );\n    }\n\n    if (submitSuccess) {\n      return (\n        <Message\n          error={true}\n          success={true}\n          content=\"Tag created successfully!\"\n        />\n      );\n    }\n\n    return undefined;\n  };\n\n  reset = async () => {\n    this.props.dismissModal();\n  };\n\n  handleFocus = () =>\n    this.setState({\n      formError: undefined,\n      submitSuccess: false\n    });\n\n  handleChange = (name: string) => (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = e;\n    this.setState(s =>\n      update(s, {\n        [name]: {\n          $set: target.value\n        }\n      })\n    );\n  };\n\n  handleSubmit = (createTag: CreateTagFn) => async () => {\n    try {\n      this.setState({ submitting: true });\n      await createTag();\n      this.setState({ submitSuccess: true, submitting: false });\n    } catch (error) {\n      this.setState({ formError: error, submitting: false });\n    }\n  };\n\n  writeTagsToCache: CreateTagUpdateFn = async (cache, { data: createTag }) => {\n    if (!createTag) {\n      return;\n    }\n\n    const tag = createTag.createTag as TagFrag;\n\n    if (this.props.onTagCreated) {\n      this.props.onTagCreated(tag);\n    } else {\n      return;\n    }\n\n    const query = {\n      query: TAGS_QUERY\n    };\n\n    try {\n      const tagsQuery = cache.readQuery<TagsMinimalQuery>(query);\n\n      cache.writeQuery({\n        ...query,\n        data: update(tagsQuery, {\n          tags: {\n            $push: [tag]\n          }\n        })\n      });\n    } catch (error) {\n      if (error.message.startsWith(\"Can't find field tags on object\")) {\n        return;\n      }\n\n      throw error;\n    }\n  };\n}\n\nexport default NewTagModalForm;\n","import React from \"react\";\nimport { Modal, List, Message, Loader } from \"semantic-ui-react\";\n\nimport \"./tags-modal.scss\";\nimport { TagsMinimalQueryComponent } from \"../../graphql/ops.types\";\nimport { TagsMinimalQueryResult } from \"../../graphql/ops.types\";\nimport { TagFrag } from \"../../graphql/gen.types\";\nimport TAGS_QUERY from \"../../graphql/tags-mini.query\";\nimport { makeTagURL } from \"../../routes/util\";\nimport { Props } from \"./utils\";\n\nexport class TagsModal extends React.Component<Props> {\n  render() {\n    const { open } = this.props;\n\n    return (\n      <TagsMinimalQueryComponent query={TAGS_QUERY}>\n        {dataProps => {\n          return (\n            <Modal\n              className=\"src-components-tags-modal\"\n              basic={true}\n              dimmer=\"inverted\"\n              open={open}\n              onClose={this.resetModal}\n            >\n              <Modal.Content>\n                <div\n                  id=\"tag-list-modal-close\"\n                  className=\"modal-close\"\n                  onClick={this.props.dismissModal}\n                >\n                  &times;\n                </div>\n\n                {this.renderTags(dataProps)}\n              </Modal.Content>\n            </Modal>\n          );\n        }}\n      </TagsMinimalQueryComponent>\n    );\n  }\n\n  renderTags = ({ loading, data, error }: TagsMinimalQueryResult) => {\n    if (error) {\n      return (\n        <div className=\"error-container\" onClick={this.props.dismissModal}>\n          {error.message}\n        </div>\n      );\n    }\n\n    if (loading) {\n      return <Loader active={true} />;\n    }\n\n    const tags = data ? data.tags : null;\n\n    if (tags && tags.length) {\n      return (\n        <List divided={true} relaxed={true}>\n          {tags.map(this.renderTag)}\n        </List>\n      );\n    }\n\n    return (\n      <Message className=\"no-resources-message\">\n        <Message.Content>No tags for \"current project\"</Message.Content>\n      </Message>\n    );\n  };\n\n  renderTag = (tag: TagFrag | null) => {\n    if (!tag) {\n      return undefined;\n    }\n\n    const { id, text, question } = tag;\n    return (\n      <List.Item key={id} id={id} onClick={this.navigateTo(id)}>\n        <List.Content>\n          <div>{text}</div>\n          {question && (\n            <div\n              style={{\n                paddingLeft: \"10%\",\n                fontStyle: \"italic\"\n              }}\n            >\n              {question}\n            </div>\n          )}\n        </List.Content>\n      </List.Item>\n    );\n  };\n\n  resetModal = () => {\n    this.props.dismissModal();\n  };\n\n  private navigateTo = (id: string) => () => {\n    this.resetModal();\n    this.props.history.push(makeTagURL(id));\n  };\n}\n\nexport default TagsModal;\n","import { withRouter } from \"react-router-dom\";\n\nimport { Props } from \"./utils\";\nimport { TagsModal } from \"./component\";\n\nexport default withRouter<Props>(TagsModal);\n","import React from \"react\";\nimport { Modal, Message, List, Loader } from \"semantic-ui-react\";\n\nimport \"./sources-modal.scss\";\nimport { SourceFullFrag } from \"../../graphql/gen.types\";\nimport { sourceDisplay } from \"../../graphql/utils\";\nimport { makeSourceURL } from \"../../routes/util\";\nimport { Props } from \"./sources-modal\";\n\nexport class SourcesModal extends React.Component<Props> {\n  render() {\n    return (\n      <Modal\n        id=\"sources-modal\"\n        basic={true}\n        open={this.props.open}\n        onClose={this.resetModal}\n        dimmer=\"inverted\"\n        className=\"src-components-sources-modal\"\n      >\n        <Modal.Content>\n          <div\n            id=\"sources-modal-close\"\n            className=\"modal-close\"\n            onClick={this.props.dismissModal}\n          >\n            &times;\n          </div>\n\n          {this.renderSources()}\n        </Modal.Content>\n      </Modal>\n    );\n  }\n\n  renderSources = () => {\n    const { error, dismissModal } = this.props;\n\n    if (error) {\n      return (\n        <div className=\"error-container\" onClick={dismissModal}>\n          {error.message}\n        </div>\n      );\n    }\n\n    if (this.props.loading) {\n      return <Loader active={true} />;\n    }\n\n    const { sources, currentProject } = this.props;\n\n    if (sources && sources.length) {\n      return (\n        <List divided={true} relaxed={true}>\n          {sources.map(this.renderSource)}\n        </List>\n      );\n    }\n\n    return (\n      <Message className=\"no-resources-message\">\n        <Message.Content>\n          No sources for {` \"${currentProject && currentProject.title}\"`}\n        </Message.Content>\n      </Message>\n    );\n  };\n\n  renderSource = (source: SourceFullFrag | null) => {\n    if (!source) {\n      return undefined;\n    }\n\n    return (\n      <List.Item\n        key={source.id}\n        className=\"list-item\"\n        onClick={this.navigateTo(source.id)}\n      >\n        <List.Content>{sourceDisplay(source)}</List.Content>\n      </List.Item>\n    );\n  };\n\n  resetModal = () => {\n    this.props.dismissModal();\n  };\n\n  navigateTo = (id: string) => () => {\n    this.resetModal();\n    this.props.history.push(makeSourceURL(id));\n  };\n}\n\nexport default SourcesModal;\n","import { withRouter } from \"react-router-dom\";\nimport { graphql, compose } from \"react-apollo\";\n\nimport SourcesModal from \"./component\";\nimport SOURCES_QUERY from \"../../graphql/sources-1.query\";\nimport { SourceFullFrag } from \"../../graphql/gen.types\";\nimport { Sources1Query, Sources1QueryVariables } from \"../../graphql/gen.types\";\nimport { sourceDisplay } from \"../../graphql/utils\";\nimport { OwnProps } from \"./sources-modal\";\nimport { SourcesGqlProps } from \"./sources-modal\";\nimport { ProjectLocalGqlProps } from \"./sources-modal\";\nimport PROJECT_LOCAL_QUERY, {\n  CurrentProjectLocalData\n} from \"../../state/project.local.query\";\n\nconst reshapeSource = (s: SourceFullFrag | null) => {\n  if (!s) {\n    return {} as SourceFullFrag;\n  }\n\n  return {\n    ...s,\n    display: `${sourceDisplay(s)} | ${s.sourceType.name}`\n  } as SourceFullFrag;\n};\n\nexport const reshapeSources = (\n  sources: SourceFullFrag[] | null\n): SourceFullFrag[] => {\n  if (!sources) {\n    return [] as SourceFullFrag[];\n  }\n\n  return sources.map(reshapeSource);\n};\n\nconst sourcesGraphQl = graphql<\n  OwnProps,\n  Sources1Query,\n  Sources1QueryVariables,\n  SourcesGqlProps | undefined\n>(SOURCES_QUERY, {\n  props: ({ data }) => {\n    if (!data || !data.sources) {\n      return data;\n    }\n\n    const sources = data.sources as SourceFullFrag[];\n    return {\n      ...data,\n      sources: reshapeSources(sources)\n    };\n  },\n\n  options: ({ currentProject }) => ({\n    variables: {\n      source: {\n        projectId: (currentProject && currentProject.id) || \"0\"\n      }\n    }\n  })\n});\n\nconst projectLocalGql = graphql<\n  OwnProps,\n  CurrentProjectLocalData,\n  {},\n  ProjectLocalGqlProps | undefined\n>(PROJECT_LOCAL_QUERY, {\n  props: props => props.data\n});\n\nexport default compose(\n  withRouter,\n  projectLocalGql,\n  sourcesGraphQl\n)(SourcesModal);\n// );\n","import React from \"react\";\nimport { ApolloError } from \"apollo-client\";\nimport { FetchResult } from \"react-apollo\";\n\nimport { CreateSourceType } from \"../../graphql/gen.types\";\nimport { UserLocalGqlData } from \"../../state/auth-user.local.query\";\n\nexport interface CreateSourceTypeProps {\n  createSourceType: (\n    name: string\n  ) => Promise<void | FetchResult<CreateSourceType>>;\n}\n\nexport type OwnProps = UserLocalGqlData & {\n  open: boolean;\n  dismissModal: () => void;\n  style: React.CSSProperties;\n};\n\nexport type Props = CreateSourceTypeProps & OwnProps;\n\nexport interface FormValues {\n  name: string;\n}\n\nexport const initialFormValues: FormValues = {\n  name: \"\"\n};\n\nexport interface State {\n  initialFormValues: FormValues;\n  graphQlError?: ApolloError;\n  submitting: boolean;\n  submitSuccess: boolean;\n}\n\nexport const initialState: State = {\n  initialFormValues,\n  graphQlError: undefined,\n  submitting: false,\n  submitSuccess: false\n};\n","import React from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { Modal } from \"semantic-ui-react\";\nimport { Input } from \"semantic-ui-react\";\nimport { Header } from \"semantic-ui-react\";\nimport { Message } from \"semantic-ui-react\";\nimport { Icon } from \"semantic-ui-react\";\nimport { Form } from \"semantic-ui-react\";\nimport { Formik } from \"formik\";\nimport { FormikProps, FormikActions } from \"formik\";\nimport { Field } from \"formik\";\nimport { FieldProps } from \"formik\";\nimport { FormikErrors } from \"formik\";\nimport isEmpty from \"lodash/isEmpty\";\n\nimport { initialState } from \"./new-source-type-modal\";\nimport { Props } from \"./new-source-type-modal\";\nimport { State } from \"./new-source-type-modal\";\nimport { FormValues } from \"./new-source-type-modal\";\n\nexport class NewSourceTypeModal extends React.Component<Props, State> {\n  state = initialState;\n\n  render() {\n    const { open, style } = this.props;\n\n    return (\n      <Modal\n        style={{ ...(style || {}), ...{ background: \"#fff\" } }}\n        basic={true}\n        size=\"small\"\n        dimmer=\"inverted\"\n        open={open}\n        onClose={this.onResetClicked(() => null)}\n      >\n        <Header icon=\"user\" content=\"Source Type Details\" />\n\n        <Modal.Content>\n          {this.renderErrorOrSuccess()}\n\n          <Formik\n            initialValues={this.state.initialFormValues}\n            enableReinitialize={true}\n            onSubmit={this.submit}\n            render={this.renderForm}\n            validate={this.validate}\n          />\n        </Modal.Content>\n      </Modal>\n    );\n  }\n\n  validate = (values: FormValues) => {\n    const errors: FormikErrors<FormValues> = {};\n\n    for (const key of Object.keys(values)) {\n      const error = this[\n        `validate${key.charAt(0).toUpperCase()}${key.slice(1)}`\n      ](values[key].trim());\n\n      if (error) {\n        errors[key] = error;\n        return errors;\n      }\n    }\n\n    return errors;\n  };\n\n  validateName = (name: string | null) => {\n    if (!name) {\n      return \"Enter source name\";\n    }\n\n    if (name.length < 2) {\n      return \"Too short\";\n    }\n\n    return \"\";\n  };\n\n  renderErrorOrSuccess = () => {\n    const { graphQlError, submitSuccess } = this.state;\n\n    if (graphQlError) {\n      return (\n        <Message icon={true} error={true}>\n          <Icon name=\"ban\" />\n\n          <Message.Content>\n            <Message.Header>An error has occurred</Message.Header>\n\n            {graphQlError.message}\n          </Message.Content>\n        </Message>\n      );\n    }\n\n    if (submitSuccess) {\n      return (\n        <Message\n          error={true}\n          success={true}\n          content=\"Source created successfully!\"\n        />\n      );\n    }\n\n    return undefined;\n  };\n\n  onResetClicked = (reset: () => void) => () => {\n    reset();\n    this.props.dismissModal();\n  };\n\n  submit = async (values: FormValues, formikBag: FormikActions<FormValues>) => {\n    formikBag.setSubmitting(true);\n\n    try {\n      await (this.props.createSourceType &&\n        this.props.createSourceType(values.name.trim()));\n      this.setState({ submitSuccess: true });\n\n      formikBag.resetForm();\n    } catch (error) {\n      formikBag.setSubmitting(false);\n      this.setState({ graphQlError: error });\n    }\n  };\n\n  private renderForm = ({\n    handleReset,\n    dirty,\n    isSubmitting,\n    errors,\n    handleSubmit\n  }: FormikProps<FormValues>) => {\n    const dirtyOrSubmitting = !dirty || isSubmitting;\n    const disableSubmit = dirtyOrSubmitting || !isEmpty(errors);\n\n    return (\n      <Form onSubmit={handleSubmit}>\n        {[[\"Source Name\", \"name\"]].map(data => {\n          const [label, name] = data;\n          return (\n            <Field key={name} name={name} render={this.renderInput(label)} />\n          );\n        })}\n\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginTop: \"20px\"\n          }}\n        >\n          <Button\n            id=\"source-type-modal-close\"\n            basic={true}\n            color=\"red\"\n            onClick={this.onResetClicked(handleReset)}\n            disabled={isSubmitting}\n            type=\"button\"\n          >\n            <Icon name=\"remove\" /> Dismiss\n          </Button>\n\n          <Button\n            id=\"source-type-modal-submit\"\n            color=\"green\"\n            inverted={true}\n            disabled={disableSubmit}\n            loading={isSubmitting}\n            type=\"submit\"\n          >\n            <Icon name=\"checkmark\" /> Ok\n          </Button>\n        </div>\n      </Form>\n    );\n  };\n\n  private renderInput = (label: string) => (\n    formProps: FieldProps<FormValues>\n  ) => {\n    const { field, form } = formProps;\n    const name = field.name;\n    const error = form.errors[name];\n    const booleanError = !!error;\n    const touched = form.touched[name];\n\n    return (\n      <div>\n        <Form.Field\n          control={Input}\n          placeholder={label}\n          autoComplete=\"off\"\n          label={label}\n          id={name}\n          error={booleanError}\n          onBlur={this.handleFormControlBlur(name, form)}\n          onFocus={this.handleFocus}\n          {...field}\n        />\n\n        {booleanError && touched && (\n          <Message\n            style={{\n              display: \"block\",\n              padding: \"0.5em\",\n              marginBottom: \"1em\",\n              marginTop: \"-10px\"\n            }}\n            error={true}\n            header={error}\n          />\n        )}\n      </div>\n    );\n  };\n\n  private handleFormControlBlur = (\n    name: string,\n    form: FormikProps<FormValues>\n  ) => () => {\n    form.setFieldTouched(name, true);\n  };\n\n  private handleFocus = () => {\n    this.setState({\n      graphQlError: undefined,\n      submitSuccess: false\n    });\n  };\n}\n\nexport default NewSourceTypeModal;\n","import gql from \"graphql-tag\";\n\nimport { sourceTypeFrag } from \"./source-type.fragment\";\nimport { MutationFn } from \"react-apollo\";\nimport { CreateSourceType, CreateSourceTypeVariables } from \"./gen.types\";\n\nexport const createSourceType = gql`\n  mutation CreateSourceType($sourceType: CreateSourceTypeInput!) {\n    sourceType(sourceType: $sourceType) {\n      ...SourceTypeFrag\n    }\n  }\n\n  ${sourceTypeFrag}\n`;\n\nexport default createSourceType;\n\nexport type CreateSourceTypeFn = MutationFn<\n  CreateSourceType,\n  CreateSourceTypeVariables\n>;\n","import { graphql, compose } from \"react-apollo\";\nimport update from \"immutability-helper\";\n\nimport NewSourceTypeModal from \"./component\";\nimport { CreateSourceTypeProps, OwnProps } from \"./new-source-type-modal\";\nimport CREATE_SOURCE_TYPE_MUTATION from \"../../graphql/create-source-type.mutation\";\nimport SOURCE_TYPES_QUERY from \"../../graphql/source-types.query\";\nimport {\n  CreateSourceType,\n  CreateSourceTypeVariables,\n  SourceTypes\n} from \"../../graphql/gen.types\";\nimport { CreateSourceTypeFn } from \"../../graphql/create-source-type.mutation\";\nimport USER_LOCAL_QUERY, {\n  UserLocalGqlData,\n  UserLocalGqlProps\n} from \"../../state/auth-user.local.query\";\n\nconst userLocalGql = graphql<\n  OwnProps,\n  UserLocalGqlData,\n  {},\n  UserLocalGqlProps | void\n>(USER_LOCAL_QUERY, {\n  props: props => props.data\n});\n\nconst createSourceTypeGql = graphql<\n  OwnProps,\n  CreateSourceType,\n  CreateSourceTypeVariables,\n  CreateSourceTypeProps | undefined\n>(CREATE_SOURCE_TYPE_MUTATION, {\n  props: props => {\n    const mutate = props.mutate as CreateSourceTypeFn;\n    const {\n      ownProps: { user }\n    } = props;\n\n    if (user) {\n      return {\n        createSourceType: (name: string) =>\n          mutate({\n            variables: {\n              sourceType: {\n                name\n              }\n            },\n\n            update: (client, { data: newSourceTypeData }) => {\n              if (!newSourceTypeData) {\n                return;\n              }\n\n              const newSourceType = newSourceTypeData.sourceType;\n\n              if (newSourceType) {\n                return;\n              }\n\n              const data = client.readQuery({\n                query: SOURCE_TYPES_QUERY\n              }) as SourceTypes;\n\n              const newData = update(data, {\n                sourceTypes: {\n                  $push: [newSourceType]\n                }\n              });\n\n              client.writeQuery({\n                query: SOURCE_TYPES_QUERY,\n                data: newData\n              });\n            }\n          })\n      };\n    }\n\n    return undefined;\n  }\n});\n\nexport default compose(\n  userLocalGql,\n  createSourceTypeGql\n)(NewSourceTypeModal);\n","import * as React from \"react\";\nimport { Sidebar, Segment, Menu, Icon } from \"semantic-ui-react\";\nimport { NavLink } from \"react-router-dom\";\nimport update from \"immutability-helper\";\n\nimport \"./app-sidebar.scss\";\nimport { Props, State, initialState } from \"./app-sidebar\";\nimport {\n  AppSidebarConsumer,\n  SideBarContextProps\n} from \"../../containers/App/app.utils\";\nimport {\n  ROOT_URL,\n  PROJECTS_URL,\n  SEARCH_QUOTES_URL,\n  makeNewQuoteURL,\n  LOGIN_URL,\n  USER_REG_URL\n} from \"../../routes/util\";\nimport { MenuItemNames } from \"../../constants\";\nimport NewTagModalForm from \"../../components/NewTagModalForm\";\nimport SourceModal from \"../../components/SourceModal\";\nimport TagsModal from \"../../components/TagsModal\";\nimport SourcesModal from \"../../components/SourcesModal\";\nimport NewAuthorModal from \"../NewAuthorModal\";\nimport NewSourceTypeModal from \"../NewSourceTypeModal\";\n\nconst AUTH_URLS = [LOGIN_URL, USER_REG_URL];\n\nexport class AppSideBar extends React.Component<Props, State> {\n  state: State = initialState;\n  context: SideBarContextProps | undefined = undefined;\n\n  render() {\n    return <AppSidebarConsumer>{this.renderSideBar}</AppSidebarConsumer>;\n  }\n\n  private renderSideBar = (context: SideBarContextProps) => {\n    this.context = context;\n    const { onShowClicked, minWidth600, showSidebar } = context;\n\n    let pushableClassName = \"src-components-app-sidebar\";\n\n    if (minWidth600) {\n      pushableClassName += \" \" + \"pushable-min-width-600\";\n    }\n\n    if (showSidebar) {\n      pushableClassName += \" \" + \"pushable-showing-sidebar\";\n    }\n\n    const {\n      match: { path },\n      currentProject\n    } = this.props;\n\n    return (\n      <Sidebar.Pushable as={Segment} className={pushableClassName}>\n        <Sidebar\n          as={Menu}\n          animation=\"overlay\"\n          icon=\"labeled\"\n          onHide={this.hideSidebar}\n          vertical={true}\n          visible={context.showSidebar}\n        >\n          {minWidth600 && (\n            <a className=\"sidebar-trigger-sidebar item\" onClick={onShowClicked}>\n              <Icon name=\"content\" />\n            </a>\n          )}\n\n          {currentProject && path !== ROOT_URL ? (\n            <Menu.Item\n              as={NavLink}\n              to={makeNewQuoteURL()}\n              onClick={this.hideSidebar}\n              className=\"home-menu\"\n            >\n              <Icon name=\"quote right\" />\n              <span>Home</span>\n            </Menu.Item>\n          ) : (\n            undefined\n          )}\n\n          {path !== PROJECTS_URL ? (\n            <Menu.Item\n              as={NavLink}\n              to={PROJECTS_URL}\n              onClick={this.hideSidebar}\n            >\n              <Icon name=\"gem\" />\n              <span>Projects</span>\n            </Menu.Item>\n          ) : (\n            undefined\n          )}\n\n          {currentProject && path !== SEARCH_QUOTES_URL ? (\n            <Menu.Item\n              as={NavLink}\n              to={SEARCH_QUOTES_URL}\n              onClick={this.hideSidebar}\n            >\n              <Icon name=\"search\" />\n              <span>Search</span>\n            </Menu.Item>\n          ) : (\n            undefined\n          )}\n\n          {currentProject && (\n            <Menu.Item\n              onClick={this.toggleModalState(MenuItemNames.NEW_SOURCE, true)}\n            >\n              <Icon name=\"user\" />\n              <span>New Source</span>\n            </Menu.Item>\n          )}\n\n          {currentProject && (\n            <Menu.Item\n              onClick={this.toggleModalState(MenuItemNames.NEW_AUTHOR, true)}\n            >\n              <Icon name=\"user\" />\n              <span>New Author</span>\n            </Menu.Item>\n          )}\n\n          {currentProject && (\n            <Menu.Item\n              onClick={this.toggleModalState(MenuItemNames.NEW_TAG, true)}\n            >\n              <Icon name=\"tag\" />\n              <span>New Tag</span>\n            </Menu.Item>\n          )}\n\n          {currentProject && (\n            <Menu.Item\n              onClick={this.toggleModalState(\n                MenuItemNames.NEW_SOURCE_TYPE,\n                true\n              )}\n            >\n              <Icon name=\"tree\" />\n              <span>New Source Type</span>\n            </Menu.Item>\n          )}\n\n          {currentProject && (\n            <Menu.Item\n              onClick={this.toggleModalState(MenuItemNames.TAG_LIST, true)}\n            >\n              <Icon name=\"numbered list\" />\n              <span>List Tags</span>\n            </Menu.Item>\n          )}\n\n          {currentProject && (\n            <Menu.Item\n              onClick={this.toggleModalState(MenuItemNames.SOURCE_LIST, true)}\n            >\n              <Icon name=\"numbered list\" />\n              <span>List Sources</span>\n            </Menu.Item>\n          )}\n\n          {!AUTH_URLS.includes(path) ? (\n            <Menu.Item onClick={this.logout(this.hideSidebar)}>\n              <Icon name=\"sign-out\" />\n              <span>Logout</span>\n            </Menu.Item>\n          ) : (\n            undefined\n          )}\n        </Sidebar>\n\n        <Sidebar.Pusher style={{ height: \"100%\" }}>\n          {this.props.children}\n        </Sidebar.Pusher>\n\n        {this.state.modalState[MenuItemNames.NEW_TAG] && (\n          <NewTagModalForm\n            open={this.state.modalState[MenuItemNames.NEW_TAG]}\n            dismissModal={this.toggleModalState(MenuItemNames.NEW_TAG, false)}\n            style={{ marginTop: 0 }}\n            onTagCreated={this.props.onTagCreated}\n          />\n        )}\n\n        {this.state.modalState[MenuItemNames.NEW_SOURCE] && (\n          <SourceModal\n            open={this.state.modalState[MenuItemNames.NEW_SOURCE]}\n            dismissModal={this.toggleModalState(\n              MenuItemNames.NEW_SOURCE,\n              false\n            )}\n            style={{ marginTop: 0 }}\n          />\n        )}\n\n        {this.state.modalState[MenuItemNames.NEW_SOURCE_TYPE] && (\n          <NewSourceTypeModal\n            open={this.state.modalState[MenuItemNames.NEW_SOURCE_TYPE]}\n            dismissModal={this.toggleModalState(\n              MenuItemNames.NEW_SOURCE_TYPE,\n              false\n            )}\n            style={{ marginTop: 0 }}\n          />\n        )}\n\n        {this.state.modalState[MenuItemNames.SOURCE_LIST] && (\n          <SourcesModal\n            open={this.state.modalState[MenuItemNames.SOURCE_LIST]}\n            dismissModal={this.toggleModalState(\n              MenuItemNames.SOURCE_LIST,\n              false\n            )}\n          />\n        )}\n\n        {this.state.modalState[MenuItemNames.TAG_LIST] && (\n          <TagsModal\n            open={this.state.modalState[MenuItemNames.TAG_LIST]}\n            dismissModal={this.toggleModalState(MenuItemNames.TAG_LIST, false)}\n          />\n        )}\n\n        {this.state.modalState[MenuItemNames.NEW_AUTHOR] && (\n          <NewAuthorModal\n            open={this.state.modalState[MenuItemNames.NEW_AUTHOR]}\n            modal={true}\n            dismissModal={this.toggleModalState(\n              MenuItemNames.NEW_AUTHOR,\n              false\n            )}\n          />\n        )}\n      </Sidebar.Pushable>\n    );\n  };\n\n  private logout = (onHide: () => void) => () => {\n    onHide();\n\n    const { history } = this.props;\n\n    history.replace(LOGIN_URL);\n  };\n\n  private toggleModalState = (name: string, open: boolean) => () => {\n    if (open && this.context) {\n      this.hideSidebar();\n    }\n\n    this.setState(s =>\n      update(s, {\n        modalState: {\n          $set: initialState.modalState\n        }\n      })\n    );\n\n    this.setState(s =>\n      update(s, {\n        modalState: {\n          [name]: {\n            $set: open\n          }\n        }\n      })\n    );\n  };\n\n  private hideSidebar = () => {\n    if (this.context) {\n      const { minWidth600, onHide } = this.context;\n      if (minWidth600) {\n        return;\n      }\n\n      onHide();\n    }\n  };\n}\n\nexport default AppSideBar;\n","import { withRouter } from \"react-router\";\nimport { compose, graphql } from \"react-apollo\";\n\nimport AppSideBar from \"./component\";\nimport { userLocalMutationGql } from \"../../state/user.local.mutation\";\nimport CURRENT_PROJECT_LOCAL_QUERY, {\n  CurrProjLocalGqlProps,\n  CurrentProjectLocalData\n} from \"../../state/project.local.query\";\nimport { OwnProps } from \"./app-sidebar\";\n\nconst currentProjectLocalGql = graphql<\n  OwnProps,\n  CurrentProjectLocalData,\n  {},\n  CurrProjLocalGqlProps | undefined\n>(CURRENT_PROJECT_LOCAL_QUERY, {\n  props: props => props.data\n});\n\nexport default compose(\n  withRouter,\n  userLocalMutationGql,\n  currentProjectLocalGql\n)(AppSideBar);\n","import { SourceFullFrag, AuthorFrag } from \"./gen.types\";\n\nexport type AuthorWithFullName = AuthorFrag & {\n  fullName: string;\n};\n\nexport const authorFullName = (author: AuthorFrag) =>\n  [author.lastName, author.firstName, author.middleName]\n    .filter(v => !!v)\n    .join(\" \");\n\nexport const authorDisplay = (author: AuthorFrag | null) => {\n  if (!author) {\n    return \"\";\n  }\n\n  let display = \"\";\n\n  if (author.firstName) {\n    display += author.firstName.charAt(0);\n  }\n\n  if (author.middleName) {\n    author.middleName.split(\" \").forEach(mName => (display += mName.charAt(0)));\n  }\n\n  return display ? author.lastName + \" \" + display : author.lastName;\n};\n\nexport const sourceDisplay = (source: SourceFullFrag) => {\n  let display = source.authors.map(authorDisplay).join(\", \");\n\n  if (source.year) {\n    display += ` (${source.year})`;\n  }\n\n  display += \", \" + source.topic;\n\n  if (source.publication) {\n    display += \", \" + source.publication;\n  }\n\n  if (source.url) {\n    display += \" , \" + source.url;\n  }\n\n  display += \" | \" + source.sourceType.name;\n\n  return display;\n};\n","import React from \"react\";\nimport { ApolloError } from \"apollo-client\";\nimport { FetchResult } from \"react-apollo\";\n\nimport {\n  AuthorFrag,\n  CreateAuthor,\n  AuthorUpdate\n} from \"../../graphql/gen.types\";\nimport { CurrProjLocalGqlProps } from \"../../state/project.local.query\";\nimport { UserLocalGqlProps } from \"../../state/auth-user.local.query\";\n\nexport interface CreateAuthorMutationProps {\n  createAuthor: (\n    variables: FormValues\n  ) => Promise<void | FetchResult<CreateAuthor>>;\n}\n\ntype AuthorModalCreatedCb = (tag: AuthorFrag) => void;\n\nexport interface AuthorUpdateGqlProps {\n  authorUpdate: (\n    id: string,\n    form: FormValues\n  ) => Promise<void | FetchResult<AuthorUpdate>>;\n}\n\nexport interface OwnProps {\n  open: boolean;\n  dismissModal: () => void;\n  style: React.CSSProperties;\n  onAuthorCreated?: AuthorModalCreatedCb;\n  author?: AuthorFrag;\n  modal?: boolean;\n}\n\nexport type Props = CurrProjLocalGqlProps &\n  UserLocalGqlProps &\n  CreateAuthorMutationProps &\n  AuthorUpdateGqlProps &\n  OwnProps;\n\nexport interface FormValues {\n  lastName: string;\n  firstName?: string | null;\n  middleName?: string | null;\n}\n\nexport enum FORM_OUTPUT_KEY {\n  LAST_NAME = \"lastName\",\n  FIRST_NAME = \"firstName\",\n  MIDDLE_NAMES = \"middleName\"\n}\n\nexport interface State {\n  initialFormOutput: FormValues;\n  graphQlError?: ApolloError;\n  submitting: boolean;\n  author?: AuthorFrag;\n  open?: boolean;\n  createdAuthors: AuthorFrag[];\n  showSourceModal?: boolean;\n}\n\nexport const initialState: State = {\n  initialFormOutput: {\n    [FORM_OUTPUT_KEY.LAST_NAME]: \"\",\n    [FORM_OUTPUT_KEY.FIRST_NAME]: \"\",\n    [FORM_OUTPUT_KEY.MIDDLE_NAMES]: \"\"\n  },\n  graphQlError: undefined,\n  submitting: false,\n  createdAuthors: []\n};\n","import React from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { Modal } from \"semantic-ui-react\";\nimport { Input } from \"semantic-ui-react\";\nimport { Header } from \"semantic-ui-react\";\nimport { Message } from \"semantic-ui-react\";\nimport { Icon } from \"semantic-ui-react\";\nimport { Form } from \"semantic-ui-react\";\nimport { Formik } from \"formik\";\nimport { FormikProps, FormikActions } from \"formik\";\nimport { Field } from \"formik\";\nimport { FieldProps } from \"formik\";\nimport { FormikErrors } from \"formik\";\nimport isEmpty from \"lodash/isEmpty\";\nimport update from \"immutability-helper\";\n\nimport \"./new-author-modal.scss\";\nimport {\n  FORM_OUTPUT_KEY,\n  Props,\n  State,\n  FormValues,\n  initialState\n} from \"./new-author-modal\";\nimport { AuthorFrag } from \"../../graphql/gen.types\";\nimport { authorFullName } from \"../../graphql/utils\";\nimport SourceModal from \"../../components/SourceModal\";\n\nexport class NewAuthorModal extends React.Component<Props, State> {\n  contentRef = React.createRef<HTMLDivElement>();\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = update(initialState, {\n      open: {\n        $set: props.open\n      }\n    });\n\n    const { author } = props;\n\n    if (author) {\n      this.initStateWithAuthor(author);\n    }\n  }\n\n  render() {\n    const { style, modal } = this.props;\n    const { open, showSourceModal, createdAuthors } = this.state;\n\n    if (showSourceModal && createdAuthors.length) {\n      return <SourceModal open={true} authors={createdAuthors} />;\n    }\n\n    return modal ? (\n      <Modal\n        style={{ ...(style || {}), ...{ background: \"#fff\" } }}\n        className=\"src-components-new-author-modal\"\n        basic={true}\n        size=\"small\"\n        dimmer=\"inverted\"\n        open={open}\n        onClose={this.onResetClicked(() => null)}\n      >\n        <div className=\"new-author-content\" ref={this.contentRef}>\n          <Modal.Content>\n            {this.renderAuthorCreated()}\n\n            <Header icon=\"user\" content=\"Author Details\" />\n\n            {this.renderContent()}\n          </Modal.Content>\n        </div>\n      </Modal>\n    ) : (\n      this.renderContent()\n    );\n  }\n\n  renderContent = () => {\n    return (\n      <div>\n        {this.renderError()}\n\n        <Formik\n          initialValues={this.state.initialFormOutput}\n          enableReinitialize={true}\n          onSubmit={this.submit}\n          render={this.renderForm}\n          validate={this.validate}\n        />\n      </div>\n    );\n  };\n\n  validate = (values: FormValues) => {\n    const errors: FormikErrors<FormValues> = {};\n\n    for (const key of Object.keys(values)) {\n      const error = this[\n        `validate${key.charAt(0).toUpperCase()}${key.slice(1)}`\n      ](values[key]);\n\n      if (error) {\n        errors[key] = error;\n        return errors;\n      }\n    }\n\n    return errors;\n  };\n\n  validateLastName = (lastName: string | null) => {\n    if (!lastName) {\n      return \"Enter last name\";\n    }\n\n    if (lastName.length < 2) {\n      return \"Too short\";\n    }\n\n    return \"\";\n  };\n\n  validateFirstName = (firstName: string | null) => {\n    if (!firstName) {\n      return \"\";\n    }\n\n    return \"\";\n  };\n\n  validateMiddleName = (middleName: string | null) => {\n    if (!middleName) {\n      return \"\";\n    }\n\n    return \"\";\n  };\n\n  renderError = () => {\n    const { graphQlError } = this.state;\n\n    if (graphQlError) {\n      return (\n        <Message icon={true} error={true}>\n          <Icon name=\"ban\" />\n\n          <Message.Content>\n            <Message.Header>An error has occurred</Message.Header>\n\n            {graphQlError.message}\n          </Message.Content>\n        </Message>\n      );\n    }\n\n    return undefined;\n  };\n\n  onResetClicked = (reset: () => void) => () => {\n    reset();\n    this.props.dismissModal();\n  };\n\n  submit = async (values: FormValues, formikBag: FormikActions<FormValues>) => {\n    formikBag.setSubmitting(true);\n    const { author } = this.state;\n    const { onAuthorCreated, createAuthor, authorUpdate } = this.props;\n\n    try {\n      if (!author) {\n        const authorCreated = await (createAuthor &&\n          createAuthor(this.eliminateEmptyFields(values)));\n\n        if (\n          authorCreated &&\n          authorCreated.data &&\n          authorCreated.data.createAuthor\n        ) {\n          const { createAuthor: createdAuthor } = authorCreated.data;\n\n          if (onAuthorCreated) {\n            onAuthorCreated(createdAuthor);\n          } else {\n            this.handleAuthorCreated(createdAuthor);\n          }\n        }\n\n        formikBag.resetForm();\n      } else {\n        const authorUpdated = await (authorUpdate &&\n          authorUpdate(author.id, this.prepFormForUpdate(values)));\n\n        if (\n          authorUpdated &&\n          authorUpdated.data &&\n          authorUpdated.data.updateAuthor\n        ) {\n          if (onAuthorCreated) {\n            onAuthorCreated(authorUpdated.data.updateAuthor);\n          }\n\n          this.props.dismissModal();\n          return;\n        }\n      }\n    } catch (error) {\n      formikBag.setSubmitting(false);\n      this.setState({ graphQlError: error });\n    }\n  };\n\n  private renderForm = ({\n    handleReset,\n    dirty,\n    isSubmitting,\n    errors,\n    handleSubmit\n  }: FormikProps<FormValues>) => {\n    const dirtyOrSubmitting = !dirty || isSubmitting;\n    const disableSubmit = dirtyOrSubmitting || !isEmpty(errors);\n\n    return (\n      <div>\n        <Form onSubmit={handleSubmit}>\n          {[\n            [\"Last Name\", FORM_OUTPUT_KEY.LAST_NAME],\n            [\"First Name\", FORM_OUTPUT_KEY.FIRST_NAME],\n            [\"Middle Names\", FORM_OUTPUT_KEY.MIDDLE_NAMES]\n          ].map(data => {\n            const [label, name] = data;\n            return (\n              <Field key={name} name={name} render={this.renderInput(label)} />\n            );\n          })}\n\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              marginTop: \"20px\"\n            }}\n          >\n            <Button\n              id=\"author-modal-close\"\n              basic={true}\n              color=\"red\"\n              onClick={this.onResetClicked(handleReset)}\n              disabled={isSubmitting}\n              type=\"button\"\n            >\n              <Icon name=\"remove\" /> Dismiss\n            </Button>\n\n            <Button\n              id=\"author-modal-reset\"\n              color=\"olive\"\n              basic={true}\n              disabled={dirtyOrSubmitting}\n              onClick={handleReset}\n              type=\"button\"\n            >\n              <Icon name=\"repeat\" /> Reset\n            </Button>\n\n            <Button\n              id=\"author-modal-submit\"\n              color=\"green\"\n              inverted={true}\n              disabled={disableSubmit}\n              loading={isSubmitting}\n              type=\"submit\"\n            >\n              <Icon name=\"checkmark\" /> Ok\n            </Button>\n          </div>\n        </Form>\n      </div>\n    );\n  };\n\n  private renderInput = (label: string) => (\n    formProps: FieldProps<FormValues>\n  ) => {\n    const { field, form } = formProps;\n    const name = field.name as FORM_OUTPUT_KEY;\n    const error = form.errors[name];\n    const booleanError = !!error;\n    const touched = form.touched[name];\n\n    return (\n      <div>\n        <Form.Field\n          control={Input}\n          placeholder={label}\n          autoComplete=\"off\"\n          label={label}\n          id={name}\n          error={booleanError}\n          onBlur={this.handleFormControlBlur(name, form)}\n          onFocus={this.handleFocus}\n          {...field}\n        />\n\n        {booleanError && touched && (\n          <Message\n            style={{\n              display: \"block\",\n              padding: \"0.5em\",\n              marginBottom: \"1em\",\n              marginTop: \"-10px\"\n            }}\n            error={true}\n            header={error}\n          />\n        )}\n      </div>\n    );\n  };\n\n  private handleFormControlBlur = (\n    name: FORM_OUTPUT_KEY,\n    form: FormikProps<FormValues>\n  ) => () => {\n    form.setFieldTouched(name, true);\n  };\n\n  private handleFocus = () => {\n    this.setState({ graphQlError: undefined });\n  };\n\n  private eliminateEmptyFields = (values: FormValues) => {\n    const data = {} as FormValues;\n\n    for (let [k, val] of Object.entries(values)) {\n      if (val) {\n        val = val.trim();\n\n        if (val) {\n          data[k] = val;\n        }\n      }\n    }\n\n    return data;\n  };\n\n  private prepFormForUpdate = (values: FormValues) => {\n    const data = {} as FormValues;\n\n    for (const [k, val] of Object.entries(values)) {\n      data[k] = val.trim() || null;\n    }\n\n    return data;\n  };\n\n  private initStateWithAuthor = (author: AuthorFrag) => {\n    const start = {} as FormValues;\n    Object.values(FORM_OUTPUT_KEY).forEach(k => {\n      const val = author[k];\n      start[k] = val || \"\";\n    });\n\n    this.state = update(this.state, {\n      initialFormOutput: {\n        $set: start\n      },\n\n      author: {\n        $set: author\n      }\n    });\n  };\n\n  private renderAuthorCreated = () => {\n    const { createdAuthors } = this.state;\n    const len = createdAuthors.length;\n\n    if (!len) {\n      return;\n    }\n\n    return (\n      <Message success={true}>\n        <Message.Header className=\"authors-display-header\">\n          <span className=\"label\">\n            New author\n            {len === 1 ? \"\" : \"s\"} ({len}\n            ):\n          </span>\n\n          <Button\n            compact={true}\n            className=\"go-create-source\"\n            onClick={this.showCreateSourceModal}\n          >\n            Create source?\n          </Button>\n        </Message.Header>\n\n        <ol className=\"authors-list\">\n          {createdAuthors.map(this.renderAuthor)}\n        </ol>\n      </Message>\n    );\n  };\n\n  private renderAuthor = (author: AuthorFrag) => {\n    return <li key={author.id}>{authorFullName(author)}</li>;\n  };\n\n  private showCreateSourceModal = () =>\n    this.setState({ showSourceModal: true });\n\n  private handleAuthorCreated = (author: AuthorFrag) => {\n    this.setState(s =>\n      update(s, {\n        createdAuthors: {\n          $push: [author]\n        }\n      })\n    );\n\n    if (this.contentRef.current) {\n      this.contentRef.current.scrollTop = 0;\n    }\n  };\n}\n\nexport default NewAuthorModal;\n","import gql from \"graphql-tag\";\n\nimport authorFrag from \"./author.fragment\";\n\nexport const createAuthor = gql`\n  mutation CreateAuthor($author: CreateAuthorInput!) {\n    createAuthor(author: $author) {\n      ...AuthorFrag\n    }\n  }\n\n  ${authorFrag}\n`;\n\nexport default createAuthor;\n","import gql from \"graphql-tag\";\nimport { MutationFn } from \"react-apollo\";\n\nimport { authorFrag } from \"./author.fragment\";\nimport { AuthorUpdate, AuthorUpdateVariables } from \"./gen.types\";\n\nexport const authorUpdate = gql`\n  mutation AuthorUpdate($author: UpdateAuthorInput!) {\n    updateAuthor(author: $author) {\n      ...AuthorFrag\n    }\n  }\n\n  ${authorFrag}\n`;\n\nexport default authorUpdate;\n\nexport type AuthorUpdateFn = MutationFn<AuthorUpdate, AuthorUpdateVariables>;\n","import { graphql, compose } from \"react-apollo\";\nimport update from \"immutability-helper\";\n\nimport NewAuthorForm from \"./component\";\nimport {\n  CreateAuthorMutationProps,\n  OwnProps,\n  FormValues,\n  AuthorUpdateGqlProps\n} from \"./new-author-modal\";\nimport CREATE_AUTHOR_MUTATION from \"../../graphql/create-author.mutation\";\nimport AUTHORS_QUERY from \"../../graphql/authors.query\";\nimport {\n  CreateAuthor,\n  CreateAuthorVariables,\n  GetAllAuthors,\n  GetAllAuthorsVariables,\n  AuthorUpdate,\n  AuthorUpdateVariables\n} from \"../../graphql/gen.types\";\nimport { CreateAuthorFn } from \"../../graphql/ops.types\";\nimport USER_LOCAL_QUERY, {\n  UserLocalGqlData,\n  UserLocalGqlProps\n} from \"../../state/auth-user.local.query\";\nimport CURRENT_PROJECT_QUERY, {\n  CurrentProjectLocalData,\n  CurrProjLocalGqlProps\n} from \"../../state/project.local.query\";\nimport AUTHOR_UPDATE_MUTATION, {\n  AuthorUpdateFn\n} from \"../../graphql/update-author.mutation\";\n\nconst createAuthorGql = graphql<\n  OwnProps & UserLocalGqlData & CurrentProjectLocalData,\n  CreateAuthor,\n  CreateAuthorVariables,\n  CreateAuthorMutationProps | undefined\n>(CREATE_AUTHOR_MUTATION, {\n  props: props => {\n    const mutate = props.mutate as CreateAuthorFn;\n    const {\n      ownProps: { currentProject, user }\n    } = props;\n\n    if (currentProject && user) {\n      const projectId = currentProject.id;\n\n      return {\n        createAuthor: (variables: FormValues) =>\n          mutate({\n            variables: {\n              author: {\n                ...variables,\n                projectId,\n                userId: user.id\n              }\n            },\n\n            update: async (store, { data: newAuthorData }) => {\n              if (!newAuthorData) {\n                return;\n              }\n\n              const newAuthor = newAuthorData.createAuthor;\n\n              if (!newAuthor) {\n                return;\n              }\n\n              const query = {\n                query: AUTHORS_QUERY,\n                variables: {\n                  author: {\n                    projectId\n                  }\n                }\n              };\n\n              try {\n                const data = store.readQuery<\n                  GetAllAuthors,\n                  GetAllAuthorsVariables\n                >(query);\n\n                const newData = update(data, {\n                  authors: {\n                    $push: [newAuthor]\n                  }\n                });\n\n                store.writeQuery({ ...query, data: newData });\n              } catch (error) {\n                const msg = `Can't find field authors({\"author\":{\"projectId\":\"${projectId}\"}})`;\n\n                if (error.message.startsWith(msg)) {\n                  return;\n                }\n\n                throw error;\n              }\n            }\n          })\n      };\n    }\n\n    return undefined;\n  }\n});\n\nconst userLocalGql = graphql<\n  OwnProps,\n  UserLocalGqlData,\n  {},\n  UserLocalGqlProps | undefined\n>(USER_LOCAL_QUERY, {\n  props: props => props.data\n});\n\nconst currentProLocalGql = graphql<\n  OwnProps,\n  CurrentProjectLocalData,\n  {},\n  CurrProjLocalGqlProps | undefined\n>(CURRENT_PROJECT_QUERY, {\n  props: props => props.data\n});\n\nconst authorUpdateGql = graphql<\n  OwnProps,\n  AuthorUpdate,\n  AuthorUpdateVariables,\n  AuthorUpdateGqlProps | void\n>(AUTHOR_UPDATE_MUTATION, {\n  props: props => {\n    const mutate = props.mutate as AuthorUpdateFn;\n\n    return {\n      authorUpdate: (id: string, form: FormValues) =>\n        mutate({\n          variables: {\n            author: {\n              id,\n              ...form\n            }\n          }\n        })\n    };\n  }\n});\n\nexport default compose(\n  currentProLocalGql,\n  userLocalGql,\n  createAuthorGql,\n  authorUpdateGql\n)(NewAuthorForm);\n","import jss from \"jss\";\nimport preset from \"jss-preset-default\";\nimport { CSSProperties } from \"react\";\n\nimport { SimpleCss } from \"../../constants\";\nimport { ERROR_COLOR } from \"../../utils/colors\";\n\njss.setup(preset());\n\nexport const styles: SimpleCss = {\n  modal: {\n    marginTop: 0,\n    background: \"#fff\"\n  },\n\n  form: {\n    height: \"100%\",\n    overflowX: \"hidden\",\n    overflowY: \"auto\",\n    paddingRight: 10\n  },\n\n  fieldWrapper: {\n    marginBottom: \"1em\"\n  },\n\n  formButtonsContainer: {\n    display: \"flex\",\n    marginBottom: \"15px\"\n  },\n\n  submitButton: {\n    margin: \"0 15px\"\n  },\n\n  successCard: {\n    backgroundColor: \"#fcfff5\",\n    boxShadow: \"0 0 0 1px #a3c293 inset, 0 0 0 0 transparent\",\n    margin: \"auto\"\n  },\n\n  errorMessage: {\n    position: `relative`,\n    top: -10,\n    color: ERROR_COLOR\n  }\n};\n\nexport const modalStyle = styles.modal as CSSProperties;\n\nexport const { classes } = jss.createStyleSheet(styles).attach();\n","import { RouteComponentProps } from \"react-router-dom\";\nimport { ApolloError } from \"apollo-client\";\nimport { FetchResult } from \"react-apollo\";\nimport { WithFormikConfig, InjectedFormikProps } from \"formik\";\nimport { FormikErrors } from \"formik\";\n\nimport { SourceFullFrag } from \"../../graphql/gen.types\";\nimport { SourceTypeFrag } from \"../../graphql/gen.types\";\nimport { AuthorFrag } from \"../../graphql/gen.types\";\nimport { CreateSource } from \"../../graphql/gen.types\";\nimport { CreateSourceFn } from \"../../graphql/source.mutation\";\nimport { CurrentProjectLocalData } from \"../../state/project.local.query\";\nimport { authorFullName } from \"../../graphql/utils\";\n\nexport interface FormValues {\n  sourceType: SourceTypeFrag | null;\n  authors: AuthorFrag[];\n  topic: string;\n  publication: string;\n  url: string;\n  year: string;\n}\n\ntype FormErrors = { [k in keyof FormValues]: string };\n\nexport const initialFormValues: FormValues = {\n  sourceType: null,\n  authors: [],\n  topic: \"\",\n  publication: \"\",\n  url: \"\",\n  year: \"\"\n};\n\nexport interface State {\n  source?: SourceFullFrag;\n  formError?: ApolloError | { message: string };\n  open: boolean;\n}\n\nexport const initialState: State = { open: true };\n\nexport interface OwnProps extends CurrentProjectLocalData {\n  open: boolean;\n  dismissModal?: () => void;\n  style?: React.CSSProperties;\n  existingSource?: ExistingSourceProps;\n  createSource?: CreateSourceFn;\n  authors?: AuthorFrag[];\n}\n\nexport interface CreateSourceProps {\n  createSource: (\n    values: FormValues\n  ) => Promise<void | FetchResult<CreateSource>>;\n}\n\ntype PropsWithFormikProps = InjectedFormikProps<OwnProps, FormValues>;\n\nexport type Props = PropsWithFormikProps &\n  RouteComponentProps<{}> &\n  OwnProps &\n  CreateSourceProps;\n\nexport const formikConfig: WithFormikConfig<Props, FormValues> = {\n  handleSubmit: async values => null,\n\n  mapPropsToValues: ({ authors }) => {\n    const formAuthors = (authors || []).map((a: AuthorFrag) => ({\n      ...a,\n      fullName: authorFullName(a)\n    }));\n\n    return { ...initialFormValues, authors: formAuthors };\n  },\n\n  enableReinitialize: true,\n\n  validate: values => {\n    const errors: FormikErrors<FormErrors> = {};\n\n    if (!values.sourceType) {\n      errors.sourceType = \"Select a source type\";\n    } else if (!values.authors || !values.authors.length) {\n      errors.authors = \"Select at least one author\";\n    } else if (!values.topic || !values.topic.trim()) {\n      errors.topic = \"Enter source topic according to author(s)\";\n    }\n\n    return errors;\n  }\n};\n\nexport interface ExistingSourceProps {\n  onSourceChanged?: OnSourceChangedCb;\n  source: SourceFullFrag;\n}\n\nexport type OnSourceChangedCb = (source: SourceFullFrag) => void;\n","import React from \"react\";\nimport { FormikProps } from \"formik\";\nimport { Field } from \"formik\";\nimport { FieldProps } from \"formik\";\nimport { Form } from \"semantic-ui-react\";\nimport { Button } from \"semantic-ui-react\";\nimport { Icon } from \"semantic-ui-react\";\nimport { Header } from \"semantic-ui-react\";\nimport { Message } from \"semantic-ui-react\";\nimport { Input } from \"semantic-ui-react\";\nimport { Modal } from \"semantic-ui-react\";\nimport { Card } from \"semantic-ui-react\";\nimport isEmpty from \"lodash/isEmpty\";\n\nimport { CreateSource_createSource } from \"../../graphql/gen.types\";\nimport { AuthorFrag } from \"../../graphql/gen.types\";\nimport { sourceDisplay } from \"../../graphql/utils\";\nimport SourceTypeControlComponent from \"../SourceTypeControl\";\nimport AuthorsControlComponent from \"../AuthorsControl\";\nimport { makeSourceURL } from \"../../routes/util\";\nimport { styles } from \"./styles\";\nimport { classes } from \"./styles\";\nimport { modalStyle } from \"./styles\";\nimport { Props } from \"./source-modal\";\nimport { State } from \"./source-modal\";\nimport { initialState } from \"./source-modal\";\nimport { FormValues } from \"./source-modal\";\n\nexport class SourceModal extends React.Component<Props, State> {\n  state = initialState;\n\n  render() {\n    const { open, style, dismissModal } = this.props;\n\n    const toggleModal = dismissModal ? open : this.state.open;\n\n    return (\n      <Modal\n        style={{ ...(style || {}), ...modalStyle }}\n        basic={true}\n        size=\"small\"\n        dimmer=\"inverted\"\n        open={toggleModal}\n        onClose={this.resetModal}\n      >\n        {this.renderErrorOrSuccess()}\n\n        <Header icon=\"user\" content=\"Create quote source\" />\n\n        <Modal.Content>{this.renderForm()}</Modal.Content>\n      </Modal>\n    );\n  }\n\n  submit = async () => {\n    const { createSource, values, setSubmitting, resetForm } = this.props;\n\n    if (!createSource) {\n      this.setState({\n        formError: { message: \"You have not selected a project\" }\n      });\n\n      return;\n    }\n\n    setSubmitting(true);\n\n    try {\n      const result = await createSource(values);\n\n      setSubmitting(false);\n      resetForm();\n\n      if (!result) {\n        return;\n      }\n\n      const data = result.data;\n\n      if (!data) {\n        return;\n      }\n\n      const source = data.createSource as CreateSource_createSource;\n      this.setState({ source });\n    } catch (error) {\n      this.setState({ formError: error });\n      setSubmitting(false);\n    }\n  };\n\n  renderForm = () => {\n    const { handleReset, dirty, isSubmitting, errors } = this.props;\n    const dirtyOrSubmitting = !dirty || isSubmitting;\n    const disableSubmit = dirtyOrSubmitting || !isEmpty(errors);\n\n    return (\n      <Form className={classes.form} onSubmit={this.submit}>\n        <Field name=\"sourceType\" render={this.renderSourceTypeControl} />\n        <Field name=\"authors\" render={this.renderAuthorsControl} />\n\n        {[\n          { name: \"topic\" },\n          { name: \"year\" },\n          { name: \"publication\" },\n          { name: \"url\" }\n        ].map(this.renderTextControl)}\n\n        <div className={classes.formButtonsContainer}>\n          <Button\n            id=\"source-modal-close\"\n            basic={true}\n            color=\"red\"\n            onClick={this.resetModal}\n            disabled={isSubmitting}\n            type=\"button\"\n          >\n            <Icon name=\"remove\" /> Dismiss\n          </Button>\n\n          <Button\n            id=\"source-modal-submit\"\n            style={styles.submitButton}\n            color=\"green\"\n            disabled={disableSubmit}\n            loading={isSubmitting}\n          >\n            <Icon name=\"checkmark\" /> Ok\n          </Button>\n\n          <Button\n            basic={true}\n            color=\"red\"\n            onClick={handleReset}\n            disabled={dirtyOrSubmitting}\n          >\n            <Icon name=\"remove\" /> Reset\n          </Button>\n        </div>\n      </Form>\n    );\n  };\n\n  resetModal = async () => {\n    await this.setState(initialState);\n    this.dismissModal();\n  };\n\n  renderErrorOrSuccess = () => {\n    const { formError, source } = this.state;\n\n    if (formError) {\n      return (\n        <Message icon={true} error={true}>\n          <Icon name=\"ban\" />\n\n          <Message.Content>\n            <Message.Header>An error has occurred</Message.Header>\n\n            {formError.message}\n          </Message.Content>\n        </Message>\n      );\n    }\n\n    if (source) {\n      return (\n        <Card style={styles.successCard}>\n          <Card.Content>\n            <Card.Header style={{ color: \"#a3c293\" }}>Success</Card.Header>\n\n            <Card.Description>{sourceDisplay(source)}</Card.Description>\n\n            <Card.Content extra={true}>\n              <div className=\"ui two buttons\">\n                <Button\n                  basic={true}\n                  color=\"green\"\n                  onClick={this.goToSource(source.id)}\n                >\n                  Go to source\n                </Button>\n                <Button basic={true} color=\"red\" onClick={this.resetModal}>\n                  Dismiss\n                </Button>\n              </div>\n            </Card.Content>\n          </Card.Content>\n        </Card>\n      );\n    }\n\n    return undefined;\n  };\n\n  handleFocus = () =>\n    this.setState({ formError: undefined, source: undefined });\n\n  renderSourceTypeControl = (formProps: FieldProps<FormValues>) => {\n    const {\n      field: { name, value },\n      form\n    } = formProps;\n    const error = form.errors[name];\n    const booleanError = !!error;\n    const touched = form.touched[name];\n\n    return (\n      <div className={classes.fieldWrapper}>\n        <Form.Field\n          control={SourceTypeControlComponent}\n          label=\"Select source type\"\n          error={booleanError}\n          selectError={booleanError}\n          name={name}\n          value={value}\n          onFocus={this.handleFocus}\n          handleBlur={this.handleFormControlBlur(name, form)}\n          handleChange={this.handleControlChange(name, form)}\n        />\n\n        {this.renderFieldError(booleanError && touched, error)}\n      </div>\n    );\n  };\n\n  renderAuthorsControl = (formProps: FieldProps<FormValues>) => {\n    const {\n      field: { name, value },\n      form\n    } = formProps;\n    const error = form.errors[name];\n    const booleanError = !!error;\n    const touched = form.touched[name];\n\n    return (\n      <div className={classes.fieldWrapper}>\n        <Form.Field\n          control={AuthorsControlComponent}\n          label=\"Select authors\"\n          error={booleanError}\n          selectError={booleanError}\n          onFocus={this.handleFocus}\n          name={name}\n          value={value}\n          handleBlur={this.handleFormControlBlur(name, form)}\n          handleChange={this.handleControlChange(name, form)}\n        />\n\n        {this.renderFieldError(booleanError && touched, error)}\n      </div>\n    );\n  };\n\n  renderTextControl = ({ name, label }: { name: string; label?: string }) => {\n    label = label ? label : name.charAt(0).toUpperCase() + name.slice(1);\n\n    return (\n      <Field\n        key={name}\n        name={name}\n        render={this.renderTextControlFormik(label)}\n      />\n    );\n  };\n\n  renderTextControlFormik = (label: string) => (\n    formProps: FieldProps<FormValues>\n  ) => {\n    const { field, form } = formProps;\n    const { name } = field;\n    const error = form.errors[name];\n    const booleanError = !!error;\n    const touched = form.touched[name];\n\n    return (\n      <div className={classes.fieldWrapper}>\n        <Form.Field\n          control={Input}\n          placeholder={label}\n          label={label}\n          id={name}\n          error={booleanError}\n          autoComplete=\"off\"\n          onFocus={this.handleFocus}\n          {...field}\n        />\n\n        {this.renderFieldError(booleanError && touched, error)}\n      </div>\n    );\n  };\n\n  renderFieldError = (show: boolean, error: string) => {\n    return show ? (\n      <div className={classes.errorMessage}> {error} </div>\n    ) : (\n      undefined\n    );\n  };\n\n  handleFormControlBlur = (\n    name: string,\n    form: FormikProps<FormValues>\n  ) => () => {\n    form.setFieldTouched(name, true);\n  };\n\n  handleControlChange = (name: string, form: FormikProps<FormValues>) => (\n    val: undefined | AuthorFrag\n  ) => form.setFieldValue(name, val);\n\n  goToSource = (id: string) => async () => {\n    await this.setState(initialState);\n    this.dismissModal();\n    this.props.history.push(makeSourceURL(id));\n  };\n\n  private dismissModal = () => {\n    const { dismissModal } = this.props;\n\n    if (dismissModal) {\n      dismissModal();\n    } else {\n      this.setState({ open: false });\n    }\n  };\n}\n\nexport default SourceModal;\n","import gql from \"graphql-tag\";\nimport { MutationFn } from \"react-apollo\";\n\nimport { sourceFullFrag } from \"./source-full.fragment\";\nimport { CreateSourceVariables, CreateSource } from \"./gen.types\";\n\nexport const sourceMut = gql`\n  mutation CreateSource($source: CreateSourceInput!) {\n    createSource(source: $source) {\n      ...SourceFullFrag\n    }\n  }\n  ${sourceFullFrag}\n`;\n\nexport default sourceMut;\n\nexport type CreateSourceFn = MutationFn<CreateSource, CreateSourceVariables>;\n","import { withRouter } from \"react-router-dom\";\nimport { graphql, compose } from \"react-apollo\";\nimport { withFormik } from \"formik\";\nimport update from \"immutability-helper\";\n\nimport SourceModal from \"./component\";\nimport { CreateSource } from \"../../graphql/gen.types\";\nimport { CreateSourceVariables, Sources1Query } from \"../../graphql/gen.types\";\nimport CREATE_SOURCE_MUTATION, {\n  CreateSourceFn\n} from \"../../graphql/source.mutation\";\nimport SOURCES_QUERY from \"../../graphql/sources-1.query\";\nimport {\n  OwnProps,\n  CreateSourceProps,\n  FormValues,\n  formikConfig\n} from \"./source-modal\";\nimport CURRENT_PROJECT_QUERY, {\n  CurrentProjectLocalData,\n  CurrProjLocalGqlProps\n} from \"../../state/project.local.query\";\n\nconst currentProjGql = graphql<\n  {},\n  CurrentProjectLocalData,\n  {},\n  CurrProjLocalGqlProps | void\n>(CURRENT_PROJECT_QUERY, {\n  props: props => props.data\n});\n\nconst createSourceGraphql = graphql<\n  OwnProps,\n  CreateSource,\n  CreateSourceVariables,\n  CreateSourceProps | undefined\n>(CREATE_SOURCE_MUTATION, {\n  props: props => {\n    const mutate = props.mutate as CreateSourceFn;\n\n    if (!mutate) {\n      return;\n    }\n\n    const { currentProject } = props.ownProps;\n\n    if (!currentProject) {\n      return;\n    }\n\n    const { id: projectId } = currentProject;\n\n    return {\n      createSource: (values: FormValues) => {\n        const variables: CreateSourceVariables = {\n          source: {\n            sourceTypeId: (values.sourceType && values.sourceType.id) || \"0\",\n            authorIds: values.authors.map(a => a.id),\n            topic: values.topic.trim(),\n            publication: values.publication.trim() || null,\n            url: values.url.trim() || null,\n            year: values.year.trim() || null,\n            projectId\n          }\n        };\n\n        return mutate({\n          variables,\n\n          update: (store, { data: sourceData }) => {\n            if (!sourceData) {\n              return;\n            }\n\n            const { createSource: source } = sourceData;\n\n            if (!source) {\n              return;\n            }\n\n            const query = {\n              query: SOURCES_QUERY,\n              variables: {\n                source: { projectId }\n              }\n            };\n\n            try {\n              const data = store.readQuery(query) as Sources1Query;\n\n              const newData = update(data, {\n                sources: {\n                  $push: [source]\n                }\n              });\n\n              store.writeQuery({\n                ...query,\n                data: newData\n              });\n            } catch (error) {\n              const msg = error.message.startsWith(\n                `Can't find field sources({\"source\":{\"projectId\":\"${projectId}\"}})`\n              );\n\n              if (!msg) {\n                throw error;\n              }\n            }\n          }\n        });\n      }\n    };\n  }\n});\n\nexport default compose(\n  currentProjGql,\n  withRouter,\n  createSourceGraphql,\n  withFormik(formikConfig)\n)(SourceModal);\n","import Select, { OnChangeHandler } from \"react-select\";\nimport React from \"react\";\n\nimport { SourceTypeFrag } from \"../../graphql/gen.types\";\nimport { SourceTypeQueryComponent } from \"../../graphql/ops.types\";\nimport SOURCE_TYPE_QUERY from \"../../graphql/source-types.query\";\n\ninterface Props {\n  selectError: boolean;\n  handleChange: OnChangeHandler<SourceTypeFrag[]>;\n  handleBlur: () => void;\n  name: string;\n  value: SourceTypeFrag[];\n}\n\nexport class SourceTypeControlComponent extends React.Component<Props> {\n  render() {\n    const { name, value, selectError, handleChange, handleBlur } = this.props;\n\n    return (\n      <SourceTypeQueryComponent query={SOURCE_TYPE_QUERY}>\n        {({ data }) => {\n          let sourceTypes = [] as SourceTypeFrag[];\n\n          if (data) {\n            sourceTypes = data.sourceTypes as SourceTypeFrag[];\n          }\n\n          return (\n            <Select\n              className={`${selectError ? \"error\" : \"\"}`}\n              id={name}\n              name={name}\n              placeholder=\"Select source type\"\n              options={sourceTypes}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={value}\n              labelKey=\"name\"\n              valueKey=\"id\"\n            />\n          );\n        }}\n      </SourceTypeQueryComponent>\n    );\n  }\n}\n\nexport default SourceTypeControlComponent;\n","import SourceTypeControlComponent from \"./component\";\n\nexport default SourceTypeControlComponent;\n"],"sourceRoot":""}